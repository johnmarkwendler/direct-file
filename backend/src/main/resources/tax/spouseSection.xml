<?xml-model href="./FactDictionaryModule.rng"?>
<!-- The spouse section has its own module because its completion conditions are that complicated -->
<FactDictionaryModule>
  <Facts>

    <Fact path="/spouseSectionCompleted">
      <Name>Spouse Section is Completed</Name>
      <Description>The user has finished filling out the spouse section</Description>
      <Export downstreamFacts="true" />

      <Derived>
        <All>
          <Switch>
            <Case>
              <When>
                <Not>
                  <IsComplete>
                    <Dependency module="filers" path="/maritalStatus" />
                  </IsComplete>
                </Not>
              </When>
              <Then>
                <False />
              </Then>
            </Case>
            <Case>
              <When>
                <Any>
                  <!-- When the TP is single or divorced -->
                  <All>
                    <Not>
                      <Dependency module="filers" path="/isMarried" />
                    </Not>
                    <Not>
                      <Dependency module="filers" path="/isWidowed" />
                    </Not>
                  </All>
                  <!-- If the TP was widowed before TY minus two, we have all the info we need -->
                  <Dependency module="filers" path="/widowedBeforeTaxYearMinusTwo" />
                </Any>
              </When>
              <Then>
                <True />
              </Then>
            </Case>
            <Case>
              <!-- the TP is widowed in the QSS period -->
              <When>
                <Dependency module="filers" path="/widowedCouldQualifyForQSS" />
              </When>
              <Then>
                <All>
                  <IsComplete>
                    <Dependency module="filers" path="/canFileJointlyYearOfSpouseDeath" />
                  </IsComplete>
                </All>
              </Then>
            </Case>
            <Case>
              <!-- If the filing status is invalid, we need the filer to answer whether they lived together/apart
                   and about their citizenship/residency, and then we need to send them back to Filing Status -->
              <When>
                <All>
                  <IsComplete>
                    <Dependency module="filingStatus" path="/filingStatus" />
                  </IsComplete>
                  <Not>
                    <Dependency module="filingStatus" path="/isFilingStatusValid" />
                  </Not>
                </All>
              </When>
              <Then>
                <All>
                  <IsComplete>
                    <Dependency module="filers" path="/livedTogetherAllYearWithSpouse" />
                  </IsComplete>
                  <IsComplete>
                    <Dependency module="filers" path="/livedApartLastSixMonths" />
                  </IsComplete>
                  <Any>
                    <All>
                      <Not>
                        <Dependency module="filers" path="/livedApartLastSixMonths" />
                      </Not>
                      <IsComplete>
                        <Dependency module="filers" path="/separationAgreement" />
                      </IsComplete>
                    </All>
                    <Dependency module="filers" path="/livedApartLastSixMonths" />
                  </Any>
                  <IsComplete>
                    <Dependency module="filers" path="/secondaryFilerResidencyEligibleForMFJ" />
                  </IsComplete>
                </All>
              </Then>
            </Case>
            <Case>
              <!-- If the TP's spouse isn't eligible for MFJ, we send them to try for HoH. If they
              reach the filing status section and have to choose MFS, they'll be brought back to
              finish up the spouse section. -->
              <When>
                <Any>
                  <Dependency path="/NRASpouseTryingForHoh" />
                  <Dependency module="filingStatus" path="/isFilingStatusHOH" />
                </Any>
              </When>
              <Then>
                <Switch>
                  <Case>
                    <!-- If they filed as HoH and they can't file married, we need no more information -->
                    <When>
                      <Not>
                        <Dependency module="filingStatus" path="/maritalStatusAllowsFilingMarried" />
                      </Not>
                    </When>
                    <Then>
                      <True />
                    </Then>
                  </Case>
                  <Case>
                    <!-- But if they can file as married, we need to know what exception that allows them to file HoH -->
                    <When>
                      <True />
                    </When>
                    <Then>
                      <All>
                        <Dependency module="filers" path="/livedTogetherApartFlowIsComplete" />
                        <IsComplete>
                          <Dependency module="filers" path="/secondaryFilerResidencyEligibleForMFJ" />
                        </IsComplete>
                      </All>
                    </Then>
                  </Case>
                </Switch>
              </Then>
            </Case>
            <Case>
              <!-- the TP wants to qualify for HoH and either hasn't reached filing status,
                   or has reached filing status and qualified as HoH. We need to know if they
                   lived apart or had a separation agreement.
                -->
              <When>
                <All>
                  <Dependency module="filingStatus" path="/eligibleForMFJ" />
                  <Dependency module="filers" path="/livedApartLastSixMonths" />
                  <Dependency module="filingStatus" path="/wantsHeadOfHousehold" />
                  <Any>
                    <Not>
                      <IsComplete>
                        <Dependency module="filingStatus" path="/filingStatus" />
                      </IsComplete>
                    </Not>
                    <Dependency module="filingStatus" path="/isFilingStatusHOH" />
                  </Any>
                </All>
              </When>
              <Then>
                <True />
              </Then>
            </Case>
            <Case>
              <!-- The TP wants to file separately -->
              <When>
                <All>
                  <Dependency module="filingStatus" path="/maritalStatusAllowsFilingMarried" />
                  <Dependency module="filingStatus" path="/wantsSeparateReturn" />
                </All>
              </When>
              <Then>
                <All>
                  <Dependency module="filers" path="/livedTogetherApartFlowIsComplete" />
                  <Dependency path="/mfsSectionCompleted" />
                </All>
              </Then>
            </Case>
            <Case>
              <!-- The TP wants to file jointly -->
              <When>
                <All>
                  <Dependency module="filingStatus" path="/eligibleForMFJ" />
                  <Dependency module="filingStatus" path="/wantsJointReturn" />
                </All>
              </When>
              <Then>
                <All>
                  <Dependency module="filers" path="/livedTogetherApartFlowIsComplete" />
                  <Dependency path="/mfjSectionCompleted" />
                  <IsComplete>
                    <Dependency module="filers" path="/allSpouseFormsInScopedState" />
                  </IsComplete>
                  <IsComplete>
                    <Dependency module="filers" path="/spouseReceivedAlaskaPfd" />
                  </IsComplete>
                </All>
              </Then>
            </Case>
          </Switch>
          <Dependency module="filers" path="/hasCompletedRegisteredDomesticPartnerIfApplicable" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/NRASpouseTryingForHoh">
      <Name>Nonresident alien spouse try for HoH completed</Name>
      <Description>The taxpayer has entered a nonresident alien spouse and is going to try for HoH
        status</Description>
      <Derived>
        <All>
          <Not>
            <Dependency module="filers" path="/secondaryFilerResidencyEligibleForMFJ" />
          </Not>
          <Not>
            <IsComplete>
              <Dependency module="filingStatus" path="/filingStatus" />
            </IsComplete>
          </Not>
        </All>
      </Derived>
    </Fact>

    <Fact path="/readyToEnterSpouseInformation">
      <Name>Ready to enter Spouse Information</Name>
      <Description>The user is ready to enter spouse information</Description>
      <Derived>
        <All>
          <Dependency module="filingStatus" path="/maritalStatusAllowsFilingMarried" />
          <Not>
            <Dependency path="/NRASpouseTryingForHoh" />
          </Not>
        </All>
      </Derived>
    </Fact>

    <Fact path="/mfsSectionCompleted">
      <Name>MFS Section Completed</Name>
      <Description>The MFS section of the spouse section has been completed</Description>
      <Derived>
        <All>
          <Any>
            <!-- The condition that would lead us to not get to the final question -->
            <Dependency module="filers" path="/MFSSpouseProvidesNoBenefits" />
            <!-- Ensures we answer all of the follow up questions about age and vision -->
            <All>
              <Not>
                <Dependency module="filers" path="/MFSSpouseProvidesNoBenefits" />
              </Not>
              <IsComplete>
                <Dependency module="filers" path="/MFSSpouse65OrOlder" />
              </IsComplete>
              <IsComplete>
                <Dependency module="filers" path="/secondaryFiler/isBlind" />
              </IsComplete>
            </All>
          </Any>
          <Any>
            <!-- They either entered a TIN or we don't need one-->
            <IsComplete>
              <Dependency module="filers" path="/secondaryFiler/tin" />
            </IsComplete>
            <Not>
              <Dependency module="filers" path="/MFSNeedSpouseTaxId" />
            </Not>
          </Any>
          <IsComplete>
            <Dependency module="standardDeduction" path="/filerMFSAndSpouseIsEligibleForStandardDeductions" />
          </IsComplete>
        </All>
      </Derived>
    </Fact>

    <Fact path="/mfjSectionCompleted">
      <Name>MFJ Section Completed</Name>
      <Description>The MFJ section of the spouse section has been completed</Description>
      <Derived>
        <All>
          <Any>
            <!-- Neither TP is claimable as a dependent -->
            <Not>
              <Dependency module="filers" path="/flowMFJSpouseFilingRequirementSubsection" />
            </Not>
            <!-- They are not claimable as dependents because they are MFJ and required to file -->
            <Dependency module="filers" path="/MFJRequiredToFile" />
            <!-- They could be claimable as dependents and have made a choice -->
            <All>
              <IsComplete>
                <Dependency module="filers" path="/MFJClaimingRefundOnly" />
              </IsComplete>
              <Any>
                <Not>
                  <Dependency module="filers" path="/MFJClaimingRefundOnly" />
                </Not>
                <All>
                  <Dependency path="/mfjDependentChoiceA" />
                  <Any>
                    <Not>
                      <Dependency module="filers" path="/secondaryFiler/canBeClaimed" />
                    </Not>
                    <IsComplete>
                      <Dependency module="filers" path="/secondaryFiler/willBeClaimed" />
                    </IsComplete>
                  </Any>
                </All>
              </Any>
            </All>
          </Any>
          <!-- We have a lot of conditions here to account for taxpayers that switch from MFS to MFJ -->
          <IsComplete>
            <Dependency module="filers" path="/secondaryFiler/tin" />
          </IsComplete>
          <IsComplete>
            <Dependency module="filers" path="/secondaryFiler/hasIpPin" />
          </IsComplete>
          <IsComplete>
            <Dependency module="filers" path="/secondaryFiler/dateOfBirth" />
          </IsComplete>
          <IsComplete>
            <Dependency module="filers" path="/secondaryFiler/occupation" />
          </IsComplete>
          <Switch>
            <Case>
              <When>
                <All>
                  <Dependency module="filers" path="/isWidowed" />
                  <Equal>
                    <Left>
                      <Dependency module="filers" path="/yearOfSpouseDeath" />
                    </Left>
                    <Right>
                      <Enum optionsPath="/yearOfSpouseDeathOptions">taxYear</Enum>
                    </Right>
                  </Equal>
                </All>
              </When>
              <Then>
                <IsComplete>
                  <Dependency module="filers" path="/secondaryFilerDateOfDeath" />
                </IsComplete>
              </Then>
            </Case>
            <Case>
              <When>
                <True />
              </When>
              <Then>
                <True />
              </Then>
            </Case>
          </Switch>
          <Dependency module="filers" path="/secondaryFilerSocialSecurityNumberRestrictionsAreComplete" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/needsMoreMFSSpouseInfo">
      <Description>
        The user needs to enter more info about an MFS spouse
      </Description>
      <Derived>
        <All>
          <Dependency module="filingStatus" path="/isFilingStatusMFS" />
          <Not>
            <Dependency path="/mfsSectionCompleted" />
          </Not>
        </All>
      </Derived>
    </Fact>

    <Fact path="/needsMoreMFJSpouseInfo">
      <Description>
        The user needs to enter more info about an MFJ spouse
      </Description>
      <Derived>
        <All>
          <Dependency module="filingStatus" path="/isFilingStatusMFJ" />
          <Not>
            <Dependency path="/mfjSectionCompleted" />
          </Not>
        </All>
      </Derived>
    </Fact>

    <Fact path="/isMFJWithLivingSpouse">
      <Description>
        The user is married filing jointly and was not widowed in the tax year. We need to create a
        disjunction to handle cases where widows filing jointly see different screens from non-widows filing jointly.
      </Description>
      <Export downstreamFacts="true" />

      <Derived>
        <All>
          <Dependency module="filingStatus" path="/isFilingStatusMFJ" />
          <Dependency module="filers" path="/isMarried" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/MFJDepedentsEnrolledMarketplacePlan">
      <Description>
        Whether the MFJ filer who is treated like a dependent was in enrolled in a marketplace plan for at
        least one month.
      </Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/advancedPTCPaymentsMade">
      <Description>
        Whether advance payments of the Premium Tax Credit (PTC) were made to help pay for the coverage
        primary, secondary or anyone they enrolled.
      </Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/MFJDNotEnrolledMarketplacePlanAndNoAdvancedPTCPaymentsMade">
      <Description>
        If TP was NOT enrolled in a marketplace plan and NO advance payments of the Premium Tax Credit (PTC)
        were made to help pay for the coverage primary, secondary or anyone they enrolled.
      </Description>

      <Derived>
        <Any>
          <Not>
            <Dependency path="/MFJDepedentsEnrolledMarketplacePlan" />
          </Not>
          <Not>
            <Dependency path="/advancedPTCPaymentsMade" />
          </Not>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/refundOnlyAndMFJDEnrolledMarketplacePlanAndAdvancedPTCPaymentsMade">
      <Description>
        If TP chose the redund only option, was NOT enrolled in a marketplace plan and NO advance payments of
        the Premium Tax Credit (PTC) were made to help pay for the coverage primary, secondary or anyone they enrolled.
      </Description>

      <Derived>
        <All>
          <Dependency module='filers' path="/MFJClaimingRefundOnly" />
          <Dependency path="/MFJDepedentsEnrolledMarketplacePlan" />
          <Dependency path="/advancedPTCPaymentsMade" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/mfjdEnrolleesOptions">
      <Description>MFJ Dependent Enrollees options</Description>

      <Derived>
        <EnumOptions>
          <String>primary</String>
          <String>secondary</String>
          <String>someoneElseThatPrimaryOrSecondaryEnrolled</String>
        </EnumOptions>
      </Derived>
    </Fact>

    <Fact path="/mfjdEnrollees">
      <Description>MFJ Dependent Enrollees</Description>

      <Writable>
        <MultiEnum optionsPath="/mfjdEnrolleesOptions" />
      </Writable>
    </Fact>

    <Fact path="/mfjdEnrolleeHasSelf">
      <Description>
        Was the primary TP enrolled in a qualified Marketplace health plan with advance payments of the
        Premium Tax Credit (PTC)?
      </Description>

      <Derived>
        <EnumOptionsContains>
          <Options>
            <Dependency path="/mfjdEnrollees" />
          </Options>
          <Value>
            <Enum optionsPath="/mfjdEnrolleesOptions">primary</Enum>
          </Value>
        </EnumOptionsContains>
      </Derived>
    </Fact>

    <Fact path="/mfjdEnrolleeHasSpouse">
      <Description>
        Was the spouse enrolled in a qualified Marketplace health plan with advance payments of the Premium
        Tax Credit (PTC)?
      </Description>

      <Derived>
        <EnumOptionsContains>
          <Options>
            <Dependency path="/mfjdEnrollees" />
          </Options>
          <Value>
            <Enum optionsPath="/mfjdEnrolleesOptions">secondary</Enum>
          </Value>
        </EnumOptionsContains>
      </Derived>
    </Fact>

    <Fact path="/mfjdEnrolleeHasOther">
      <Description>
        Someone else was enrolled in a qualified Marketplace health plan with Advance Premium Tax Credit
        (PTC) payments were made
      </Description>

      <Derived>
        <EnumOptionsContains>
          <Options>
            <Dependency path="/mfjdEnrollees" />
          </Options>
          <Value>
            <Enum optionsPath="/mfjdEnrolleesOptions">someoneElseThatPrimaryOrSecondaryEnrolled</Enum>
          </Value>
        </EnumOptionsContains>
      </Derived>
    </Fact>

    <Fact path="/refundOnlyMFJDEnrollMarketPlanAPTCPaymentsMadeEnrolleeIsOther">
      <Description>
        If TP chose the redund only option, was enrolled in a marketplace plan and Advance Premium Tax Credit
        (PTC) payments were made were made to help pay for enrollment for someone else.
      </Description>

      <Derived>
        <All>
          <Dependency path="/refundOnlyAndMFJDEnrolledMarketplacePlanAndAdvancedPTCPaymentsMade" />
          <Dependency path="/mfjdEnrolleeHasOther" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/refundOnlyMFJDEnrollMarketPlanAPTCPaymentsMadeEnrolleeIsNotOther">
      <Description>
        If TP chose the redund only option, was enrolled in a marketplace plan and Advance Premium Tax Credit
        (PTC) payments were made were made to help pay for enrollment for themselves only.
      </Description>

      <Derived>
        <All>
          <Dependency path='/refundOnlyAndMFJDEnrolledMarketplacePlanAndAdvancedPTCPaymentsMade' />
          <Not>
            <Dependency path='/mfjdEnrolleeHasOther' />
          </Not>
        </All>
      </Derived>
    </Fact>

    <Fact path="/mfjdOtherTaxFamily">
      <Description>
        If the person enrolled by primary TP or spouse is part of some other family
      </Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/mfjdOneOrBothTPEnrolledThemselves">
      <Description>
        If one or both TP enrolled themselves
      </Description>

      <Derived>
        <Any>
          <Dependency path='/mfjdEnrolleeHasSelf' />
          <Dependency path='/mfjdEnrolleeHasSpouse' />
        </Any>
      </Derived>
    </Fact>

    <Fact path="/mfjdBothTPEnrolledThemselves">
      <Description>
        If one or both TP enrolled themselves
      </Description>

      <Derived>
        <All>
          <Dependency path='/mfjdEnrolleeHasSelf' />
          <Dependency path='/mfjdEnrolleeHasSpouse' />
        </All>
      </Derived>
    </Fact>

    <Fact path="/mfjdOK">
      <Description>
        Some MFJ (primary, secondary or both) considering to be dependent, second instance of the same screen
      </Description>

      <Derived>
        <All>
          <Dependency path='/refundOnlyMFJDEnrollMarketPlanAPTCPaymentsMadeEnrolleeIsOther' />
          <Dependency path='/mfjdOtherTaxFamily' />
          <Not>
            <Dependency path='/mfjdOneOrBothTPEnrolledThemselves' />
          </Not>
        </All>
      </Derived>
    </Fact>

    <Fact path="/primaryFilerHasMarketplacePlanAndIsNotClaimedAsDependent">
      <Description>
        The primary filer is enrolled in a qualified Marketplace health plan, and not claimed by anyone as a
        dependent.
      </Description>

      <Derived>
        <All>
          <Not>
            <Dependency module="filers" path="/primaryFilerIsClaimedAsDependent" />
          </Not>
          <Dependency path='/mfjdEnrolleeHasSelf' />
        </All>
      </Derived>
    </Fact>

    <Fact path="/secondaryFilerHasMarketplacePlanAndIsNotClaimedAsDependent">
      <Description>
        The secondary filer is enrolled in a qualified Marketplace health plan, and is not claimed by anyone
        as a dependent.
      </Description>

      <Derived>
        <All>
          <Not>
            <Dependency module="filers" path="/secondaryFilerIsClaimedAsDependent" />
          </Not>
          <Dependency path='/mfjdEnrolleeHasSpouse' />
        </All>
      </Derived>
    </Fact>

    <Fact path="/eitherFilerHasMarketplacePlanAndIsNotClaimedAsDependent">
      <Description>
        Either the primary or the secondary filer is enrolled in a qualified Marketplace health plan, and the
        enrolled filer is not claimed by anyone as a dependent.
      </Description>

      <Derived>
        <Any>
          <Dependency path='/primaryFilerHasMarketplacePlanAndIsNotClaimedAsDependent' />
          <Dependency path='/secondaryFilerHasMarketplacePlanAndIsNotClaimedAsDependent' />
        </Any>
      </Derived>
    </Fact>

    <Fact path="/mfjdSwitchNotDependentTP">
      <Description>
        Switch to NOT Depenent TP : You can't prepare federal tax return as independent taxpayers. There are
        3 ways one can set this fact true. 1. The TP enrolled did NOT enroll someone else AND no one else is claiming
        the TP as a dependent, 2. The TP did enroll someone else along with either themselves and/or their spouse AND
        APTC were made AND no one else is claiming the TP as a dependent, 3. The TP did enroll someone else along with
        either themselves and/or their spouse AND APTC were not made.
      </Description>

      <Derived>
        <All>
          <Dependency path='/refundOnlyAndMFJDEnrolledMarketplacePlanAndAdvancedPTCPaymentsMade' />
          <Any>
            <!-- Path 1 -->
            <All>
              <Not>
                <Dependency path='/mfjdEnrolleeHasOther' />
              </Not>
              <Dependency path="/eitherFilerHasMarketplacePlanAndIsNotClaimedAsDependent" />
            </All>
            <!-- Path 2 -->
            <All>
              <Dependency path='/mfjdEnrolleeHasOther' />
              <Dependency path='/mfjdOtherTaxFamily' />
              <Dependency path='/mfjdOneOrBothTPEnrolledThemselves' />
              <Dependency path="/eitherFilerHasMarketplacePlanAndIsNotClaimedAsDependent" />
            </All>
            <!-- Path 3 -->
            <All>
              <Dependency path='/mfjdEnrolleeHasOther' />
              <Not>
                <Dependency path='/mfjdOtherTaxFamily' />
              </Not>
            </All>
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/mfjdOkFormNotRequired">
      <Description>
        MFJD OK form not required
      </Description>

      <Derived>
        <Any>
          <!-- Case 1 -->
          <All>
            <Not>
              <Dependency path='/mfjdEnrolleeHasOther' />
            </Not>
            <Not>
              <Dependency path="/eitherFilerHasMarketplacePlanAndIsNotClaimedAsDependent" />
            </Not>
          </All>
          <!-- Case 2 -->
          <All>
            <Dependency path='/mfjdOneOrBothTPEnrolledThemselves' />
            <Dependency path='/mfjdEnrolleeHasOther' />
            <Dependency path='/mfjdOtherTaxFamily' />
            <Not>
              <Dependency path="/eitherFilerHasMarketplacePlanAndIsNotClaimedAsDependent" />
            </Not>
          </All>

        </Any>
      </Derived>
    </Fact>

    <Fact path="/mfjDependentChoiceA">
      <Description>
        MFJ Dependent Choice A
      </Description>

      <Derived>
        <All>
          <Dependency module='filers' path='/MFJClaimingRefundOnly' />
          <Any>
            <Dependency path='/MFJDNotEnrolledMarketplacePlanAndNoAdvancedPTCPaymentsMade' />
            <Dependency path='/mfjdOK' />
            <Dependency path='/mfjdOkFormNotRequired' />
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path='/notDependentNotOtherTaxFamily'>
      <Description>
        Not dependent and not other tax family
      </Description>

      <Derived>
        <All>
          <Dependency path="/refundOnlyMFJDEnrollMarketPlanAPTCPaymentsMadeEnrolleeIsOther" />
          <Not>
            <Dependency path='/mfjdOtherTaxFamily' />
          </Not>
        </All>
      </Derived>
    </Fact>

    <Fact path='/dependentClaimedAndEnrolleeIsSelf'>
      <Description>
        Not dependent and not other tax family
      </Description>

      <Derived>
        <All>
          <Dependency module="filers" path="/eitherFilerIsClaimedAsDependent" />
          <Dependency path='/mfjdEnrolleeHasSelf' />
          <Not>
            <Dependency path='/mfjdEnrolleeHasSpouse' />
          </Not>
        </All>
      </Derived>
    </Fact>

    <Fact path='/dependentClaimedAndEnrolleeIsSpouse'>
      <Description>
        Not dependent and not other tax family
      </Description>

      <Derived>
        <All>
          <Dependency module="filers" path="/eitherFilerIsClaimedAsDependent" />
          <Dependency path='/mfjdEnrolleeHasSpouse' />
          <Not>
            <Dependency path='/mfjdEnrolleeHasSelf' />
          </Not>
        </All>
      </Derived>
    </Fact>

    <Fact path='/dependentClaimedAndEnrolleeIsBoth'>
      <Description>
        Not dependent and not other tax family
      </Description>

      <Derived>
        <All>
          <Dependency module="filers" path="/eitherFilerIsClaimedAsDependent" />
          <Dependency path='/mfjdBothTPEnrolledThemselves' />
        </All>
      </Derived>
    </Fact>

    <Fact path='/showMFJDChoiceBDynamic'>
      <Description>
        Whether to show the dynamic content. It's your choice because you are filing jointly with you
        spouse...
      </Description>

      <Writable>
        <Boolean />
      </Writable>
      <Placeholder>
        <True />
      </Placeholder>
    </Fact>

  </Facts>
</FactDictionaryModule>
