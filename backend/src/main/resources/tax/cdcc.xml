<?xml-model href="./FactDictionaryModule.rng"?>
<FactDictionaryModule>
  <!-- Form 2441 - See: https://www.irs.gov/instructions/i2441 -->
  <Facts>
    <Fact path="/shouldSubmitForm2441">
      <Description>Whether Form 2441 should be submitted</Description>
      <Export mef="true" />

      <Derived>
        <Any>
          <Dependency path="/isReceivingCdccCredit" />
          <Dependency path="/hasReportedDependentCareBenefits" />
        </Any>
      </Derived>
    </Fact>

    <Fact path="/isReceivingCdccCredit">
      <Description>
        The TP is receiving CDCC so must submit Form 2441
      </Description>
      <Export downstreamFacts="true" />

      <Derived>
        <GreaterThan>
          <Left>
            <Dependency path="/cdccTotalCredit" />
          </Left>
          <Right>
            <Dollar>0</Dollar>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/cdccQualified">
      <Description>
        The TP is eligible for the CDCC credit, and paid expenses for at least one
        qualifying person.
      </Description>
      <Export downstreamFacts="true" mef="true" />

      <Derived>
        <All>
          <Dependency path="/cdccHasQualifyingExpenses" />
          <Dependency path="/isReceivingCdccCredit" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccOrEitcQualified">
      <Description>
        The TP is eligible for the EITC, or the CDCC credit and paid expenses for at least one
        qualifying
        person. Used for gating showing additional information (tin/pin).
      </Description>

      <Derived>
        <Any>
          <Dependency path="/cdccQualified" />
          <Dependency module="eitc" path="/eitcQualified" />
        </Any>
      </Derived>
    </Fact>

    <Fact path="/maybeEligibleForDependentCareBenefits">
      <Description>
        Whether the filer has qualifying persons and qualifying expenses
      </Description>

      <Derived>
        <All>
          <Dependency path="/cdccHasQualifyingPersons" />
          <Dependency path="/cdccHasQualifyingExpensesForBenefit" />
          <Dependency path="/hasReportedDependentCareBenefits" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccHasExcludedBenefits">
      <Description>Whether the TP has excluded benefits amount greater than 0</Description>

      <Derived>
        <GreaterThan>
          <Left>
            <Dependency path="/cdccExcludedBenefitsAmount" />
          </Left>
          <Right>
            <Dollar>0</Dollar>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/cdccQualifiedForBenefit">
      <Description>
        The TP qualified for the CDCC benefit and should enter care providers
      </Description>

      <Derived>
        <All>
          <Dependency path="/maybeEligibleForDependentCareBenefits" />
          <Dependency path="/cdccHasExcludedBenefits" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/shouldIncludeCareProviders">
      <Description>Whether care providers (f2441 Part I) should be included in the xml or pdf. Care providers would not
        be shown if
        the TP did not qualify for the benefit or the credit, but the TP still had to fill out the form 2441
        because they
        received dependent care benefits</Description>
      <Export mef="true" />

      <Derived>
        <Any>
          <Dependency path="/cdccQualifiedForBenefit" />
          <Dependency path="/cdccQualified" />
        </Any>
      </Derived>
    </Fact>

    <Fact path="/maybeEligibleForCdccBase">
      <Description>
        Whether the filer could potentially have qualifying earned income that can be used to qualify for the
        CDCC
      </Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <Not>
                <Dependency module="filingStatus" path="/isFilingStatusMFJ" />
              </Not>
            </When>
            <Then>
              <Any>
                <Dependency module="formW2s" path="/primaryFilerHasCombatPay" />
                <GreaterThan>
                  <Left>
                    <Dependency module="income" path="/primaryFilerEmployerIncomeSubtotalBase" />
                  </Left>
                  <Right>
                    <Dollar> 0 </Dollar>
                  </Right>
                </GreaterThan>
              </Any>
            </Then>
          </Case>
          <Case>
            <When>
              <Dependency module="filingStatus" path="/isFilingStatusMFJ" />
            </When>
            <Then>
              <All>
                <Any>
                  <Dependency module="formW2s" path="/primaryFilerHasCombatPay" />
                  <Dependency module="filers" path="/primaryFiler/isStudentOrDisabled" />
                  <GreaterThan>
                    <Left>
                      <Dependency module="income" path="/primaryFilerEmployerIncomeSubtotalBase" />
                    </Left>
                    <Right>
                      <Dollar> 0 </Dollar>
                    </Right>
                  </GreaterThan>
                </Any>
                <Any>
                  <Dependency module="formW2s" path="/MFJSpouseHasCombatPay" />
                  <Dependency module="filers" path="/secondaryFiler/isStudentOrDisabled" />
                  <GreaterThan>
                    <Left>
                      <Dependency module="income" path="/secondaryFilerEmployerIncomeSubtotalBase" />
                    </Left>
                    <Right>
                      <Dollar> 0 </Dollar>
                    </Right>
                  </GreaterThan>
                </Any>
              </All>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/maybeEligibleForCdcc">
      <Description>
        Whether there are dependents who are eligible for the Child and Dependent Care Credits.
        Based on filer
        + spouse information + income + child tests
      </Description>
      <Export downstreamFacts="true" />

      <Derived>
        <All>
          <Dependency module="schedule3" path="/hasTaxLiabilityBeforeNrCredits" />
          <Dependency path="/maybeEligibleForCdccWoTaxLiability" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/maybeEligibleForCdccWoTaxLiability">
      <Description>
        Whether the taxpayer might be eligible for CDCC, without considering whether they have tax liability
        against which the credit could be applied.
      </Description>
      <Export downstreamFacts="true" />

      <Derived>
        <All>
          <Dependency path="/maybeEligibleForCdccBase" />
          <Dependency path="/cdccHasQualifyingPersons" />
          <Not>
            <Dependency path="/cdccPotentialCdccIsZeroOrLessDueToExclusionBenefits" />
          </Not>
          <Any>
            <Dependency module="filers" path="/mfsButEligibleForCdcc" />
            <Not>
              <Dependency module="filingStatus" path="/isFilingStatusMFS" />
            </Not>
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/flowShowCdccQualifyingPersonsLoop">
      <Description>
        Whether to show the qualifying persons loop. Used after combat pay election is determined
      </Description>
      <Derived>
        <All>
          <Dependency path="/cdccMaybeHasQualifyingExpenses" />
          <Any>
      <!-- Is not MFJ and has earned income -->
            <All>
              <Not>
                <Dependency module="filingStatus" path="/isFilingStatusMFJ" />
              </Not>
              <GreaterThan>
                <Left>
                  <Add>
                    <Dependency module="income" path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits" />
                    <Dependency module="income"
                      path="/cdccPrimaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits" />
                  </Add>
                </Left>
                <Right>
                  <Dollar>0</Dollar>
                </Right>
              </GreaterThan>
            </All>
      <!-- Is MFJ and both filers have earned income -->
            <All>
              <Dependency module="filingStatus" path="/isFilingStatusMFJ" />
              <GreaterThan>
                <Left>
                  <LesserOf>
                    <Add>
                      <Dependency module="income" path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits" />
                      <Dependency module="income"
                        path="/cdccPrimaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits" />
                    </Add>
                    <Add>
                      <Dependency module="income" path="/cdccSecondaryEarnedIncomeWithCombatPayForCredits" />
                      <Dependency module="income"
                        path="/cdccSecondaryFilerMaximumEarnedIncomeAdjustmentFromTaxableBenefits" />
                    </Add>
                  </LesserOf>
                </Left>
                <Right>
                  <Dollar>
                    0
                  </Dollar>
                </Right>
              </GreaterThan>
            </All>
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/flowKnockoutHouseholdEmployee">
      <Name>Flow Knockout due to Household Employee</Name>
      <Description>Whether the filer should be knocked out because they have a household employee</Description>
      <Export downstreamFacts="true" />

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/cdccHasQualifyingNonFilers">
      <Name>Filer has Qualifying Persons for CDCC</Name>
      <Description>Whether the filer has at least one Qualifying Family and Household Member for the Child and Dependent
        Care Credit</Description>

      <Derived>
        <All>
          <IsComplete>
            <!-- If there are no dependents, the collection is considered incomplete during testing -->
            <Dependency module="familyAndHousehold" path="/cdccQualifyingNonFilersCount" />
          </IsComplete>
          <GreaterThan>
            <Left>
              <Dependency module="familyAndHousehold" path="/cdccQualifyingNonFilersCount" />
            </Left>
            <Right>
              <Int>0</Int>
            </Right>
          </GreaterThan>
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccHasQualifyingFilers">
      <Name>One or more filers is a Qualifying Person for CDCC</Name>
      <Description>One or more filers is a Qualifying Person for CDCC</Description>

      <Derived>
        <All>
          <IsComplete>
            <Dependency module="filers" path="/cdccQualifyingFilers" />
          </IsComplete>
          <GreaterThan>
            <Left>
              <Dependency module="filers" path="/cdccQualifyingFilersCount" />
            </Left>
            <Right>
              <Int>0</Int>
            </Right>
          </GreaterThan>
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccMoreThanOneQualifyingPerson">
      <Name>More than one person--either a qualifying person or filer--is eligible for the CDCC</Name>
      <Derived>
        <GreaterThan>
          <Left>
            <Dependency path="/cdccCountOfQualifyingPersons" />
          </Left>
          <Right>
            <Int>1</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/cdccHasQualifyingPersons">
      <Name>Filer has Qualifying Persons for CDCC</Name>
      <Description>Whether the filer has at least one Qualifying Person (either a non-filer or filer) for the Child and
        Dependent Care Credit</Description>
      <Export mef="true" />

      <Derived>
        <Any>
          <Dependency path="/cdccHasQualifyingNonFilers" />
          <Dependency path="/cdccHasQualifyingFilers" />
        </Any>
      </Derived>
    </Fact>

    <Fact path="/dependentCareBenefitsIsComplete">
      <Description>Determines that the dependent care benefits subcategory is complete</Description>
      <Export downstreamFacts="true" />

      <Derived>
        <All>
          <IsComplete>
            <Dependency path="/cdccTaxableBenefits" />
          </IsComplete>
          <IsComplete>
            <Dependency path="/flowKnockoutHouseholdEmployee" />
          </IsComplete>
          <Any>
            <Not>
              <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInBenefits" />
            </Not>
            <Dependency path="/disabledOrStudentFlowIsComplete" />
          </Any>
          <Any>
            <Not>
              <Dependency path="/cdccQualifiedForBenefit" />
            </Not>
            <Dependency path="/cdccCareProvidersIsComplete" />
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/disabledOrStudentFlowIsComplete">
      <Description>Whether the disabled student knockout flow is complete</Description>
      <Derived>
        <All>
          <Any>
            <Not>
              <Dependency module="filers" path="/primaryFiler/isStudentOrDisabled" />
            </Not>
            <IsComplete>
              <Dependency path="/primaryFilerMadeLessThanDisabledOrStudentMonthlyIncome" />
            </IsComplete>
          </Any>
          <Any>
            <Not>
              <Dependency module="filingStatus" path="/isFilingStatusMFJ" />
            </Not>
            <Not>
              <Dependency module="filers" path="/secondaryFiler/isStudentOrDisabled" />
            </Not>
            <IsComplete>
              <Dependency path="/secondaryFilerMadeLessThanDisabledOrStudentMonthlyIncome" />
            </IsComplete>
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProvidersIsDone">
      <Description>The TP is done adding care providers</Description>

      <Writable>
        <Boolean />
      </Writable>
      <Placeholder>
        <False />
      </Placeholder>
    </Fact>

    <Fact path="/countOfCompleteCareProviders">
      <Name>The number of complete care providers</Name>
      <Description>The number of complete care providers added by the filer. Maybe less than total care providers</Description>
      <Derived>
        <CollectionSize>
          <Filter path="/cdccCareProviders">
            <Dependency path="isComplete" />
          </Filter>
        </CollectionSize>
      </Derived>
    </Fact>

    <Fact path="/hasExactlyOneCompleteCareProvider">
      <Name>Filer has exactly one care provider</Name>
      <Description>Whether the filer has exactly one care provider</Description>
      <Derived>
        <Equal>
          <Left>
            <Dependency path="/countOfCompleteCareProviders" />
          </Left>
          <Right>
            <Int>1</Int>
          </Right>
        </Equal>
      </Derived>
    </Fact>

    <Fact path="/hasAtLeastOneCareProvider">
      <Name>Filer has at least one completed care provider</Name>
      <Description>Whether the filer has one or more completed care providers</Description>
      <Derived>
        <GreaterThan>
          <Left>
            <Dependency path="/countOfCompleteCareProviders" />
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/hasIncompleteCareProviders">
      <Derived>
        <GreaterThan>
          <Left>
            <CollectionSize>
              <Filter path="/cdccCareProviders">
                <Not>
                  <Dependency path="isComplete" />
                </Not>
              </Filter>
            </CollectionSize>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProvidersIsComplete">
      <Derived>
        <Any>
          <All>
            <Dependency path="/cdccCareProvidersIsDone" />
            <Dependency path="/hasAtLeastOneCareProvider" />
            <Not>
              <Dependency path="/hasIncompleteCareProviders" />
            </Not>
          </All>
          <Not>
            <Dependency path="/shouldIncludeCareProviders" />
          </Not>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/cdccSectionIsComplete">
      <Description>TP did not qualify for CDCC or was done entering care providers</Description>
      <Export downstreamFacts="true" />

      <Derived>
        <Any>
          <!-- /maybeEligibleForCdcc is false
           def: /maybeEligibleForCdcc checks whether filer is eligible and filer has qps
           -->
          <All>
            <Not>
              <Dependency path="/maybeEligibleForCdcc" />
            </Not>
            <IsComplete>
              <Dependency path="/maybeEligibleForCdcc" />
            </IsComplete>
          </All>
          <!-- /maybeEligibleForCdcc is true AND /cdccPotentialCdccIsZeroOrLessDueToExclusionBenefits is 0
           def: /cdccPotentialCdccIsZeroOrLessDueToExclusionBenefits checks that they have no remaining credit after
           benefits were excluded
           -->
          <All>
            <Dependency path="/maybeEligibleForCdcc" />
            <IsComplete>
              <Dependency path="/maybeEligibleForCdcc" />
            </IsComplete>
            <Dependency path="/cdccPotentialCdccIsZeroOrLessDueToExclusionBenefits" />
          </All>
          <!-- /maybeEligibleForCdcc is true AND there were no expenses -->
          <All>
            <Dependency path="/maybeEligibleForCdcc" />
            <IsComplete>
              <Dependency path="/maybeEligibleForCdcc" />
            </IsComplete>
            <Not>
              <Dependency path="/cdccMaybeHasQualifyingExpenses" />
            </Not>
            <IsComplete>
              <Dependency path="/cdccMaybeHasQualifyingExpenses" />
            </IsComplete>
          </All>
          <!-- /cdccQualified is false and complete
           def: /cdccQualified checks whether the filer is eligible, has qps and has qualified expenses)
           -->
          <All>
            <Not>
              <Dependency path="/cdccQualified" />
            </Not>
            <IsComplete>
              <Dependency path="/cdccQualified" />
            </IsComplete>
          </All>

          <!-- /cdccQualified is true AND /cdccCareProvidersIsComplete is true -->
          <All>
            <Dependency path="/cdccQualified" />
            <IsComplete>
              <Dependency path="/cdccQualified" />
            </IsComplete>
            <Dependency path="/cdccCareProvidersIsComplete" />
            <!--      There are no non-dependent qualifying people pins/tins to collect      -->
            <Dependency module="familyAndHousehold" path="/cdccNonDepQpTinsNoneToCollect" />

            <!-- Special earned income knockout is complete if shown to user -->
            <Any>
              <Not>
                <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInCredits" />
              </Not>
              <All>
                <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInCredits" />
                <Dependency path="/disabledOrStudentFlowIsComplete" />
              </All>
            </Any>
          </All>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/writableCdccHasQualifyingExpenses">
      <Name>Filer has Qualifying Expenses CDCC</Name>
      <Description>Whether the filer has any qualifying expenses for the Child and Dependent Care
        Credit. This is for the
        credit section, which means that they cannot include excluded benefits.</Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/cdccPrimaryFilerBaseWagesAreLessThanMaxExclusion">
      <Derived>
        <LessThan>
          <Left>
            <Dependency module="income" path="/primaryFilerEmployerIncomeSubtotalBase" />
          </Left>
          <Right>
            <Dependency path="/cdccMaximumExclusion" />
          </Right>
        </LessThan>
      </Derived>
    </Fact>

    <Fact path="/cdccSecondaryFilerBaseWagesAreLessThanMaxExclusion">
      <Derived>
        <All>
          <Dependency module="filingStatus" path="/isFilingStatusMFJ" />
          <LessThan>
            <Left>
              <Dependency module="income" path="/secondaryFilerEmployerIncomeSubtotalBase" />
            </Left>
            <Right>
              <Dependency path="/cdccMaximumExclusion" />
            </Right>
          </LessThan>
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccHasQualifyingExpenses">
      <Description>
        Whether the filer is eligible for CDCC and we have collected qualifying expenses greater than 0.
      </Description>

      <Derived>
        <All>
          <Dependency path="/flowShowCdccQualifyingPersonsLoop" />
          <Dependency path="/maybeEligibleForCdcc" />
          <Dependency path="/cdccMaybeHasQualifyingExpenses" />
          <GreaterThan>
            <Left>
              <Dependency path="/cdccUncappedQualifyingExpenses" />
            </Left>
            <Right>
              <Dollar>0</Dollar>
            </Right>
          </GreaterThan>
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccMaybeHasQualifyingExpenses">
      <Description>
        Whether the filer is eligible for CDCC and says they have qualifying expenses, before we actually
        ask
        per qualifying person.
      </Description>
      <Export downstreamFacts="true" />

      <Derived>
        <All>
          <Dependency path="/maybeEligibleForCdcc" />
          <Dependency path="/writableCdccHasQualifyingExpenses" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/combatPayCouldImpactCdccCredits">
      <Description>Whether the filer should be asked about their combat pay election for CDCC</Description>
      <Export downstreamFacts="true" />

      <Derived>
        <All>
          <Dependency module="formW2s" path="/someFilerHasCombatPay" />
          <Dependency path="/maybeEligibleForCdcc" />
          <Dependency path="/cdccMaybeHasQualifyingExpenses" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccCombatPayElection">
      <Name>Combat pay election for CDCC</Name>
      <Description>
        Whether the taxpayer elects to include their nontaxable combat pay for Child and Dependent
        Care
        Credit.

        They may choose to elect their own combat pay, their spouse's combat pay separately, or both
        of their
        combat pay should they each have combat pay.
      </Description>
      <Export downstreamFacts="true" />

      <Writable>
        <Enum optionsPath="/combatPayOptions" />
      </Writable>
    </Fact>

    <Fact path="/combatPayCouldImpactDependentCareBenefits">
      <Description>Whether the filer should be asked about their combat pay election for CDCC in Benefits</Description>
      <Export downstreamFacts="true" />

      <Derived>
        <All>
          <Dependency module="formW2s" path="/someFilerHasCombatPay" />
          <Dependency path="/hasReportedDependentCareBenefits" />
          <Dependency path="/cdccHasQualifyingPersons" />
          <Any>
            <Dependency path="/cdccPrimaryFilerBaseWagesAreLessThanMaxExclusion" />
            <Dependency path="/cdccSecondaryFilerBaseWagesAreLessThanMaxExclusion" />
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccCombatPayElectionForBenefits">
      <Name>Combat pay election for CDCC</Name>
      <Description>
        Whether the taxpayer elects to include their nontaxable combat pay for Child and Dependent
        Care
        Credit.

        They may choose to elect their own combat pay, their spouse's combat pay separately, or both
        of their
        combat pay should they each have combat pay.
      </Description>
      <Export downstreamFacts="true" />

      <Writable>
        <Enum optionsPath="/combatPayOptions" />
      </Writable>
    </Fact>

    <Fact path="/cdccCombatPayRecommendation">
      <Name>Recommended combat pay election choice for CDCC</Name>
      <Description>The Recommended combat pay election choice which would maximize the user's CDCC benefits</Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency module="formW2s" path="/bothFilersHasCombatPay" />
            </When>
            <Then>
              <Enum optionsPath="/combatPayOptions">useBothCombatPay</Enum>
            </Then>
          </Case>
          <Case>
            <When>
              <Dependency module="formW2s" path="/onlyPrimaryFilerHasCombatPay" />
            </When>
            <Then>
              <Enum optionsPath="/combatPayOptions">usePrimaryCombatPay</Enum>
            </Then>
          </Case>
          <Case>
            <When>
              <Dependency module="formW2s" path="/onlyMFJSpouseHasCombatPay" />
            </When>
            <Then>
              <Enum optionsPath="/combatPayOptions">useSpouseCombatPay</Enum>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccCreditLimit">
      <Name>Tax Liability Credit Limit</Name>
      <Description>
        The maximum possible credit the filer can receive for CDCC, calculated using the Credit
        Limit
        Worksheet

        NOTE: While this is currently equivalent to `/totalTentativeTax`, this is being kept as a
        separate fact
        for clarity and because this value will change if/when the other forms/lines are supported
        Form 2441, line 10
      </Description>
      <Export mef="true" />

      <!--
        Calculated using the "Credit Limit Worksheet"

        """
        Credit Limit Worksheet
        Complete this worksheet to figure the amount to enter on line 10.
        1.	Enter the amount from Form 1040, 1040-SR, or 1040-NR, line 18	1.	_____
        2.	Enter the amount from Schedule 3 (Form 1040), line 1 (foreign tax credit) and line 6l (Form
      8978, line 14)	2.	_____
        3.	Subtract line 2 from line 1. Also enter this amount on Form 2441, line 10. But if zero or less,
      stop; you can’t take
      the credit
        """

        Line 18 maps to `/totalTentativeTax`

        Neither "Foreign tax credit" nor "Form 8798, Partner's Additional Reporting Year Tax" are currently
      supported
        and are not included in these calculations
      -->

      <Derived>
        <Dependency module="taxCalculations" path="/totalTentativeTax" />
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders">
      <Name>Care Providers</Name>
      <Description>
        Care providers for the services for which the filer paid qualifying expenses

        Form 2441, Line 1
      </Description>

      <Writable>
        <Collection />
      </Writable>
    </Fact>

    <Fact path="/cdccCareProviders/*/isComplete">
      <Description>
        A collection item is complete
      </Description>

      <Derived>
        <All>
          <IsComplete>
            <Dependency path="../displayName" />
          </IsComplete>
          <Any>
            <IsComplete>
              <Dependency path="../address" />
            </IsComplete>
            <IsComplete>
              <Dependency path="../formW2" />
            </IsComplete>
          </Any>
          <Any>
            <IsComplete>
              <Dependency path="../ein" />
            </IsComplete>
            <IsComplete>
              <Dependency path="../tin" />
            </IsComplete>
            <IsComplete>
              <Dependency path="../dueDiligence" />
            </IsComplete>
            <Dependency path="../isTaxExempt" />
            <All>
              <Dependency path="../isEmployerFurnished" />
              <IsComplete>
                <Dependency path="../hasW2Employer" />
              </IsComplete>
              <Dependency path="../hasW2Employer" />
            </All>
          </Any>
          <IsComplete>
            <Dependency path="../amountPaidForCare" />
          </IsComplete>
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccShouldIncludeMoreThanThreeCareProviders">
      <Name>More than three care providers</Name>
      <Description>
        Whether there are more than three care providers, and care providers should be included.
        Used in pdf
        Form 2441 - Part 1 Header checkbox, xml field,
        and to determine whether to include an additional care providers
        statement
      </Description>
      <Export mef="true" />

      <Derived>
        <All>
          <Dependency path="/shouldIncludeCareProviders" />
          <GreaterThan>
            <Left>
              <CollectionSize>
                <Dependency path="/cdccCareProviders" />
              </CollectionSize>
            </Left>
            <Right>
              <Int>3</Int>
            </Right>
          </GreaterThan>
        </All>
      </Derived>
    </Fact>

    <Fact path="/pdfNone">
      <Description>String value 'none'</Description>

      <Derived>
        <String>none</String>
      </Derived>
    </Fact>

    <Fact path="/hasNoCareProviders">
      <Description>Whether the filer had no care providers</Description>

      <Derived>
        <Equal>
          <Left>
            <CollectionSize>
              <Dependency path="/cdccCareProviders" />
            </CollectionSize>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </Equal>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/writableIsOrganization">
      <Name>Provider is Organization</Name>
      <Description>Whether the care provider is an organization or business (as opposed to an
        individual)</Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/cdccCareProviders/*/isOrganization">
      <Name>Provider is Organization</Name>
      <Description>Whether the care provider is an organization or business (as opposed to an
        individual)</Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Any>
                <Not>
                  <Dependency path="/hasReportedDependentCareBenefits" />
                </Not>
                <Not>
                  <Dependency path="../isEmployerFurnished" />
                </Not>
              </Any>
            </When>
            <Then>
              <Dependency path="../writableIsOrganization" />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <True />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/collectProviderDetails">
      <Description>Based on not having the information from a W2, show the name question</Description>
      <Export mef="true" />

      <Derived>
        <Any>
          <Not>
            <Dependency path="../isEmployerFurnished" />
          </Not>
          <All>
            <Dependency path="../isEmployerFurnished" />
            <Not>
              <Dependency path="../hasW2Employer" />
            </Not>
            <Dependency path="/hasCdccCarryoverAmountFromPriorTaxYear" />
          </All>
          <Not>
            <Dependency path="/hasReportedDependentCareBenefits" />
          </Not>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/writableOrganizationName">
      <Name>Organization Name</Name>
      <Description>The name of the organization providing the service.</Description>

      <Writable>
        <String />
        <Limit type="Match">
          <!-- N.B. This is not the same regex as business name line 2! Slashes are not allowed on
          line 1 -->
          <String><![CDATA[(([A-Za-z0-9#\-\(\)]|&|')\s?)*([A-Za-z0-9#\-\(\)]|&|')]]></String>
        </Limit>
        <Limit type="MaxLength">
          <Int>75</Int>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/cdccCareProviders/*/organizationName">
      <Name>Organization Name</Name>
      <Description>The name of the organization providing the service.</Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <Dependency path="../isOrganization" />
                <Dependency path="../collectProviderDetails" />
              </All>
            </When>
            <Then>
              <Dependency path="../writableOrganizationName" />
            </Then>
          </Case>
          <Case>
            <When>
              <All>
                <Dependency path="../isOrganization" />
                <Dependency path="../isEmployerFurnished" />
                <Not>
                  <Dependency path="../collectProviderDetails" />
                </Not>
              </All>
            </When>
            <Then>
              <Dependency module="formW2s" path="../employerWhoFurnishedCare/employerName" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>


    <Fact path="/cdccCareProviders/*/writableFirstName">
      <Name>First name</Name>
      <Description>The first name of the provider. Must match the name as known to the Social
        Security Administration.</Description>

      <Writable>
        <String />
        <Limit type="Match">
          <String><![CDATA[[\sA-Za-z\-]+]]></String>
        </Limit>
        <Limit type="MaxLength">
          <Int>20</Int>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/cdccCareProviders/*/firstName">
      <Name>First name</Name>
      <Description>The first name of the provider. Must match the name as known to the Social
        Security Administration.</Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="../collectProviderDetails" />
            </When>
            <Then>
              <Dependency path="../writableFirstName" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/writableLastName">
      <Name>Last name</Name>
      <Description>The last name of the provider. Must match the name as known to the Social
        Security Administration.</Description>

      <Writable>
        <String />
        <Limit type="Match">
          <String><![CDATA[[\sA-Za-z\-]+]]></String>
        </Limit>
        <Limit type="MaxLength">
          <Int>20</Int>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/cdccCareProviders/*/lastName">
      <Name>Last name</Name>
      <Description>The last name of the provider. Must match the name as known to the Social
        Security Administration.</Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="../collectProviderDetails" />
            </When>
            <Then>
              <Dependency path="../writableLastName" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/fullName">
      <Name>Full name</Name>
      <Description>
        The first name and last name of the care provider.
      </Description>

      <Derived>
        <Paste>
          <Dependency path="../firstName" />
          <Dependency path="../lastName" />
        </Paste>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/displayName">
      <Description>
        The name of the provider, whether it was an organization or an individual
      </Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="../isOrganization" />
            </When>
            <Then>
              <Dependency path="../organizationName" />
            </Then>
          </Case>
          <Case>
            <When>
              <All>
                <Not>
                  <Dependency path="../isOrganization" />
                </Not>
                <Dependency path="../collectProviderDetails" />
              </All>
            </When>
            <Then>
              <Dependency path="../fullName" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/writableAddress">
      <Name>Address</Name>
      <Description>The care provider's address</Description>

      <Writable>
        <Address />
      </Writable>
    </Fact>

    <Fact path="/cdccCareProviders/*/address">
      <Name>Address</Name>
      <Description>The care provider's address</Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="../collectProviderDetails" />
            </When>
            <Then>
              <Dependency path="../writableAddress" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/mefAddressZip">
      <Description>The care provider's address zip formatted for mef</Description>
      <Export mef="true" />

      <Derived>
        <Trim>
          <StripChars>
            <Input>
              <Dependency path="../address/postalCode" />
            </Input>
            <Allow>
              <Dependency module="mefTypes" path="/mefZipCodeType" />
            </Allow>
          </StripChars>
        </Trim>
      </Derived>

    </Fact>

    <Fact path="/cdccCareProviders/*/pdfAddress">
      <Name>Address</Name>
      <Description>The care provider's address used in the f2441 pdf</Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <Not>
                <Dependency path="../collectProviderDetails" />
              </Not>
            </When>
            <Then>
              <Dependency path="../pdfSeeW2Address" />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Paste>
                <Dependency path="../address/streetAddress" />
                <Dependency path="../address/city" />
                <Dependency path="../address/stateOrProvence" />
                <Dependency path="../address/postalCode" />
              </Paste>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/isEmployerFurnished">
      <Description>Whether employer furnished care and therefore should see w2 for care provider's
        address</Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/cdccCareProviders/*/isEmployerFurnishedWithW2">
      <Description>
        True if the care provider is employer furnished, and the filer has a W2 with them this year
        False
        if
        the care provider is (or isn't) employer furnished and/or the filer did not have a W2 with this employer this
        year.
      </Description>
      <Derived>
        <All>
          <IsComplete>
            <Dependency path="../isEmployerFurnished" />
          </IsComplete>
          <Dependency path="../isEmployerFurnished" />
          <Dependency path="../hasW2Employer" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/writableEmployerWhoFurnishedCare">
      <Description>W2 of employer who furnished care provider</Description>

      <Writable>
        <CollectionItem collection="/formW2s" />
      </Writable>
    </Fact>

    <Fact path="/cdccCareProviders/*/employerWhoFurnishedCare">
      <Description>W2 of employer who furnished care provider</Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <Dependency path="../isEmployerFurnished" />
                <Dependency path="../hasW2Employer" />
                <Dependency module="formW2s" path="/filersHaveExactlyOneW2" />
              </All>
            </When>
            <Then>
              <Dependency module="formW2s" path="/oneAndOnlyW2" />
            </Then>
          </Case>
          <Case>
            <When>
              <All>
                <Dependency path="../isEmployerFurnished" />
                <Dependency path="../hasW2Employer" />
                <Not>
                  <Dependency module="formW2s" path="/filersHaveExactlyOneW2" />
                </Not>
              </All>
            </When>
            <Then>
              <Dependency path="../writableEmployerWhoFurnishedCare" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/hasW2Employer">
      <Description>This care provider was furnished by an employer for whom we have a form W2 listed</Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/cdccCareProviders/*/flowEmployerMustBeAdded">
      <Description>This care provider was furnished by an employer, but we don't have their w2 and there was no
        carryover so we must ask them to add them to jobs</Description>
      <Derived>
        <All>
          <Dependency path="../isEmployerFurnished" />
          <Not>
            <Dependency path="../hasW2Employer" />
          </Not>
          <Not>
            <Dependency path="/hasReportedCarryOverAmountFromPriorTaxYear" />
          </Not>
        </All>
      </Derived>
    </Fact>

    <Fact path="/showCdccNondependentQpTinPin">
      <Description>
        Whether we should show the TIN and ID Pin screens in Credits CDCC due to nondependent qualifying
        people.
      </Description>

      <Derived>
        <All>
          <Dependency path="/cdccQualified" />
          <GreaterThan>
            <Left>
              <CollectionSize>
                <Dependency module="familyAndHousehold" path="/cdccNonDependentQualifyingPeopleAssignedTins" />
              </CollectionSize>
            </Left>
            <Right>
              <Int>0</Int>
            </Right>
          </GreaterThan>
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/formW2">
      <Description>W2 of employer who furnished care provider</Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <Dependency module="formW2s" path="/filersHaveExactlyOneW2" />
                <IsComplete>
                  <Dependency path="../hasW2Employer" />
                </IsComplete>
                <Dependency path="../hasW2Employer" />
              </All>
            </When>
            <Then>
              <Dependency module="formW2s" path="/oneAndOnlyW2" />
            </Then>
          </Case>
          <Case>
            <When>
              <Not>
                <Dependency module="formW2s" path="/filersHaveExactlyOneW2" />
              </Not>
            </When>
            <Then>
              <Dependency path="../employerWhoFurnishedCare" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/pdfSeeW2Address">
      <Description>Used for the care provider's address if the employer furnished care. Determines
        if 'See W-2' should be
        shown for address line 1(b).</Description>

      <Derived>
        <String>See W-2</String>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/mefSeeW2Address">
      <Description>Used for the care provider's address if employer furnished care and TP had W2 for that employer.
        Provides mef
        code.</Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Not>
                <Dependency path="../collectProviderDetails" />
              </Not>
            </When>
            <Then>
              <String>SEEW2</String>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/writableTin">
      <Name>TIN</Name>
      <Description>The care provider's TIN</Description>

      <Writable>
        <TIN />
      </Writable>
    </Fact>

    <Fact path="/cdccCareProviders/*/tin">
      <Name>TIN</Name>
      <Description>The care provider's TIN</Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <Dependency path="../hasTinOrEin" />
                <Not>
                  <Dependency path="../isOrganization" />
                </Not>
                <Dependency path="../collectProviderDetails" />
              </All>
            </When>
            <Then>
              <Dependency path="../writableTin" />
            </Then>
          </Case>
        </Switch>

      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/writableEin">
      <Name>EIN</Name>
      <Description>The care provider's EIN</Description>

      <Writable>
        <EIN />
      </Writable>
    </Fact>

    <Fact path="/cdccCareProviders/*/ein">
      <Name>TIN</Name>
      <Description>The care provider's EIN</Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <Dependency path="../hasTinOrEin" />
                <Dependency path="../isOrganization" />
                <Dependency path="../collectProviderDetails" />
                <Not>
                  <Dependency path="../isTaxExempt" />
                </Not>
              </All>
            </When>
            <Then>
              <Dependency path="../writableEin" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/hasTinOrEin">
      <Description>Whether the care provider has either a TIN or EIN</Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/cdccCareProviders/*/pdfTinEinColumn">
      <Name>TIN</Name>
      <Description>The care provider's EIN if a (non tax-exempt) organization, TIN if an individual, 'Tax-Exempt' if
        tax-exempt, and 'See
        Attached Statement' if they have a due diligence statement</Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="../needsDueDiligenceStatement" />
            </When>
            <Then>
              <String>See Attached Statement</String>
            </Then>
          </Case>
          <!--    The below case covers when the provider is employer furnished and has a W2      -->
          <Case>
            <When>
              <Not>
                <Dependency path="../collectProviderDetails" />
              </Not>
            </When>
            <Then>
              <String />
            </Then>
          </Case>
          <Case>
            <When>
              <All>
                <Dependency path="../isOrganization" />
                <Dependency path="../isTaxExempt" />
              </All>
            </When>
            <Then>
              <Dependency path="/pdfTaxExempt" />
            </Then>
          </Case>
          <Case>
            <When>
              <All>
                <Dependency path="../isOrganization" />
                <Not>
                  <Dependency path="../isTaxExempt" />
                </Not>
              </All>
            </When>
            <Then>
              <AsString>
                <Dependency path="../ein" />
              </AsString>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <AsString>
                <Dependency path="../tin" />
              </AsString>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/writableIsTaxExempt">
      <Name>Tax Exempt</Name>
      <Description>Whether the care provider is tax exempt</Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/cdccCareProviders/*/isTaxExempt">
      <Description>Whether the care provider is tax exempt</Description>

      <Derived>
        <All>
          <Dependency path="../collectProviderDetails" />
          <Dependency path="../isOrganization" />
          <Dependency path="../writableIsTaxExempt" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/pdfTaxExempt">
      <Name>Tax Exempt</Name>
      <Description>String to use in ein/tin field in pdf when care provider is tax exempt</Description>

      <Derived>
        <String>Tax-Exempt</String>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/flowNotTaxExemptOrganization">
      <Name>Tax Exempt</Name>
      <Description>If true, the care provider is not tax exempt organization and is not tax exempt
        and we ask for
        TIN/EIN. Also used to determine what to print in the pdf form 2441, line 1(c)</Description>

      <Derived>
        <Any>
          <Not>
            <Dependency path="../isOrganization" />
          </Not>
          <All>
            <Dependency path="../isOrganization" />
            <Not>
              <Dependency path="../isTaxExempt" />
            </Not>
          </All>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/mefIsTaxExempt">
      <Name>Tax Exempt</Name>
      <Description>Whether the care provider is tax exempt</Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="../isTaxExempt" />
            </When>
            <Then>
              <String>TAXEXEMPT</String>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/isHouseholdEmployee">
      <Name>Is a Household Employee</Name>
      <Description>Whether care provider is a household employee.</Description>
      <Export mef="true" />

      <Derived>
        <!-- if not knocked out, should default to false while hh employee is out of scope -->
        <Dependency path="/flowKnockoutHouseholdEmployee" />
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/isHouseholdEmployeeNo">
      <Name>Is Not a Household Employee</Name>
      <Description>Whether care provider is not a household employee. Used for the f2441 PDF 'No'
        checkbox</Description>

      <Derived>
        <Not>
          <Dependency path="../isHouseholdEmployee" />
        </Not>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/pdfIsHouseholdEmployee">
      <Name>PDF -- Is Not a Household Employee</Name>
      <Description> Whether care provider is a household employee. Formatted as "Yes" or "No", used in the Care
        Providers Statement for f2441 when there are 3+ care providers.</Description>
      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="../isHouseholdEmployee" />
            </When>
            <Then>
              <String>Yes</String>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <String>No</String>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccDueDiligenceOptions">
      <Name>CDCC Care Provider Due Diligence Options</Name>
      <Description>Due Diligence explanation for why TIN was not provided</Description>

      <Derived>
        <EnumOptions>
          <String>providerMovedAndFilerUnableToFindThem</String>
          <String>providerRefusedToProvideTIN</String>
        </EnumOptions>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/writableDueDiligence">
      <Name>Due Diligence explanation for missing TIN</Name>
      <Description>Due Diligence explanation for why the filer did not provider the provider's TIN</Description>

      <Writable>
        <MultiEnum optionsPath="/cdccDueDiligenceOptions" />
      </Writable>
    </Fact>

    <Fact path="/cdccCareProviders/*/dueDiligence">
      <Name>Due Diligence explanation for missing TIN</Name>
      <Description>Due Diligence explanation for why the filer did not provider the provider's TIN</Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="../needsDueDiligenceStatement" />
            </When>
            <Then>
              <Dependency path="../writableDueDiligence" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/needsDueDiligenceStatement">
      <Derived>
        <All>
          <Dependency path="../flowNotTaxExemptOrganization" />
          <Not>
            <Dependency path="../hasTinOrEin" />
          </Not>
          <Dependency path="../collectProviderDetails" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProviders/*/writableAmountPaidForCare">
      <Name>Amount paid</Name>
      <Description>The amount paid for care</Description>

      <Writable>
        <Dollar />
      </Writable>
    </Fact>

    <Fact path="/cdccCareProviders/*/amountPaidForCare">
      <Name>Amount paid</Name>
      <Description>The amount paid for care. Set to 0 if the care was employer provided and they have a w2.</Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="../collectProviderDetails" />
            </When>
            <Then>
              <Round>
                <Dependency path="../writableAmountPaidForCare" />
              </Round>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccCareProvidersWithDueDiligenceReasons">
      <Description>
        Care Providers for which the filer was unable to find a TIN
      </Description>

      <Derived>
        <Filter path="/cdccCareProviders">
          <Dependency path="needsDueDiligenceStatement" />
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/pdfNeedDueDiligenceStatement">
      <Description>
        Whether the filer needs an additional due diligence statement
      </Description>

      <Derived>
        <All>
          <Dependency path="/shouldSubmitForm2441" />
          <Dependency path="/shouldIncludeCareProviders" />
          <GreaterThan>
            <Left>
              <CollectionSize>
                <Dependency path="/cdccCareProvidersWithDueDiligenceReasons" />
              </CollectionSize>
            </Left>
            <Right>
              <Int>0</Int>
            </Right>
          </GreaterThan>
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccCountOfQualifyingPersons">
      <Name>Count of Qualifying Persons</Name>
      <Description>The count of all qualifying persons (filer and non-filer)</Description>
      <Export downstreamFacts="true" />

      <Derived>
        <Add>
          <Dependency module="familyAndHousehold" path="/cdccQualifyingNonFilersCount" />
          <Dependency module="filers" path="/cdccQualifyingFilersCount" />
        </Add>
      </Derived>
    </Fact>

    <Fact path="/hasCdccImmediateChildQpUnder13">
      <Description>TP has a qualifying person who is a qualifying child (biological, adopted, stepchild, or foster
        child)
      </Description>

      <Derived>
        <GreaterThan>
          <Left>
            <CollectionSize>
              <Filter module="familyAndHousehold" path="/cdccQualifyingPeople">
                <All>
                  <Dependency module="dependentsRelationship" path="relationshipCategoryIsImmediateChild" />
                  <Any>
                    <LessThan>
                      <Left>
                        <Dependency module="familyAndHousehold" path="age" />
                      </Left>
                      <Right>
                        <Int>13</Int>
                      </Right>
                    </LessThan>
                    <Dependency module="familyAndHousehold" path="cdccTurnedThirteenAfterJanFirst" />
                  </Any>
                </All>
              </Filter>
            </CollectionSize>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/hasQpWhoTurned13AndWasNotUnableToCareForSelf">
      <Description>The TP has a cdcc qualifying person who turned 13 in the tax year and was not unable to care for
        themselves. Used to gate content for expense to exclude</Description>

      <Derived>
        <GreaterThan>
          <Left>
            <CollectionSize>
              <Filter module="familyAndHousehold" path="/cdccNonFilerQpsWhoTurned13InTaxYear">
                <Not>
                  <Dependency module="familyAndHousehold" path="unableToCareForSelf" />
                </Not>
              </Filter>
            </CollectionSize>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/hasMoreThanOneQpWhoTurned13AndWasNotUnableToCareForSelf">
      <Description>The TP has a cdcc qualifying person who turned 13 in the tax year and was not unable to care for
        themselves. Used to gate content for expense to exclude</Description>

      <Derived>
        <GreaterThan>
          <Left>
            <CollectionSize>
              <Filter module="familyAndHousehold" path="/cdccNonFilerQpsWhoTurned13InTaxYear">
                <Not>
                  <Dependency module="familyAndHousehold" path="unableToCareForSelf" />
                </Not>
              </Filter>
            </CollectionSize>
          </Left>
          <Right>
            <Int>1</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/hasQualifyingPersonsWithExpenseRestrictions">
      <Description>Whether there are qualifying persons who have restrictions on what expenses can be included. Used for
        conditional content.</Description>

      <Derived>
        <Any>
          <!-- QPs who turned 13 in the tax year (Jan 2-Dec 31) and were not unable to care for self -->
          <GreaterThan>
            <Left>
              <CollectionSize>
                <Dependency module="familyAndHousehold"
                  path="/cdccNonFilerQpsWhoTurned13InTaxYearAbleToCareForSelf" />
              </CollectionSize>
            </Left>
            <Right>
              <Int>0</Int>
            </Right>
          </GreaterThan>
          <!-- QPs unable to care for self who are not Qcs under age 13  -->
          <GreaterThan>
            <Left>
              <CollectionSize>
                <Dependency module="familyAndHousehold"
                  path="/cdccNonFilerQpsWhoWereUnableToCareForSelfAndNotQcUnderAge13" />
              </CollectionSize>
            </Left>
            <Right>
              <Int>0</Int>
            </Right>
          </GreaterThan>
          <!--  There are qualifying filers (who by definition would be unable to care for self) -->
          <GreaterThan>
            <Left>
              <Dependency module="filers" path="/cdccQualifyingFilersCount" />
            </Left>
            <Right>
              <Int>0</Int>
            </Right>
          </GreaterThan>
          <GreaterThan>
            <Left>
              <CollectionSize>
                <Dependency module="familyAndHousehold"
                  path="/cdccNonFilerQcsWhoTurned13InTaxYearUnableToCareForSelf" />
              </CollectionSize>
            </Left>
            <Right>
              <Int>0</Int>
            </Right>
          </GreaterThan>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/cdccHasMoreThanThreeQualifyingPersons">
      <Name>More than three Qualifying Persons</Name>
      <Description>
        Whether there are more than three qualifying persons listed
        Form 2441 - Part 1 Header
      </Description>
      <Export mef="true" />

      <Derived>
        <GreaterThan>
          <Left>
            <Dependency path="/cdccCountOfQualifyingPersons" />
          </Left>
          <Right>
            <Int>3</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/cdccHasExactlyOneQualifyingPerson">
      <Name>One qualifying person</Name>
      <Description>
        Whether there is exactly one qualifying person listed
        Form 2441 - Part 1 Header
      </Description>

      <Derived>
        <Equal>
          <Left>
            <Dependency path="/cdccCountOfQualifyingPersons" />
          </Left>
          <Right>
            <Int>1</Int>
          </Right>
        </Equal>
      </Derived>
    </Fact>

    <Fact path="/specialMonthlyIncomeForStudentOrDisabled">
      <Description>
        Monthly special income amount when student or disabled, based on the number of qualifying
        people
      </Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <Equal>
                <Left>
                  <Dependency path="/cdccCountOfQualifyingPersons" />
                </Left>
                <Right>
                  <Int>1</Int>
                </Right>
              </Equal>
            </When>
            <Then>
              <Dependency path="/monthlyIncomeForStudentOrDisabledWithOneQualifyingPerson" />
            </Then>
          </Case>
          <Case>
            <When>
              <GreaterThan>
                <Left>
                  <Dependency path="/cdccCountOfQualifyingPersons" />
                </Left>
                <Right>
                  <Int>1</Int>
                </Right>
              </GreaterThan>
            </When>
            <Then>
              <Dependency path="/monthlyIncomeForStudentOrDisabledWithMoreThanOneQualifyingPerson" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccQualifyingDependentsPassResidencyTest">
      <Name>CDCC Dependent Passes Residency test</Name>
      <Description>At least one CDCC qualifying dependent passes the residency test</Description>
      <Export downstreamFacts="true" />

      <Derived>
        <GreaterThan>
          <Left>
            <CollectionSize>
              <Filter path="/cdccQualifyingPeople">
                <Dependency module="familyAndHousehold" path="residencyTest" />
              </Filter>
            </CollectionSize>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/cdccQualifyingDependentsPassTpPaidMostOfHomeUpkeep">
      <Name>TP Paid Most of Upkeep of Home of CDCC Dependent</Name>
      <Description>Whether the taxpayer paid for more than half the cost of keeping up the home for
        at least one CDCC
        qualifying dependent</Description>
      <Export downstreamFacts="true" />

      <Derived>
        <GreaterThan>
          <Left>
            <CollectionSize>
              <Filter path="/cdccQualifyingPeople">
                <!-- TODO: ensure that we'd always ask this when MFS/qualifying for CDCC -->
                <Dependency module="familyAndHousehold" path="tpPaidMostOfHomeUpkeep" />
              </Filter>
            </CollectionSize>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/cdccQualifyingNonFilersWithExpenses">
      <Name>Qualifying Non-Filers with Qualifying Expenses</Name>
      <Description>Collection of qualifying non-filers with qualifying expenses</Description>
      <Derived>
        <Filter path="/cdccQualifyingPeople">
          <Dependency module="familyAndHousehold" path="cdccHasQualifyingExpenses" />
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/cdccQualifyingFilersWithExpenses">
      <Name>Qualifying Filers with Qualifying Expenses</Name>
      <Description>Collection of qualifying filers with qualifying expenses</Description>
      <Derived>
        <Filter path="/cdccQualifyingFilers">
          <Dependency module="filers" path="cdccHasQualifyingExpenses" />
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/cdccUncappedQualifyingExpenses">
      <Name>Uncapped Qualifying Expenses</Name>
      <Description>
        The uncapped sum of all qualifying expenses. This is for the credit calculation.

        Form 2441, Line 30
      </Description>

      <Derived>
        <Add>
          <CollectionSum>
            <Dependency module="familyAndHousehold"
              path="/cdccQualifyingPeople/*/cdccQualifyingExpenseAmount" />
          </CollectionSum>
          <CollectionSum>
            <Dependency module="filers" path="/cdccQualifyingFilers/*/cdccQualifyingExpenseAmount" />
          </CollectionSum>
        </Add>
      </Derived>
    </Fact>

    <Fact path="/form2441Line30Expenses">
      <Name>Form 2441 Line 30 Expenses</Name>
      <Description>Sum of qualifying expenses if filling part III. Otherwise undefined</Description>
      <Export mef="true" />
      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="/isFillingForm2441PartIII" />
            </When>
            <Then>
              <Dependency path="/cdccUncappedQualifyingExpenses" />
            </Then>
          </Case>
          <!-- otherwise: undefined -->
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccQualifyingExpenseCap">
      <Name>The maximum claimable qualifying expenses</Name>
      <Description>
        The maximum claimable qualifying expenses. Also called the Allowed Cared For Amount.

        Form 2441, Line
        27
      </Description>
      <ExportZero />

      <Derived>
        <Switch>
          <Case>
            <When>
              <GreaterThan>
                <Left>
                  <Dependency path="/cdccCountOfQualifyingPersons" />
                </Left>
                <Right>
                  <Int>1</Int>
                </Right>
              </GreaterThan>
            </When>
            <Then>
              <Dependency path="/cdccMaxClaimableExpenseWithTwoQP" />
            </Then>
          </Case>
          <Case>
            <When>
              <Equal>
                <Left>
                  <Dependency path="/cdccCountOfQualifyingPersons" />
                </Left>
                <Right>
                  <Int>1</Int>
                </Right>
              </Equal>
            </When>
            <Then>
              <Dependency path="/cdccMaxClaimableExpenseWithOneQP" />
            </Then>
          </Case>
          <Case>
            <When>
              <Equal>
                <Left>
                  <Dependency path="/cdccCountOfQualifyingPersons" />
                </Left>
                <Right>
                  <Int>0</Int>
                </Right>
              </Equal>
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form2441Line27ExpenseCap">
      <Name>Form 2441 Line 27</Name>
      <Description>The maximum claimable qualifying expenses if filling in part III. Undefined
        otherwise. Line 27</Description>
      <Export mef="true" />
      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="/isFillingForm2441PartIII" />
            </When>
            <Then>
              <Dependency path="/cdccQualifyingExpenseCap" />
            </Then>
          </Case>
          <!-- otherwise: undefined -->
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccQualifyingExpenses">
      <Name>Qualifying Expenses</Name>
      <Description>
        The capped sum of all qualifying expenses
        Form 2441, Line 3
      </Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="/isFillingForm2441PartIII" />
            </When>
            <Then>
              <Dependency path="/cdccSmallerOfTotalQualifyingExpensesAmount" />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <LesserOf>
                <Dependency path="/cdccUncappedQualifyingExpenses" />
                <Dependency path="/cdccQualifyingExpenseCap" />
              </LesserOf>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/lowerOfCdccEarnedIncomeMfj">
      <Description>Lowest of Earned income of MFJ filers </Description>
      <Derived>
        <LesserOf>
          <Dependency module="income" path="/cdccEarnedIncomePrimaryFilerLine4" />
          <Dependency module="income" path="/cdccEarnedIncomeLine5" />
        </LesserOf>
      </Derived>
    </Fact>

    <Fact path="/lowerOfCdccEarnedIncome">
      <Description>Lower of earned income (regardless of filing status)</Description>
      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency module="filingStatus" path="/isFilingStatusMFJ" />
            </When>
            <Then>
              <Dependency path="/lowerOfCdccEarnedIncomeMfj" />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dependency module="income" path="/cdccEarnedIncomePrimaryFilerLine4" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/hasEarnedIncomeForCdcc">
      <Description>Whether earned income as applicable for CDCC is greater than zero</Description>
      <Derived>
        <GreaterThan>
          <Left>
            <Dependency path="/lowerOfCdccEarnedIncome" />
          </Left>
          <Right>
            <Dollar>0</Dollar>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/cdccLowerOfEarnedIncomeAndExpenses">
      <Description>
        The lower of the earned income values and expenses

        Form 2441, Line 6
      </Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <LesserOf>
          <Dependency path="/cdccQualifyingExpenses" />
          <Dependency path="/lowerOfCdccEarnedIncome" />
        </LesserOf>
      </Derived>
    </Fact>

    <Fact path="/cdccCareExpensesFallOffThreshold">
      <Name>Care Expenses Fall Off Threshold</Name>
      <Description>The threshold at which the care expenses decimal amount begins reducing</Description>

      <Derived>
        <Dollar>15000</Dollar>
      </Derived>
    </Fact>

    <Fact path="/cdccCareExpensesPlateauThreshold">
      <Name>Care Expenses Fall Off Threshold</Name>
      <Description>The threshold at which the care expenses decimal amount stops reducing</Description>

      <Derived>
        <Dollar>43000</Dollar>
      </Derived>
    </Fact>

    <Fact path="/xmlCdccCareExpensesDecimalAmount">
      <Description>The CDCC Care expenses decimal amount, cast to a string for MeF</Description>
      <Export mef="true" />

      <Derived>
        <AsString>
          <Dependency path="/cdccCareExpensesDecimalAmount" />
        </AsString>
      </Derived>
    </Fact>

    <Fact path="/cdccCareExpensesDecimalAmount">
      <Name>Care Expenses Decimal Amount</Name>
      <Description>
        Care Expenses Decimal Amount
        Form 2441, Line 8
      </Description>
      <Derived>
        <!--
        Note: This fact is returned as a <Dollar> because we don't have a distinct <Decimal> type currently
        and it is important
        that precision of these decimal values be preserved
      -->
        <Switch>
          <Case>
            <When>
              <LessThanOrEqual>
                <Left>
                  <Dependency module="taxCalculations" path="/agi" />
                </Left>
                <Right>
                  <Dollar>0</Dollar>
                </Right>
              </LessThanOrEqual>
            </When>
            <Then>
              <!-- TODO: What is the correct way to handle this edge case?  Is this case necessary? -->
              <Dollar>0.00</Dollar>
            </Then>
          </Case>
          <Case>
            <When>
              <!-- The decimal amount never goes lower than .20 -->
              <GreaterThan>
                <Left>
                  <Dependency module="taxCalculations" path="/agi" />
                </Left>
                <Right>
                  <Dependency path="/cdccCareExpensesPlateauThreshold" />
                </Right>
              </GreaterThan>
            </When>
            <Then>
              <Dollar>0.20</Dollar>
            </Then>
          </Case>
          <Case>
            <When>
              <!-- The decimal amount never goes lower than .35 -->
              <LessThanOrEqual>
                <Left>
                  <Dependency module="taxCalculations" path="/agi" />
                </Left>
                <Right>
                  <Dependency path="/cdccCareExpensesFallOffThreshold" />
                </Right>
              </LessThanOrEqual>
            </When>
            <Then>
              <Dollar>
                0.35
              </Dollar>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <!--
            This formula is emulating the effects of this table from the form 2441 instructions:

            """
            IF your 2022 adjusted gross income was:	 	THEN the decimal amount is:
            Over:	 	But not over:
            $ 0	    —	$15,000	 	0.35
            15,000	—	17,000	 	0.34
            17,000	—	19,000	 	0.33
            19,000	—	21,000	 	0.32
            21,000	—	23,000	 	0.31
            23,000	—	25,000	 	0.30
            25,000	—	27,000	 	0.29
            27,000	—	29,000	 	0.28
            29,000	—	31,000	 	0.27
            31,000	—	33,000	 	0.26
            33,000	—	35,000	 	0.25
            35,000	—	37,000	 	0.24
            37,000	—	39,000	 	0.23
            39,000	—	41,000	 	0.22
            41,000	—	43,000	 	0.21
            43,000	—	No limit	0.20
            """

            The decimal amount reduces by .01 for every 2K over 15,000.01.
            -->
              <Subtract>
                <Minuend>
                  <!-- The case statement above handles 15K and down, so we start from the second
                  row -->
                  <Dollar>0.34</Dollar>
                </Minuend>
                <Subtrahends>
                  <Divide>
                    <Dividend>
                      <StepwiseMultiply>
                        <Multiplicand>
                          <Subtract>
                            <Minuend>
                              <Dependency module="taxCalculations" path="/agi" />
                            </Minuend>
                            <Subtrahends>
                              <!--
                                The increment steps up at one cent over each 2K threshold,
                                so we need to take away an extra penny to compensate
                              -->
                              <Add>
                                <Dependency path="/cdccCareExpensesFallOffThreshold" />
                                <Dollar>0.01</Dollar>
                              </Add>
                            </Subtrahends>
                          </Subtract>
                        </Multiplicand>
                        <Rate>
                          <Rational>1/2000</Rational>                          <!-- .01 for every whole $2,000 of income -->
                        </Rate>
                      </StepwiseMultiply>
                    </Dividend>
                    <Divisors>
                      <!-- Stepwise multiple doesn't support decimal rates, so we have to convert
                      from percent to
                      decimal -->
                      <Int>100</Int>
                    </Divisors>
                  </Divide>
                </Subtrahends>
              </Subtract>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccTentativeExpenseAmount">
      <Name>Tentative Expense Amount</Name>
      <Description>
        Form 2441, Line 9a
      </Description>
      <Export mef="true" />

      <Derived>
        <Round>
          <Multiply>
            <Dependency path="/cdccLowerOfEarnedIncomeAndExpenses" />
            <Dependency path="/cdccCareExpensesDecimalAmount" />
          </Multiply>
        </Round>
      </Derived>
    </Fact>

    <Fact path="/cdccCreditForPriorYearExpenses">
      <Name>Credit For Prior Year Expenses</Name>
      <Description>
        Credit for any expenses incurred in the prior tax year. Not currently supported, so this is
        set as
        zero.

        Form 2441, Line 9b
      </Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <Dollar>0</Dollar>
      </Derived>
    </Fact>

    <Fact path="/cdccHasCreditForPriorYearExpenses">
      <Name>Has Credit for Prior Year Expenses</Name>
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/cdccClaimedCreditForPriorYearExpenses">
      <Name>Claimed CDCC for Prior Tax Year</Name>
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/cdccClaimedMaxCreditForPriorTaxYear">
      <Name>Claimed Maximum Credit for Prior Tax Year</Name>
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/cdccHasPriorYearCreditAndClaimedCredit">
      <Name>Has Prior Year Credit and Claimed Prior YearCredit</Name>
      <Derived>
        <All>
          <Dependency path="/cdccHasCreditForPriorYearExpenses" />
          <Dependency path="/cdccClaimedCreditForPriorYearExpenses" />
        </All>
      </Derived>
    </Fact>


    <Fact path="/knockoutCdccWorksheetA">
      <Name>Has Prior Year Expenses and Did Not Claim Credit or Max Expenses</Name>
      <Export downstreamFacts="true" />

      <Derived>
        <All>
          <Dependency path="/cdccHasCreditForPriorYearExpenses" />
          <Any>
            <Not>
              <Dependency path="/cdccClaimedCreditForPriorYearExpenses" />
            </Not>
            <Not>
              <Dependency path="/cdccClaimedMaxCreditForPriorTaxYear" />
            </Not>
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccTotalEligibleCDCCAmount">
      <Name>Total Eligible CDCC Amount</Name>
      <Description>
        Total Eligible CDCC Amount
        Form 2441, Line 9c
      </Description>
      <Export mef="true" />

      <Derived>
        <Add>
          <Dependency path="/cdccTentativeExpenseAmount" />
          <Dependency path="/cdccCreditForPriorYearExpenses" />
        </Add>
      </Derived>
    </Fact>

    <Fact path="/cdccTotalCredit">
      <Name>Credit for Child and Dependent Care Amount</Name>
      <Description>
        The final amount of credit received for child and dependent care.

        Form 2441, Line 11
      </Description>
      <Export downstreamFacts="true" mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <Not>
                  <Dependency path="/cdccPotentialCdccIsZeroOrLessDueToExclusionBenefits" />
                </Not>
                <Dependency path="/cdccHasQualifyingExpenses" />
              </All>
            </When>
            <Then>
              <LesserOf>
                <Dependency path="/cdccTotalEligibleCDCCAmount" />
                <Dependency path="/cdccCreditLimit" />
              </LesserOf>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccPrimaryFilerDependentCareBenefitsAmount">
      <Export downstreamFacts="true" />

      <Derived>
        <Round>
          <CollectionSum>
            <Dependency module="formW2s" path="/primaryFilerW2s/*/dependentCareBenefits" />
          </CollectionSum>
        </Round>
      </Derived>
    </Fact>

    <Fact path="/cdccSecondaryFilerDependentCareBenefitsAmount">
      <Export downstreamFacts="true" />

      <Derived>
        <Round>
          <CollectionSum>
            <Dependency module="formW2s" path="/secondaryFilerW2s/*/dependentCareBenefits" />
          </CollectionSum>
        </Round>
      </Derived>
    </Fact>

    <Fact path="/cdccDependentCareBenefitsAmount">
      <Name>Dependent Care Benefits Amount</Name>
      <Description>
        Dependent Care Benefits received from employment, for both filers, without carryovers or forfeits
        Form 2441, Line 12
      </Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency module="filingStatus" path="/isFilingStatusMFJ" />
            </When>
            <Then>
              <Add>
                <Dependency path="/cdccPrimaryFilerDependentCareBenefitsAmount" />
                <Dependency path="/cdccSecondaryFilerDependentCareBenefitsAmount" />
              </Add>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dependency path="/cdccPrimaryFilerDependentCareBenefitsAmount" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccHasDepCareBenefitsBox10">
      <Name>Has Dependent Care Benefits</Name>
      <Description>
        Whether the primary or secondary filer entered benefits in box 10 of formW2s
      </Description>

      <Derived>
        <GreaterThan>
          <Left>
            <Dependency path="/cdccDependentCareBenefitsAmount" />
          </Left>
          <Right>
            <Dollar>0</Dollar>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/hasCdccCarryoverAmountFromPriorTaxYear">
      <Name>Has Carry Forward Amount From Prior Tax Year</Name>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/writableCdccCarryoverAmountFromPriorTaxYear">
      <Name>Writable Carryover Amount from Prior Tax Year</Name>
      <Description>
        The amount carried over from the prior tax year and used during the grace period of the
        current year.
        This is the writable optional fact. Can be left incomplete.
        Please use the derived fact in downstream
        calculations.
        Form 2441, Line 13
      </Description>

      <Writable>
        <Dollar />
        <Limit type="Min">
          <Dollar>0.01</Dollar>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/cdccCarryoverAmountFromPriorTaxYear">
      <Name>Carryover Amount From Prior Tax Year</Name>
      <Description>
        The amount carried over from the prior tax year and used during the grace period of the
        current year.

        Form 2441, Line 13
      </Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="/hasCdccCarryoverAmountFromPriorTaxYear" />
            </When>
            <Then>
              <Round>
                <Dependency path="/writableCdccCarryoverAmountFromPriorTaxYear" />
              </Round>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/writableHasCdccForfeitedCredits">
      <Name>Writable Has Carry Forward Amount For Next Tax Year</Name>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/hasCdccForfeitedCredits">
      <Name>Has Carry Forward Amount For Next Tax Year. This is only true if the filers reported benefits in box 10.</Name>

      <Derived>
        <All>
          <Dependency path="/writableHasCdccForfeitedCredits" />
          <Dependency path="/cdccHasDepCareBenefitsBox10" />
        </All>
      </Derived>
    </Fact>


    <Fact path="/writableCdccTotalQualifiedDependentCareExpenses">
      <Name>Total Qualified Dependent Care Expenses</Name>
      <Description> Total qualified dependent care expenses incurred, including those that were
        covered by employer.
        This
        is not the same as Line 2 of the form, which excludes the employer covered expenses. This is also the writable
        version.
        The value that goes in the form needs to be 0 if there are no qualifying expenses.

      </Description>

      <Writable>
        <Dollar />
      </Writable>

    </Fact>

    <Fact path="/cdccTotalQualifiedDependentCareExpenses">
      <Name>Total Qualified Dependent Care Expenses</Name>
      <Description> Total qualified dependent care expenses incurred, including those that were
        covered by employer. This
        is for the exclusion.
        This
        is not the same as Line 2 of the form, which excludes the employer covered expenses

        Form 2441, Line 16
      </Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <Not>
                <Dependency path="/cdccHasQualifyingPersons" />
              </Not>
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Round>
                <Dependency path="/writableCdccTotalQualifiedDependentCareExpenses" />
              </Round>
            </Then>
          </Case>
        </Switch>
      </Derived>

    </Fact>

    <Fact path="/cdccHasQualifyingExpensesForBenefit">
      <Name>Whether TP has Qualified Dependent Care Expenses, including benefit</Name>
      <Description> Whether TP has qualified dependent care expenses incurred, including those that were
        covered by
        employer.
        This is not the same as what's reported onLine 2 of the form, which excludes the employer covered
        expenses
      </Description>
      <Derived>
        <GreaterThan>
          <Left>
            <Dependency path="/cdccTotalQualifiedDependentCareExpenses" />
          </Left>
          <Right>
            <Dollar>0</Dollar>
          </Right>
        </GreaterThan>
      </Derived>

    </Fact>

    <Fact path="/form2441Line16Expenses">
      <Name>Form 2441 Line 16</Name>
      <Description>The total qualified dependent care expenses if filling in part III. Undefined
        otherwise.</Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="/isFillingForm2441PartIII" />
            </When>
            <Then>
              <Dependency path="/cdccTotalQualifiedDependentCareExpenses" />
            </Then>
          </Case>
          <!-- otherwise: undefined -->
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/writableCdccForfeitedCredits">
      <Name>Writable Forfeited Amount of CDCC</Name>
      <Description>
        Amount of CDCC forfeited or carried over to the next tax year This is the writable optional fact.
        Please use the derived fact in downstream calculations.
        Form 2441, Line 14
      </Description>

      <Writable>
        <Dollar />
      </Writable>
    </Fact>


    <Fact path="/cdccForfeitedCredits">
      <Name>Forfeited Amount of CDCC</Name>
      <Description>
        The amount carried over from the prior tax year and used during the grace period of the
        current year.

        Form 2441, Line 13
      </Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="/hasCdccForfeitedCredits" />
            </When>
            <Then>
              <Round>
                <Dependency path="/writableCdccForfeitedCredits" />
              </Round>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccAdjustedDependentCareBenefitsAmount">
      <Name>Adjusted Dependent Care Benefits amount</Name>
      <Description>
        Sum of all dependent care benefits, credits carried over from the previous year, credits
        forfeited,
        and credits carried over to the next tax year.

        Form 2441, Line 15
      </Description>
      <Export mef="true" />

      <Derived>
        <Subtract>
          <Minuend>
            <Add>
              <Dependency path="/cdccDependentCareBenefitsAmount" />
              <Dependency path="/cdccCarryoverAmountFromPriorTaxYear" />
            </Add>
          </Minuend>
          <Subtrahends>
            <Dependency path="/cdccForfeitedCredits" />
          </Subtrahends>
        </Subtract>
      </Derived>
    </Fact>

    <Fact path="/hasReportedPrimaryFilerDependentCareBenefits">
      <Export downstreamFacts="true" />

      <Derived>
        <GreaterThan>
          <Left>
            <CollectionSum>
              <Dependency module="formW2s" path="/primaryFilerW2s/*/dependentCareBenefits" />
            </CollectionSum>
          </Left>
          <Right>
            <Dollar>0</Dollar>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/hasReportedSecondaryFilerDependentCareBenefits">
      <Export downstreamFacts="true" />

      <Derived>
        <GreaterThan>
          <Left>
            <CollectionSum>
              <Dependency module="formW2s" path="/secondaryFilerW2s/*/dependentCareBenefits" />
            </CollectionSum>
          </Left>
          <Right>
            <Dollar>0</Dollar>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/hasReportedCarryOverAmountFromPriorTaxYear">
      <Name>Reported Dependent Care Benefits</Name>
      <Description>
        Reported dependent care benefits in box 10 or said they carried over benefits from TY-1
      </Description>
      <Derived>
        <GreaterThan>
          <Left>
            <Add>
              <Dependency path="/cdccCarryoverAmountFromPriorTaxYear" />
            </Add>
          </Left>
          <Right>
            <Dollar>0</Dollar>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/hasReportedDependentCareBenefits">
      <Name>Reported Dependent Care Benefits</Name>
      <Description>
        Reported dependent care benefits in box 10 or said they carried over benefits from TY-1
      </Description>
      <Export downstreamFacts="true" />
      <Derived>
        <Any>
          <Dependency path="/hasReportedPrimaryFilerDependentCareBenefits" />
          <Dependency path="/hasReportedSecondaryFilerDependentCareBenefits" />
          <Dependency path="/hasReportedCarryOverAmountFromPriorTaxYear" />
        </Any>
      </Derived>
    </Fact>

    <Fact path="/cdccShouldAskAboutPrimaryFilerEmployerExclusionPlan">
      <Description></Description>

      <Derived>
        <Any>
          <Dependency path="/hasReportedPrimaryFilerDependentCareBenefits" />
          <Dependency path="/hasReportedCarryOverAmountFromPriorTaxYear" />
        </Any>
      </Derived>
    </Fact>

    <Fact path="/isFillingForm2441PartIII">
      <Name>Is Filling Part III</Name>
      <Description>If dependent care benefits were received, tp must fill in part III</Description>
      <Export mef="true" />
      <Derived>
        <Dependency path="/hasReportedDependentCareBenefits" />
      </Derived>
    </Fact>

    <Fact path="/isClaimingCdccAndFillingForm2441PartIII">
      <Name>Is claiming CDCC and Filling Part III</Name>
      <Description>If dependent care benefits were received and filer is claiming CDCC, tp must fill in lines 27-31</Description>
      <Export mef="true" />
      <Derived>
        <All>
          <Dependency path="/isFillingForm2441PartIII" />
          <Dependency path="/cdccQualified" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccLesserOfAdjustBenefitsAndQualifiedExpenses">
      <Name>Lesser of Adjusted Benefits and Qualified Expenses</Name>
      <Description>

        The lesser of the Adjusted Care Benefits Amount and Qualified Expenses.

        Form 2441,
        Line 17
      </Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <LesserOf>
          <Dependency path="/cdccAdjustedDependentCareBenefitsAmount" />
          <Dependency path="/cdccTotalQualifiedDependentCareExpenses" />
        </LesserOf>
      </Derived>
    </Fact>

    <Fact path="/form2441Line18Income">
      <Name>Form 2441 Line 18</Name>
      <Description>Earned income of primary filer if filling in part III. Otherwise undefined.</Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="/isFillingForm2441PartIII" />
            </When>
            <Then>
              <Dependency path="/cdccEarnedIncomePrimaryFilerLine18" module="income" />
            </Then>
          </Case>
          <!-- otherwise: undefined -->
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form2441Line19Income">
      <Name>Form 2441 Line 19</Name>
      <Description>Earned income on Line 19 if filling in part III. Otherwise undefined.</Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="/isFillingForm2441PartIII" />
            </When>
            <Then>
              <Dependency path="/cdccEarnedIncomeLine19" module="income" />
            </Then>
          </Case>
          <!-- otherwise: undefined -->
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccTentativeExclusionAmount">
      <Name>Tentative Exclusion Amount</Name>
      <Description>
        Tentative Exclusion Amount for CDCC

        Form 2441, Line 20
      </Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <Switch>
          <Case>
            <When>
              <GreaterThan>
                <Left>
                  <Dependency path="/cdccLesserOfAdjustBenefitsAndQualifiedExpenses" />
                </Left>
                <Right>
                  <Dollar>0</Dollar>
                </Right>
              </GreaterThan>
            </When>
            <Then>
              <LesserOf>
                <Dependency path="/cdccLesserOfAdjustBenefitsAndQualifiedExpenses" />
                <Dependency path="/form2441Line18Income" />
                <Dependency path="/form2441Line19Income" />
              </LesserOf>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccMaximumExclusionForMFS">
      <Description>Maximum Allowed CDCC Exclusion for MFS</Description>

      <Derived>
        <Dollar>2500</Dollar>
      </Derived>
    </Fact>

    <Fact path="/cdccMaximumExclusionForNonMFS">
      <Description>Maximum Allowed CDCC Exclusion for MFS</Description>

      <Derived>
        <Dollar>5000</Dollar>
      </Derived>
    </Fact>

    <Fact path="/cdccMaximumExclusion">
      <Name>Maximum Allowed Exclusion</Name>
      <Description>Maximum amount filer can exclude from taxation for CDCC purposes</Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <Dependency module="filingStatus" path="/isFilingStatusMFS" />
                <Not>
                  <Dependency module="filers" path="/mfsButEligibleForCdcc" />
                </Not>
              </All>
            </When>
            <Then>
              <Dependency path="/cdccMaximumExclusionForMFS" />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dependency path="/cdccMaximumExclusionForNonMFS" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/writablePrimaryFilerDependentCarePlanMaximum">
      <Name>Primary Filer's Dependent Care Plan Maximum</Name>
      <Description>The maximum amount the primary filer's employer's dependent care exclusion
        benefits plan allows</Description>

      <Writable>
        <Dollar />
      </Writable>
    </Fact>

    <Fact path="/cdccPrimaryFilerDependentCarePlanMaximum">
      <Name>Primary Filer's Dependent Care Plan Maximum</Name>
      <Description>
        The maximum amount the primary filer's employer's dependent care exclusion benefits plan
        allows.

        This
        value is treated as zero if the primary filer has no reported exclusion benefits.
      </Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="/cdccShouldAskAboutPrimaryFilerEmployerExclusionPlan" />
            </When>
            <Then>
              <Round>
                <Dependency path="/writablePrimaryFilerDependentCarePlanMaximum" />
              </Round>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccPrimaryFilerDependentCarePlanMaximumExceedsLimit">
      <Name>Primary Filers' Dependent Care Plan Maxiumum Exceeds Federal Limit</Name>
      <Description>
        Whether the value provided as the maximum exclusion amount allowed under the employer's
        dependent
        care
        plan exceeds the federal maximum.
      </Description>

      <Derived>
        <GreaterThan>
          <Left>
            <Dependency path="/cdccPrimaryFilerDependentCarePlanMaximum" />
          </Left>
          <Right>
            <Dependency path="/cdccMaximumExclusion" />
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/writableSecondaryFilerDependentCarePlanMaximum">
      <Name>Secondary Filer's Dependent Care Plan Maximum</Name>
      <Description>The maximum amount the secondary filer's employer's dependent care exclusion
        benefits plan allows</Description>

      <Writable>
        <Dollar />
      </Writable>
    </Fact>

    <Fact path="/cdccSecondaryFilerDependentCarePlanMaximum">
      <Name>Secondary Filer's Dependent Care Plan Maximum</Name>
      <Description>
        The maximum amount the secondary filer's employer's dependent care exclusion benefits plan
        allows

        This
        value is treated as zero if the secondary filer has no reported exclusion benefits.
      </Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="/hasReportedSecondaryFilerDependentCareBenefits" />
            </When>
            <Then>
              <Round>
                <Dependency path="/writableSecondaryFilerDependentCarePlanMaximum" />
              </Round>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccSecondaryFilerDependentCarePlanMaximumExceedsLimit">
      <Name>Primary Filers' Dependent Care Plan Maxiumum Exceeds Federal Limit</Name>
      <Description>
        Whether the value provided as the maximum exclusion amount allowed under the employer's
        dependent
        care
        plan exceeds the federal maximum.
      </Description>

      <Derived>
        <GreaterThan>
          <Left>
            <Dependency path="/cdccSecondaryFilerDependentCarePlanMaximum" />
          </Left>
          <Right>
            <Dependency path="/cdccMaximumExclusion" />
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/cdccSpecifiedExclusionAmount">
      <Name>Specified Exclusion Amount</Name>
      <Description>
        Specified Exclusion Amount

        Form 2441, Line 21
      </Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Not>
                <Dependency path="/cdccShouldBeAskedAboutMaxExclusion" />
              </Not>
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
          <Case>
            <When>
              <All>
                <Dependency module="filers" path="/isMarried" />
                <Not>
                  <Dependency module="filers" path="/mfsButEligibleForCdcc" />
                </Not>
              </All>
            </When>
            <Then>
              <LesserOf>
                <Dependency path="/cdccMaximumExclusion" />
                <Add>
                  <Dependency path="/cdccPrimaryFilerDependentCarePlanMaximum" />
                  <Dependency path="/cdccSecondaryFilerDependentCarePlanMaximum" />
                </Add>
              </LesserOf>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <LesserOf>
                <Dependency path="/cdccMaximumExclusion" />
                <Dependency path="/cdccPrimaryFilerDependentCarePlanMaximum" />
              </LesserOf>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/hasMfjSpouseEarnedIncome">
      <Description>Taxpayer has the MFS Spouse's earned income</Description>
      <Export downstreamFacts="true" />

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/cdccSomeOfExclusionIsFromSoleProprietorShipOrPartnership">
      <Name>Some of exclusion amount is from sole propietorship or parternship</Name>
      <Description>
        Whether some of exclusion amount is from sole proprietorship or partnership.

        Form 2441, fact for
        checkboxes on Line 22
      </Description>

      <Derived>
        <!-- TODO: Replace this with a writable after self-employment income is supported -->
        <False />
      </Derived>
    </Fact>

    <Fact path="/cdccCheckboxSoleProprietorshipYes">
      <Name>Checkbox Yes for sole proprietorship exclusion </Name>
      <Description>
        Check yes on Some of exclusion amount is from sole proprietorship or parternship.

        Form 2441,
        for Line
        22
      </Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="/isFillingForm2441PartIII" />
            </When>
            <Then>
              <Dependency path="/cdccSomeOfExclusionIsFromSoleProprietorShipOrPartnership" />
            </Then>
          </Case>
          <!-- otherwise: undefined -->
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccCheckboxSoleProprietorshipNo">
      <Name>Checkbox No for sole proprietorship exclusion </Name>
      <Description>
        Check no on Some of exclusion amount is from sole proprietorship or parternship.

        Form 2441,
        for Line 22
      </Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="/isFillingForm2441PartIII" />
            </When>
            <Then>
              <Not>
                <Dependency path="/cdccSomeOfExclusionIsFromSoleProprietorShipOrPartnership" />
              </Not>
            </Then>
          </Case>
          <!-- otherwise: undefined -->
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccSoleProprietorshipOrPartnershipExclusionAmount">
      <Name>Sole Proprietorship or Partnership Exclusion Amount</Name>
      <Description>
        Exclusion amount coming from Sole Proprietorship or Partnership

        Form 2441, Line 22
      </Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="/cdccSomeOfExclusionIsFromSoleProprietorShipOrPartnership" />
            </When>
            <Then>
              <!--TODO:
              Replace this with sum of the relevant exclusion amounts once available -->
              <Dollar>0</Dollar>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccExclusionAmountNotFromSoleProprietorshipOrPartnership">
      <Name>ExclusionamountnotfromSoleProprietorshiporPartnership</Name>
      <Description>
        Exclusion amount not from Sole Proprietorship or Partnership

        Form 2441, Line 23
      </Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <Subtract>
          <Minuend>
            <Dependency path="/cdccAdjustedDependentCareBenefitsAmount" />
          </Minuend>
          <Subtrahends>
            <Dependency path="/cdccSoleProprietorshipOrPartnershipExclusionAmount" />
          </Subtrahends>
        </Subtract>
      </Derived>
    </Fact>

    <Fact path="/cdccDeductibleBenefitsAmount">
      <Name>DeductibleBenefitsAmount</Name>
      <Description>
        DeductibleBenefitsAmount

        Form 2441, Line 24
      </Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <LesserOf>
          <Dependency path="/cdccSoleProprietorshipOrPartnershipExclusionAmount" />
          <Dependency path="/cdccSpecifiedExclusionAmount" />
          <Dependency path="/cdccMaximumExclusion" />
        </LesserOf>
      </Derived>
    </Fact>

    <Fact path="/cdccExcludedBenefitsAmount">
      <Name>Excluded Benefits amount</Name>
      <Description>
        Excluded Benfits Amount
        As we are not supporting sole proprietorship, this is always the smaller of
        line 20, and line 21


        Form 2441, Line 25
      </Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <LesserOf>
          <Dependency path="/cdccSpecifiedExclusionAmount" />
          <Dependency path="/cdccTentativeExclusionAmount" />
        </LesserOf>
      </Derived>
    </Fact>

    <Fact path="/cdccTaxableBenefits">
      <Name>Taxable Benefits Amount</Name>
      <Description>
        The amount of benefits that are subject to tax.

        Form 2441, Line 26
      </Description>
      <Export downstreamFacts="true" mef="true" />
      <ExportZero />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency module="cdcc" path="/hasReportedDependentCareBenefits" />
            </When>
            <Then>
              <GreaterOf>
                <Dollar>0</Dollar>
                <Subtract>
                  <Minuend>
                    <Dependency path="/cdccExclusionAmountNotFromSoleProprietorshipOrPartnership" />
                  </Minuend>
                  <Subtrahends>
                    <Dependency path="/cdccExcludedBenefitsAmount" />
                  </Subtrahends>
                </Subtract>
              </GreaterOf>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/cdccSumOfDeductibleAndExcludedBenefitsAmount">
      <Name>Sum of Deductible and Excluded Benefits Amount</Name>
      <Description>
        Sum of Deductible and Excluded Benefits Amount

        Form 2441, Line 28
      </Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <Add>
          <Dependency path="/cdccDeductibleBenefitsAmount" />
          <Dependency path="/cdccExcludedBenefitsAmount" />
        </Add>
      </Derived>
    </Fact>

    <Fact path="/hasCdccNonZeroSumOfDeductibleAndExcludedBenefitsAmount">
      <Description>Line 28 (Sum of deductible and excluded benefits amount) is more than zero</Description>

      <Derived>
        <GreaterThan>
          <Left>
            <Dependency path="/cdccSumOfDeductibleAndExcludedBenefitsAmount" />
          </Left>
          <Right>
            <Dollar>0</Dollar>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/cdccNetAllowableAmount">
      <Name>Net Allowable Amount</Name>
      <Description>
        Net Allowable Amount - If zero or less, you can't take the credit, unless you paid 2022
        expenses in
        2023.
        Form 2441, Line 29
      </Description>
      <Export mef="true" />

      <Derived>
        <Subtract>
          <Minuend>
            <Dependency path="/form2441Line27ExpenseCap" />
          </Minuend>
          <Subtrahends>
            <Dependency path="/cdccSumOfDeductibleAndExcludedBenefitsAmount" />
          </Subtrahends>
        </Subtract>
      </Derived>
    </Fact>

    <Fact path="/cdccPotentialCdccIsZeroOrLessDueToExclusionBenefits">
      <Name>Potential CDCC is Zero or Less</Name>
      <Description>The potential CDCC amount is zero, because of dependent care benefits</Description>
      <!-- If tp paid TY-1 expenses in TY, they are knocked out currently.  -->

      <Derived>
        <All>
          <IsComplete>
            <Dependency path="/cdccNetAllowableAmount" />
          </IsComplete>
          <LessThanOrEqual>
            <Left>
              <Dependency path="/cdccNetAllowableAmount" />
            </Left>
            <Right>
              <Dollar>0</Dollar>
            </Right>
          </LessThanOrEqual>
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccSmallerOfTotalQualifyingExpensesAmount">
      <Name>Smaller Of Total Qualifying Expenses Amount</Name>
      <Description>
        Smaller Of Total Qualifying Expenses Amount

        Form 2441, Line 31
      </Description>
      <Export downstreamFacts="true" mef="true" />

      <Derived>
        <LesserOf>
          <Dependency path="/cdccNetAllowableAmount" />
          <Dependency path="/cdccUncappedQualifyingExpenses" />
        </LesserOf>
      </Derived>
    </Fact>

    <Fact path="/cdccMaxClaimableExpenseWithOneQP">
      <Name>Maximum Claimable Expense With One Qualifying Person</Name>
      <Derived>
        <Dollar>3000</Dollar>
      </Derived>
    </Fact>

    <Fact path="/cdccMaxClaimableExpenseWithTwoQP">
      <Name>Maximum Claimable Expense With Two or More Qualifying Persons</Name>
      <Derived>
        <Dollar>6000</Dollar>
      </Derived>
    </Fact>

    <Fact path="/cdccMaxAllowedCreditWithOneQP">
      <Name>Maximum Allowed Credit With One Qualifying Person</Name>
      <Derived>
        <Dollar>1050</Dollar>
      </Derived>
    </Fact>

    <Fact path="/cdccMaxAllowedCreditWithTwoQP">
      <Name>Maximum Allowed Credit With Two or More Qualifying Persons</Name>
      <Derived>
        <Dollar>2100</Dollar>
      </Derived>
    </Fact>

    <Fact path="/cdccMinAllowedPercentageTY2024">
      <Name>Minimum Allowed Percentage for Tax Year 2024</Name>
      <Derived>
        <Int>20</Int>
      </Derived>
    </Fact>

    <Fact path="/cdccMaxAllowedPercentageTY2024">
      <Name>Maximum Allowed Percentage for Tax Year 2024</Name>
      <Derived>
        <Int>35</Int>
      </Derived>
    </Fact>


    <Fact path="/flowQualifiedExpenses">
      <Description>
        Qualified expenses reported by the tp that excludes employer benefits OR the total qualified
        expense
        for all qps
        when the tp did not have any benefits. Used to gate where the special income rule knockout
        flow shows
        (Dependent Care Benefit or Credit section)
      </Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="/hasReportedDependentCareBenefits" />
            </When>
            <Then>
              <Dependency path="/cdccTotalQualifiedDependentCareExpenses" />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dependency path="/cdccUncappedQualifyingExpenses" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>


    <Fact path="/cdccLowerOfEarnedIncomeForBenefits">
      <Name>Lower of earned income for benefits</Name>
      <Description>Lower of earned income for benefits, handles all filing statuses, includes combat pay if elected</Description>
      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency module="filingStatus" path="/isFilingStatusMFJ" />
            </When>
            <Then>
              <LesserOf>
                <Dependency module="income" path="/cdccEarnedIncomePrimaryFilerLine18" />
                <Dependency module="income" path="/cdccEarnedIncomeSecondaryFilerPartIII" />
              </LesserOf>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dependency module="income" path="/cdccEarnedIncomePrimaryFilerLine18" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/specialEarnedIncomeFlowRequirementsSansIncomeAndFilingStatus">
      <Description>Determines whether to show screens to gather info to determine knockout if TP or
        spouse are a student
        or disabled. Used in credit and benefits section</Description>

      <Derived>
        <All>
          <Any>
            <Dependency module="filers" path="/primaryFiler/isStudentOrDisabled" />
            <Dependency module="filers" path="/secondaryFiler/isStudentOrDisabled" />
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/showSpecialEarnedIncomeKnockoutFlowInBenefits">
      <Description>Whether to show the special income knockout flow in the dependent care benefits
        subsection</Description>
      <Derived>
        <All>
          <Dependency path="/specialEarnedIncomeFlowRequirementsSansIncomeAndFilingStatus" />
          <Any>
            <All>
              <Dependency module="filingStatus" path="/isFilingStatusMFJ" />
              <GreaterThan>
                <Left>
                  <Dependency path="/cdccMaximumExclusionForNonMFS" />
                </Left>
                <Right>
                  <Dependency path="/cdccLowerOfEarnedIncomeForBenefits" />
                </Right>
              </GreaterThan>
            </All>
            <All>
              <Dependency module="filingStatus" path="/isFilingStatusMFS" />
              <Not>
                <Dependency module="filers" path="/mfsButEligibleForCdcc" />
              </Not>
              <GreaterThan>
                <Left>
                  <Dependency path="/cdccMaximumExclusionForMFS" />
                </Left>
                <Right>
                  <Dependency module="income" path="/cdccEarnedIncomePrimaryFilerLine18" />
                </Right>
              </GreaterThan>
            </All>
          </Any>
          <Dependency path="/hasReportedDependentCareBenefits" />
          <GreaterThan>
            <Left>
              <Dependency path="/flowQualifiedExpenses" />
            </Left>
            <Right>
              <Dependency path="/cdccLowerOfEarnedIncomeForBenefits" />
            </Right>
          </GreaterThan>
        </All>
      </Derived>
    </Fact>


    <Fact path="/showSpecialEarnedIncomeKnockoutFlowInCredits">
      <Description>Whether to show the special income knockout flow in the credits subsection</Description>
      <Derived>
        <All>
          <Dependency path="/specialEarnedIncomeFlowRequirementsSansIncomeAndFilingStatus" />
          <Dependency module="filingStatus" path="/isFilingStatusMFJ" />
          <GreaterThan>
            <Left>
              <Dependency path="/cdccQualifyingExpenseCap" />
            </Left>
            <Right>
              <Dependency path="/lowerOfCdccEarnedIncomeMfj" />
            </Right>
          </GreaterThan>
          <Not>
            <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInBenefits" />
          </Not>
        </All>
      </Derived>
    </Fact>

    <Fact path="/monthlyIncomeForStudentOrDisabledWithOneQualifyingPerson">
      <Description>Amount per month designated as income for a tp who was a student or disabled with
        one CDCC qualifying
        person</Description>

      <Derived>
        <Dollar>250</Dollar>
      </Derived>
    </Fact>

    <Fact path="/monthlyIncomeForStudentOrDisabledWithMoreThanOneQualifyingPerson">
      <Description>Amount per month as a student or disabled designated as income for a tp who was a
        student or disabled
        with more than one CDCC qualifying person
      </Description>

      <Derived>
        <Dollar>500</Dollar>
      </Derived>
    </Fact>

    <Fact path="/primaryFilerMadeLessThanDisabledOrStudentMonthlyIncome">
      <Description>Whether the TP made less than the allocated income amount in any months they were
        a student or unable
        to care for themself</Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/secondaryFilerMadeLessThanDisabledOrStudentMonthlyIncome">
      <Description>Whether the spouse made less than the allocated income amount in any months they
        were a student or
        unable to care for themself</Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/showEarnedIncomeRuleTp2">
      <Description>Whether to show the earned income rule question to the spouse</Description>

      <Derived>
        <All>
          <Any>
            <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInBenefits" />
            <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInCredits" />
          </Any>
          <Any>
            <All>
              <Dependency module="filers" path="/primaryFiler/isStudentOrDisabled" />
              <IsComplete>
                <Dependency path="/primaryFilerMadeLessThanDisabledOrStudentMonthlyIncome" />
              </IsComplete>
              <Not>
                <Dependency path="/primaryFilerMadeLessThanDisabledOrStudentMonthlyIncome" />
              </Not>
            </All>
            <Not>
              <Dependency module="filers" path="/primaryFiler/isStudentOrDisabled" />
            </Not>
          </Any>
          <Dependency module="filers" path="/secondaryFiler/isStudentOrDisabled" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/knockoutStudentOrDisabled">
      <Description>Whether to knock out a tp who (or whose spouse) was a student or disabled based
        on earned income rule</Description>
      <Export downstreamFacts="true" />

      <Derived>
        <All>
          <Any>
            <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInBenefits" />
            <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInCredits" />
          </Any>
          <Any>
            <Dependency path="/primaryFilerMadeLessThanDisabledOrStudentMonthlyIncome" />
            <Dependency path="/secondaryFilerMadeLessThanDisabledOrStudentMonthlyIncome" />
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/neitherTpEarnedLessThanSpecialEarnedIncomeMax">
      <Description>When a filer or spouse is a student or disabled and neither earned less than
        $250($500) in a
        corresponding month</Description>

      <Derived>
        <All>
          <Any>
            <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInBenefits" />
            <Dependency path="/showSpecialEarnedIncomeKnockoutFlowInCredits" />
          </Any>
          <Not>
            <All>
              <Dependency path="/primaryFilerMadeLessThanDisabledOrStudentMonthlyIncome" />
              <IsComplete>
                <Dependency path="/primaryFilerMadeLessThanDisabledOrStudentMonthlyIncome" />
              </IsComplete>
            </All>
          </Not>
          <Not>
            <All>
              <Dependency path="/secondaryFilerMadeLessThanDisabledOrStudentMonthlyIncome" />
              <IsComplete>
                <Dependency path="/secondaryFilerMadeLessThanDisabledOrStudentMonthlyIncome" />
              </IsComplete>
            </All>
          </Not>
        </All>
      </Derived>
    </Fact>

    <Fact path="/eitherFilerHasLessEarnedIncomeThanExpenses">
      <Derived>
        <Any>
          <LessThan>
            <Left>
              <Dependency module="income" path="/cdccPrimaryEarnedIncomeWithCombatPayForCredits" />
            </Left>
            <Right>
              <Dependency path="/cdccSmallerOfTotalQualifyingExpensesAmount" />
            </Right>
          </LessThan>
          <LessThan>
            <Left>
              <Dependency module="income" path="/cdccSecondaryEarnedIncomeWithCombatPayForCredits" />
            </Left>
            <Right>
              <Dependency path="/cdccSmallerOfTotalQualifyingExpensesAmount" />
            </Right>
          </LessThan>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/flowKnockoutBenefitsDistribution">
      <Description>
        Knockout for when taxable dependent care benefits need to be distributed between filers to get the
        max possible credit
      </Description>
      <Export downstreamFacts="true" />

      <Derived>
        <All>
          <!-- There are two filers between which the taxable benefits may potentially be split -->
          <Dependency module="filingStatus" path="/isFilingStatusMFJ" />
          <Any>
            <Dependency path="/hasReportedCarryOverAmountFromPriorTaxYear" />
            <All>
              <Dependency path="/hasReportedPrimaryFilerDependentCareBenefits" />
              <Dependency path="/hasReportedSecondaryFilerDependentCareBenefits" />
            </All>
          </Any>
          <!-- There are benefits to be split -->
          <GreaterThan>
            <Left>
              <Dependency path="/cdccTaxableBenefits" />
            </Left>
            <Right>
              <Dollar>0</Dollar>
            </Right>
          </GreaterThan>
          <!-- The maximum credit cannot be obtained without this calculation -->
          <Dependency path="/eitherFilerHasLessEarnedIncomeThanExpenses" />
          <Dependency module="income" path="/cdccMaximumCreditRequiresUnsupportedCalculation" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccShouldIncludeQualifyingPersonsStatement">
      <Derived>
        <All>
          <Dependency path="/cdccHasMoreThanThreeQualifyingPersons" />
          <Dependency path="/shouldSubmitForm2441" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/hasTaxableDependentCareBenefits">
      <Derived>
        <GreaterThan>
          <Left>
            <Dependency path="/cdccTaxableBenefits" />
          </Left>
          <Right>
            <Dollar>0</Dollar>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/cdccShouldBeAskedAboutMaxExclusion">
      <Description>
        Whether or not the filer should be asked about their maximum employer exclusion if they have reported
        dependent care
        benefits, and have qualifying people in the first place.
      </Description>

      <Derived>
        <All>
          <Dependency path="/hasReportedDependentCareBenefits" />
          <Dependency path="/cdccHasQualifyingPersons" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccWorksheetANotRequired">
      <Description>
        Whether or not the filer should see the 'worksheet-a-not-required' screen in the flow.
      </Description>

      <Derived>
        <All>
          <IsComplete>
            <Dependency path="/knockoutCdccWorksheetA" />
          </IsComplete>
          <Not>
            <Dependency path="/knockoutCdccWorksheetA" />
          </Not>
          <Dependency path="/cdccClaimedCreditForPriorYearExpenses" />
          <Dependency path="/cdccClaimedMaxCreditForPriorTaxYear" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/cdccQpExpensesRemain">
      <Derived>
        <GreaterThan>
          <Left>
            <Add>
              <CollectionSize>
                <Filter module="familyAndHousehold" path="/cdccQualifyingPeople">
                  <Not>
                    <IsComplete>
                      <Dependency module="familyAndHousehold" path="cdccExpensesCollected" />
                    </IsComplete>
                  </Not>
                </Filter>
              </CollectionSize>
              <CollectionSize>
                <Filter module="filers" path="/cdccQualifyingFilers">
                  <Not>
                    <IsComplete>
                      <Dependency module="filers" path="cdccExpensesCollected" />
                    </IsComplete>
                  </Not>
                </Filter>
              </CollectionSize>
            </Add>
          </Left>
          <Right>
            <Int> 0 </Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>
  </Facts>
</FactDictionaryModule>
