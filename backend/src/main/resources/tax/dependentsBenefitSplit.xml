<?xml-model href="./FactDictionaryModule.rng"?>
<FactDictionaryModule>
  <Facts>
    <Fact path="/parentalSituationOptions">
      <Name>Parental Situation Options</Name>
      <Description>Options for parental situation</Description>
      <Derived>
        <EnumOptions>
          <String>divorcedOrSeparated</String>
          <String>livedApartLastSixMonths</String>
          <String>other</String>
        </EnumOptions>
      </Derived>
    </Fact>

    <Fact path="/writtenDeclarationOptions">
      <Description>
        The options for who has taken a written declaration to not claim a child,
        sometimes via Form 8332
      </Description>

      <Derived>
        <EnumOptions>
          <String>iDid</String>
          <String>theyDid</String>
          <String>nobodyDid</String>
        </EnumOptions>
      </Derived>
    </Fact>

    <Fact path="/familyAndHousehold/*/childMayQualifyForBenefitSplit">
      <Name>Flow variable for special rule benefit split</Name>
      <Description>
        Whether or not to show the benefit split screens for the dependent.
        We have to test for the special
        benefit split if the person is subject to custody.
        More specifically, this means that they are either not yet 18
        on July 2 or the TY,
        or they have a permanent and total disability.

        Note: Age of majority/custody is a state
        issue. In Mississippi and Puerto Rico, the age of majority is 21.
        In Alabama and Nebraska, the age of majority is
        19. Everywhere else, the age of majority is 18. If/when
        Mississippi, Puerto Rico, Alabama, and Nebraska start
        participating in Direct File, this logic will need to
        change.
      </Description>

      <Derived>
        <Any>
          <LessThan>
            <Left>
              <Dependency module="familyAndHousehold" path="../ageAtFirstHalfOfYear" />
            </Left>
            <Right>
              <Int>18</Int>
            </Right>
          </LessThan>
          <All>
            <Dependency module="familyAndHousehold" path="../disabilityStatusMayAffectBenefits" />
            <Dependency module="familyAndHousehold" path="../permanentTotalDisability" />
          </All>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/familyAndHousehold/*/tpIsParent">
      <Description>The relationship to the person is a parental one for use in the special benefit split</Description>

      <Derived>
        <Any>
          <Equal>
            <Left>
              <Dependency module="dependentsRelationship" path="../relationship" />
            </Left>
            <Right>
              <Enum optionsPath="/relationshipOptions">biologicalChild</Enum>
            </Right>
          </Equal>
          <Equal>
            <Left>
              <Dependency module="dependentsRelationship" path="../relationship" />
            </Left>
            <Right>
              <Enum optionsPath="/relationshipOptions">adoptedChild</Enum>
            </Right>
          </Equal>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/familyAndHousehold/*/tpIsNotParent">
      <Description>The relationship to the person is not a parental one for use in the special benefit split</Description>

      <Derived>
        <All>
          <Not>
            <Dependency path="../tpIsParent" />
          </Not>
          <Dependency module="dependentsRelationship" path="../qcRelationshipTest" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/familyAndHousehold/*/hasOtherBiologicalOrAdoptiveParent">
      <Name>Has other legal parent</Name>
      <Description>Does the dependent have another legal parent apart from the taxpayer and spouse?</Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/familyAndHousehold/*/nonParentalSomeParentNotClaiming">
      <Name>Written declaration not to claim was signed</Name>
      <Description>Has any of the dependent's parents signed a written declaration not to claim them?</Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/familyAndHousehold/*/whichParentNotClaiming">
      <Description>
        Is one of the parents not claiming the child?
      </Description>

      <Writable>
        <Enum optionsPath="/writtenDeclarationOptions" />
      </Writable>
    </Fact>

    <Fact path="/familyAndHousehold/*/parentalSomeParentNotClaiming">
      <Description>
        At least one of the parents is not claiming
      </Description>

      <Derived>
        <Any>
          <Equal>
            <Left>
              <Dependency path="../whichParentNotClaiming" />
            </Left>
            <Right>
              <Enum optionsPath="/writtenDeclarationOptions">iDid</Enum>
            </Right>
          </Equal>
          <Equal>
            <Left>
              <Dependency path="../whichParentNotClaiming" />
            </Left>
            <Right>
              <Enum optionsPath="/writtenDeclarationOptions">theyDid</Enum>
            </Right>
          </Equal>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/familyAndHousehold/*/primaryFilerNotClaiming">
      <Description>True when taxpayer not filing MFJ is not claiming child</Description>

      <Derived>
        <All>
          <Equal>
            <Left>
              <Dependency path="../whichParentNotClaiming" />
            </Left>
            <Right>
              <Enum optionsPath="/writtenDeclarationOptions">iDid</Enum>
            </Right>
          </Equal>
          <Not>
            <Dependency path="/treatAsMFJ" module="filingStatus" />
          </Not>
        </All>
      </Derived>
    </Fact>

    <Fact path="/familyAndHousehold/*/bothFilersNotClaiming">
      <Description>True when taxpayers filing MFJ are not claiming child</Description>

      <Derived>
        <All>
          <Equal>
            <Left>
              <Dependency path="../whichParentNotClaiming" />
            </Left>
            <Right>
              <Enum optionsPath="/writtenDeclarationOptions">iDid</Enum>
            </Right>
          </Equal>
          <Dependency path="/treatAsMFJ" module="filingStatus" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/familyAndHousehold/*/otherParentNotClaiming">
      <Description>True when other biological or adoptive parent is not claiming child</Description>

      <Derived>
        <Equal>
          <Left>
            <Dependency path="../whichParentNotClaiming" />
          </Left>
          <Right>
            <Enum optionsPath="/writtenDeclarationOptions">theyDid</Enum>
          </Right>
        </Equal>
      </Derived>
    </Fact>

    <Fact path="/familyAndHousehold/*/inParentsCustody">
      <Name>In parents' custody</Name>
      <Description>As of July 2, was the dependent still in the legal custody of their biological or adoptive parents?</Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/familyAndHousehold/*/livedWithTpOrOtherBiologicalOrAdoptiveParentMoreThanSixMonths">
      <Name>Lived with taxpayer and/or other legal parent more than six months</Name>
      <Description>Did the dependent live with the taxpayer and/or the other legal parent for more than six months?</Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/familyAndHousehold/*/biologicalOrAdoptiveParentsLiving">
      <Name>Biological or adoptive parents living</Name>
      <Description>Are the dependent's biological or adoptive parents living?</Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/familyAndHousehold/*/nightsWithTpVsOtherParent">
      <Name>Nights spent with taxpayer vs. other parent</Name>
      <Description>Did the dependent spend more, less, or same number of nights with taxpayer vs. other parent?</Description>

      <Writable>
        <Enum optionsPath="/moreLessEqualOptions" />
      </Writable>
    </Fact>

    <Fact path="/familyAndHousehold/*/hadEqualNumberOfNightsWithParents">
      <Description>
        If true, we'll need to use an agi tiebreaker.
      </Description>

      <Derived>
        <Equal>
          <Left>
            <Dependency path="../nightsWithTpVsOtherParent" />
          </Left>
          <Right>
            <Enum optionsPath="/moreLessEqualOptions">equal</Enum>
          </Right>
        </Equal>
      </Derived>
    </Fact>

    <Fact path="/familyAndHousehold/*/tpAgiHigherThanOtherParent">
      <Name>Taxpayer's AGI higher than other parent</Name>
      <Description>Is the taxpayer's AGI higher than the dependent's other legal parent?</Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>


    <Fact path="/familyAndHousehold/*/parentsMeetReqsRuleForChildrenOfDivorcedParents">
      <Description>
        The person's parents meet the requirements of the rule for children of divorced
        or separated parents
        or parents who lived apart.
      </Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/familyAndHousehold/*/specialRuleChildUsedByCustodialParentAsQP">
      <Description>
        In a situation where the taxpayer is not a parent, and the person has an alive custodial parent,
        that
        custodial parent intends to claim this person as a QP for Hoh, EITC, DCC, or another credit
        and this person will
        thus not be an eligible to be the taxpayer's QP.
      </Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/familyAndHousehold/*/specialRuleAgiTest">
      <Description>
        In a situation where the TP is not a parent, and the person has an alive custodial parent,
        that
        custodial parent is not claiming the person as a qualifying person, the taxpayer has
        a higher AGI than the
        custodial parent, which will allow the TP to claim the person for
        certain tax benefits.
      </Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/familyAndHousehold/*/parentalSituation">
      <Name>Taxpayer's situation with other legal parent</Name>
      <Description>The taxpayer's marital or living situation with the dependent's other legal parent, as it applies to
        benefit split.</Description>

      <Writable>
        <Enum optionsPath="/parentalSituationOptions" />
      </Writable>
    </Fact>

    <Fact path="/familyAndHousehold/*/parentsAreDivorcedSeparatedOrLivingApart">
      <Description>
        Used to decide whether to display screen AddPersonParentalSupport
      </Description>

      <Derived>
        <NotEqual>
          <Left>
            <Dependency path="../parentalSituation" />
          </Left>
          <Right>
            <Enum optionsPath="/parentalSituationOptions">other</Enum>
          </Right>
        </NotEqual>
      </Derived>
    </Fact>

    <Fact path="/familyAndHousehold/*/parentalSupport">
      <Name>Parental support</Name>
      <Description>Did the taxpayer and/or other parent pay more than half the dependent's support?</Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/familyAndHousehold/*/tpIsCustodialParent">
      <Name>Taxpayer is custodial parent</Name>
      <Description>
        Is the taxpayer custodial parent of the dependent?
        The custodial parent is eligible to claim the
        person for EITC and HoH
        but not eligible to claim them as a dependent, or for CTC/ACTC/ODC.
      </Description>

      <Derived>
        <Any>
          <Equal>
            <Left>
              <Dependency path="../nightsWithTpVsOtherParent" />
            </Left>
            <Right>
              <Enum optionsPath="/moreLessEqualOptions">more</Enum>
            </Right>
          </Equal>
          <All>
            <Equal>
              <Left>
                <Dependency path="../nightsWithTpVsOtherParent" />
              </Left>
              <Right>
                <Enum optionsPath="/moreLessEqualOptions">equal</Enum>
              </Right>
            </Equal>
            <Dependency path="../tpAgiHigherThanOtherParent" />
          </All>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/familyAndHousehold/*/tpCanClaimSplitBenefitsHohEitcCdcc">
      <Description>
        The person qualifies for a special benefit split, and the taxpayer can therefore qualify for either
        HoH, EITC, or CDCC using this person. This happens because the taxpayer is either the custodial parent who
        signed away
        benefits via form 8832, or the taxpayer is not a parent but is eligible for the split.
      </Description>
      <Export downstreamFacts="true" />

      <Derived>
        <All>
          <Dependency path="../eligibleForBenefitSplit" />
          <Any>
            <All>
              <Equal>
                <Left>
                  <Dependency path="../whichParentNotClaiming" />
                </Left>
                <Right>
                  <Enum optionsPath="/writtenDeclarationOptions">iDid</Enum>
                </Right>
              </Equal>
              <!-- If the person is the custodial parent but the other person signed the 8832,
                   then there is no SBS - they get full benefits. -->
              <Dependency path="../tpIsCustodialParent" />
            </All>
            <Dependency path="../reachedNonParentalBenefitSplit" />
          </Any>
        </All>
      </Derived>
    </Fact>


    <Fact path="/familyAndHousehold/*/contradictory8832TPIsCustodialParent">
      <Description>The taxpayer is the custodial parent of the dependent but says the other possible claimant signed
        form 8332</Description>
      <Derived>
        <All>
          <Dependency path="../tpIsCustodialParent" />
          <Equal>
            <Left>
              <Dependency path="../whichParentNotClaiming" />
            </Left>
            <Right>
              <Enum optionsPath="/writtenDeclarationOptions">theyDid</Enum>
            </Right>
          </Equal>
        </All>
      </Derived>
    </Fact>

    <Fact path="/familyAndHousehold/*/contradictory8832TPNotCustodialParent">
      <Description>The taxpayer is NOT the custodial parent of the dependent but says that they (the TP) signed form
        8332</Description>
      <Derived>
        <All>
          <Not>
            <Dependency path="../tpIsCustodialParent" />
          </Not>
          <Equal>
            <Left>
              <Dependency path="../whichParentNotClaiming" />
            </Left>
            <Right>
              <Enum optionsPath="/writtenDeclarationOptions">iDid</Enum>
            </Right>
          </Equal>
        </All>
      </Derived>
    </Fact>

    <Fact path="/familyAndHousehold/*/contradictory8832Knockout">
      <Description>
        The person qualified for the full benefit split, but then they went through the questions and were
        noted to be the custodial parent. They've contradicted themselves, and we knock them out (for now).
        The
        contradiction is that a Form 8832 is meant to be signed by only the custodial parent.
        https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/5537
      </Description>

      <Derived>
        <All>
          <Dependency path="../eligibleForBenefitSplit" />
          <Any>
            <Dependency path="../contradictory8832TPIsCustodialParent" />
            <Dependency path="../contradictory8832TPNotCustodialParent" />
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/contradictory8832TPIsCustodialParentTriggeredKnockout">
      <Description>/knockedOutByContradictory8832 was triggered by a filer claiming to be a custodial parent but not
        answering in a way that supports that claim</Description>
      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/familyAndHousehold/*/contradictory8832TPIsCustodialParent" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/contradictory8832TPNotCustodialParentTriggeredKnockout">
      <Description>/knockedOutByContradictory8832 was triggered by a filer claiming to be not be a custodial parent but
        not answering in a way that supports that claim</Description>
      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/familyAndHousehold/*/contradictory8832TPNotCustodialParent" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/knockedOutByContradictory8832">
      <Description>
        The user was knocked out by having a contradictory 8832 and being a custodial parent.
      </Description>
      <Export downstreamFacts="true" />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/familyAndHousehold/*/contradictory8832Knockout" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/dependentWhoCausedContradictory8832Knockout">
      <Description>
        The family/household member who caused the knockedOutByContradictory8832
      </Description>
      <Derived>
        <IndexOf>
          <Collection>
            <Filter path="/familyAndHousehold">
              <Dependency path="contradictory8832Knockout"></Dependency>
            </Filter>
          </Collection>
          <Index>
            <Int>0</Int>
          </Index>
        </IndexOf>
      </Derived>
    </Fact>


    <Fact path="/familyAndHousehold/*/causesNoncustodialParentBenefitSplitKnockout">
      <Description>
        Parent is the non custodial parent for special benefit split and should be knocked out
      </Description>

      <Derived>
        <All>
          <Dependency path="../eligibleForBenefitSplit" />
          <Not>
            <Dependency path="../tpIsCustodialParent" />
          </Not>
          <Equal>
            <Left>
              <Dependency path="../whichParentNotClaiming" />
            </Left>
            <Right>
              <Enum optionsPath="/writtenDeclarationOptions">theyDid</Enum>
            </Right>
          </Equal>
        </All>
      </Derived>
    </Fact>

    <Fact path="/knockedOutByNonCustodialParentBenefitSplit">
      <Description>
        We should knockout the user because one they are are the noncustodial parent
        in a special benefit
        split
      </Description>
      <Export downstreamFacts="true" />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/familyAndHousehold/*/causesNoncustodialParentBenefitSplitKnockout" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>


    <Fact path="/dependentWhoCausedNonCustodialKnockoutSplit">
      <Description>
        The family/household member who caused the knockedOutByNonCustodialParentBenefitSplit
      </Description>
      <Derived>
        <IndexOf>
          <Collection>
            <Filter path="/familyAndHousehold">
              <Dependency path="causesNoncustodialParentBenefitSplitKnockout"></Dependency>
            </Filter>
          </Collection>
          <Index>
            <Int>0</Int>
          </Index>
        </IndexOf>
      </Derived>
    </Fact>

    <Fact path="/familyAndHousehold/*/eligibleForBenefitSplit">
      <Name>Eligible for benefit split</Name>
      <Description>Is the dependent eligible for the special rule benefit split?</Description>
      <Export downstreamFacts="true" />

      <Derived>
        <Any>
          <!-- On the parental path-->
          <All>
            <Dependency path="../childMayQualifyForBenefitSplit" />
            <Dependency path="../tpIsParent" />
            <Dependency path="../hasOtherBiologicalOrAdoptiveParent" />
            <Dependency path="../parentalSomeParentNotClaiming" />
            <Dependency path="../inParentsCustody" />
            <Dependency path="../livedWithTpOrOtherBiologicalOrAdoptiveParentMoreThanSixMonths" />
            <Dependency path="../parentsAreDivorcedSeparatedOrLivingApart" />
            <Dependency path="../parentalSupport" />
          </All>
          <!-- On the non-parental path-->
          <All>
            <Dependency path="../reachedNonParentalBenefitSplit" />
            <Not>
              <Dependency path="../specialRuleChildUsedByCustodialParentAsQP" />
            </Not>
            <Dependency path="../specialRuleAgiTest" />
          </All>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/familyAndHousehold/*/reachedNonParentalBenefitSplit">
      <Description>
        On a non-parental path, the taxpayer has realized that the child qualified for the
        benefit split --
        but that doesn't yet mean that they can claim the child.
      </Description>

      <Derived>
        <All>
          <Dependency path="../childMayQualifyForBenefitSplit" />
          <Dependency path="../tpIsNotParent" />
          <Dependency path="../biologicalOrAdoptiveParentsLiving" />
          <Dependency path="../inParentsCustody" />
          <Dependency path="../nonParentalSomeParentNotClaiming" />
          <Dependency path="../parentsMeetReqsRuleForChildrenOfDivorcedParents" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/familyAndHousehold/*/disqualifiedDueToParentalCustody">
      <Description>
        The taxpayer answered questions about the person deep into the special benefit split
        section -- far
        enough that we know that the person is a QP for their parents, and
        that they cannot be used for tax benefits on
        this return.
      </Description>
      <Export downstreamFacts="true" />

      <Derived>
        <All>
          <Dependency path="../reachedNonParentalBenefitSplit" />
          <Any>
            <Not>
              <Dependency path="../specialRuleAgiTest" />
            </Not>
            <Dependency path="../specialRuleChildUsedByCustodialParentAsQP" />
          </Any>
        </All>
      </Derived>
    </Fact>
  </Facts>
</FactDictionaryModule>