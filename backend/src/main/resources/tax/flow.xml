<?xml-model href="./FactDictionaryModule.rng"?>
<FactDictionaryModule>
  <Facts>
    <!--
     ##############################
     ### Flow progress tracking ###
     ##############################
   -->

    <Fact path="/flowIsKnockedOut">
      <Description>The user has been knocked out</Description>
      <BlockSubmissionOnTrue />
      <Derived>
        <Any>
          <Dependency module="filers" path="/flowKnockoutFilerAgeYoungerThan16" />
          <Dependency module="filers" path="/spouseItemizesKnockout" />
          <Dependency module="filers" path="/primaryFilerResidencyKnockout" />
          <Dependency module="filers" path="/flowKnockoutUnsupportedState" />
          <Dependency module="filers" path="/flowKnockoutHasApplicableRegisteredDomesticPartnership" />
          <Dependency module="filers" path="/knockoutSubjectToCommunityPropertyLaws" />
          <Dependency module="interest" path="/interestReports/hasRequiredFactaFilings" />
          <Dependency module="interest" path="/flowKnockoutHasEarlyWithdrawlPenalty" />
          <Dependency module="interest" path="/flowKnockoutHasBonds" />
          <Dependency module="interest" path="/flowKnockoutHasForeignTaxPaid" />
          <Dependency module="interest" path="/flowKnockoutWithholdingUnsupportedState" />
          <Dependency module="interest" path="/flowKnockoutStateTaxWithheld" />
          <Dependency module="unemployment" path="/flowKnockout1099GRepayTooHigh" />
          <Dependency module="unemployment" path="/flowKnockoutUnemploymentCompensationUnsupportedState" />
          <Dependency module="formW2s" path="/knockoutForBox12Value" />
          <Dependency module="formW2s" path="/knockoutForBox12Dependency" />
          <Dependency module="formW2s" path="/flowKnockoutAllocatedTips" />
          <Dependency module="formW2s" path="/flowKnockoutStatutoryEmployee" />
          <Dependency module="formW2s" path="/flowKnockoutThirdPartySickPay" />
          <Dependency module="formW2s" path="/flowKnockoutBox15IncomeFromDifferentState" />
          <Dependency module="formW2s" path="/flowKnockoutNonQualifiedPlans" />
          <Dependency module="formW2s" path="/knockoutMedicareWages" />
          <Dependency module="formW2s" path="/hasABox14NYRRTAValueWeKnockout" />
          <Dependency module="formW2s" path="/anyFilerExceedsMaxOasdiWages" />
          <Dependency module="formW2s" path="/flowKnockoutHasRRTACodesInBox14NotInNY" />
          <Dependency module="formW2s" path="/knockoutYonkersPartYear" />
          <Dependency module="form1099Rs" path="/flowKnockoutRetirementTaxableAmountNotDetermined" />
          <Dependency module="form1099Rs"
            path="/flowKnockoutRetirementTaxableAmountNotDeterminedNotCheckedTaxableAmountBlank" />
          <Dependency module="form1099Rs" path="/flowKnockoutRetirementTotalDistribution" />
          <Dependency module="form1099Rs" path="/knockoutForForm1099RBox8Value" />
          <Dependency module="form1099Rs" path="/knockoutForForm1099RBox8Percentage" />
          <Dependency module="form1099Rs" path="/knockoutForForm1099RBox9aPercentage" />
          <Dependency module="form1099Rs" path="/flowKnockoutRetirementCapitalGain" />
          <Dependency module="form1099Rs" path="/flowKnockoutRetirementNetUnrealizedAppreciation" />
          <Dependency module="form1099Rs" path="/flowKnockoutRetirementAmountAllocableToIRR" />
          <Dependency module="form1099Rs" path="/flowKnockoutRetirementFactaFilingRequirement" />
          <Dependency module="form1099Rs" path="/flowKnockoutForRollover" />
          <Dependency module="form1099Rs" path="/flowKnockoutForDeathBenefitPaymentDate" />
          <Dependency module="form1099Rs" path="/flowKnockoutRetirementQualifiedDisasterDistribution" />
          <Dependency module="form1099Rs" path="/flowKnockoutRetirementQualifiedEarlyDistribution" />
          <Dependency module="form1099Rs" path="/flowKnockoutRetirementPublicSafetyOfficer" />
          <Dependency module="form1099Rs" path="/flowKnockoutForPreTaxToPostTaxRollover" />
          <Dependency module="form1099Rs" path="/has1099rFormsAndFeatureIsNotEnabled" />
          <Dependency module="form1099Rs" path="/flowKnockoutBox15" />
          <Dependency module="socialSecurity" path="/socialSecurityBenefitsAreLossGreaterThan3k" />
          <Dependency module="interest" path="/hasInterestIncomeAndAgiAboveThresholdForMfs" />
          <Dependency module="interest" path="/hasInterestIncomeAndAgiAboveThresholdForMfjOrQss" />
          <Dependency module="interest" path="/hasInterestIncomeAndAgiAboveThresholdForSingleOrHoh" />
          <Dependency module="interest" path="/flowKnockoutTaxExemptInterest" />
          <Dependency module="estimatedPayments" path="/knockoutPaidEstimatedTaxesUnderDifferentLastName" />
          <Dependency module="familyAndHousehold" path="/knockoutHohQpHasNoTin" />
          <Dependency module="familyAndHousehold" path="/knockoutPersonBornAndDiedInTaxYearWithoutTin" />
          <Dependency module="dependentsBenefitSplit" path="/knockedOutByNonCustodialParentBenefitSplit" />
          <Dependency module="dependentsBenefitSplit" path="/knockedOutByContradictory8832" />
          <Dependency module="taxCalculations" path="/knockoutHasNoPaymentsOrCredits" />
          <Dependency module="form1099Rs" path="/knockoutForForm1099RDistributionCode" />
          <Dependency module="form1099Rs" path="/knockoutIraSepSimple" />
          <Dependency module="form1099Rs" path="/knockoutDisabilityAndAnotherCode" />
          <Dependency module="form1099Rs" path="/knockoutTaxablePensionRollover" />
          <Dependency module="form1099Rs" path="/knockoutIndirectRollover" />
          <Dependency module="form1099Rs" path="/knockoutTaxableAmountNotDetermined" />
          <Dependency module="hsa" path="/knockoutNoPaymentsHsaDistribution" />
          <Dependency module="hsa" path="/flowKnockoutHsaMedicalSavingsAccountType" />
          <Dependency module="hsa" path="/flowKnockoutHsaDistributionCode" />
          <Dependency module="hsa" path="/flowKnockoutOtherCoveragePartOfYear" />
          <Dependency module="hsa" path="/flowKnockoutOtherCoverageWholeYear" />
          <Dependency module="hsa" path="/flowKnockoutEarningsOnExcessContributions" />
          <Dependency module="hsa" path="/flowKnockoutHsaTestingPeriodAdditionalIncomeYes" />
          <Dependency module="hsa" path="/flowKnockoutHsaUnqualifiedDistributions" />
          <Dependency module="hsa" path="/flowKnockoutHsaDistributionFMV" />
          <Dependency module="hsa" path="/flowKnockoutMaritalChangeAffectsContributionLimit" />
          <Dependency module="hsa" path="/flowKnockoutMFSLine6Check" />
          <Dependency module="hsa" path="/flowHsaContributionsOverLimitKnockout" />
          <Dependency module="hsa" path="/flowKnockoutHsaExcessContributions" />
          <Dependency module="hsa" path="/flowKnockoutContributionSummaryNoneAllowed" />
          <Dependency module="hsa" path="/flowKnockoutHdhpCoverageStatusNotNeeded" />
          <Dependency module="hsa" path="/flowKnockoutNotEnrolledInHdhp" />
          <Dependency module="hsa" path="/flowKnockoutMadeQualifiedHsaFundingDistribution" />
          <Dependency module="hsa" path="/flowKnockoutHsaCoverage" />
          <Dependency module="hsa" path="/flowKnockoutFilerIsDependentAndContributesToHsa" />
          <Dependency module="ptc" path="/dependentTpRequiresAllocations" />
          <Dependency module="ptc" path="/hasPtcQualifyingPlanAndQsehra" />
          <Dependency module="ptc" path="/needsAllocations" />
          <Dependency module="ptc" path="/hasEmployerSponsoredPlan" />
          <Dependency module="ptc" path="/dependentsRequiredToFile" />
          <Dependency module="ptc" path="/selfReportedHasMultiple1095As" />
          <Dependency module="ptc" path="/hasImmigrationStatusNotEligibleForMarketplace" />
          <Dependency module="ptc" path="/wantsToUseAltCalculations" />
          <Dependency path="/saversCreditKnockouts" />
          <Dependency module="cdcc" path="/knockoutStudentOrDisabled" />
          <Not>
            <Dependency module="income" path="/incomeSourcesSupported" />
          </Not>
          <Not>
            <Dependency module="income" path="/notDigitalAssets" />
          </Not>
          <Dependency module="income" path="/hasForeignAccountsOrTrusts" />
          <Dependency module="income" path="/madeIraContributions" />
          <Dependency path="/isTooLateToFileOrResubmit" />
          <Dependency module="cdcc" path="/flowKnockoutBenefitsDistribution" />
          <Dependency module="cdcc" path="/knockoutCdccWorksheetA" />
          <Dependency module="cdcc" path="/flowKnockoutHouseholdEmployee" />
        </Any>
      </Derived>
      <Placeholder>
        <False />
      </Placeholder>
    </Fact>

    <Fact path="/saversCreditKnockouts">
      <Name>TP knocked out for unsupported Saver's Credit situation</Name>
      <Description>Condition the Saver's Credit knockouts on the TP qualifiying for the credit.</Description>

      <Derived>
        <All>
          <Dependency module="saversCredits" path="/qualifiedForSaverCredit" />
          <Any>
            <Dependency module="saversCredits" path="/hasDistributionsInLastThreeYears" />
            <Dependency module="saversCredits" path="/hasCurrentYearDistributions" />
            <Dependency module="saversCredits" path="/hasSelfReportedContributions" />
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/hasPotentialCredits">
      <Name>Whether the TP may be eligible for any supported credits</Name>
      <Description>Whether the flow should walk the user through credits for which they might be eligible.</Description>

      <Derived>
        <Any>
          <Dependency module="ptc" path="/maybeEligibleForPtc" />
          <Dependency module="ctcOdc" path="/maybeEligibleForCtc" />
          <Dependency module="ctcOdc" path="/maybeEligibleForOdc" />
          <Dependency module="eitc" path="/maybeEligibleForEitc" />
          <Dependency module="cdcc" path="/maybeEligibleForCdccWoTaxLiability" />
          <Dependency module="elderlyAndDisabled"
            path="/maybeEligibleForCreditForElderlyAndDisabledWoTaxLiability" />
          <Dependency module="saversCredits" path="/eligibleForSaversCredit" />
        </Any>
      </Derived>
    </Fact>

    <Fact path="/flowCouldHaveQualifiedForAdditionalNrCredit">
      <Name>TP could qualify for additional nonrefundable credit if limit wasn't reached</Name>
      <Description>Whether the taxpayer could have qualified for an additional Schedule 3 credit if their tax liability
        hadn't already been reduced to $0.</Description>
      <Derived>
        <All>
          <!-- Note the "additional." Unless TP has tax liability before Schedule 3 credits, fact is false. -->
          <Dependency module="schedule3" path="/hasTaxLiabilityBeforeNrCredits" />
          <Any>
            <All> <!-- Yes, this is a no-op, but it is future-proofing for if we ever support the Foreign Tax Credit -->
              <Dependency module="cdcc" path="/maybeEligibleForCdccWoTaxLiability" />
              <Not>
                <Dependency module="cdcc" path="/maybeEligibleForCdcc" />
              </Not>
            </All>
            <All>
              <Dependency module="elderlyAndDisabled"
                path="/maybeEligibleForCreditForElderlyAndDisabledWoTaxLiability" />
              <Not>
                <Dependency module="elderlyAndDisabled" path="/maybeEligibleForCreditForElderlyAndDisabled" />
              </Not>
            </All>
            <All>
              <Dependency module="saversCredits" path="/qualifiedForSaverCreditWoTaxLiability" />
              <Not>
                <Dependency module="saversCredits" path="/qualifiedForSaverCredit" />
              </Not>
            </All>
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/hasQualifiedForAtLeastOneCredit">
      <Name>Whether the TP qualified for at least one credit</Name>
      <Description>Whether the tax payer has qualified for at least one credit</Description>

      <Derived>
        <Any>
          <!-- The way that this is used, makes it so that we need to know if they are filling out any of the forms for
          credits so for PTC they could not qualify for PTC and owe APTC which should still make this fact true -->
          <Dependency module="ptc" path="/needsToFileForm8962" />
          <Dependency module="ctcOdc" path="/ctcQualified" />
          <Dependency module="ctcOdc" path="/odcQualified" />
          <Dependency module="eitc" path="/eitcQualified" />
          <Dependency module="cdcc" path="/cdccQualified" />
          <Dependency module="elderlyAndDisabled" path="/qualifiedForCreditForElderlyAndDisabled" />
          <Dependency module="saversCredits" path="/qualifiedForSaverCredit" />
        </Any>
      </Derived>
    </Fact>

    <Fact path="/hasBeenDisqualifiedForAtLeastOneCredit">
      <Name>TP disqualified from at least one credit</Name>
      <Description>Whether the tax payer has been disqualified from at least one credit</Description>

      <Derived>
        <Any>
          <Not>
            <Dependency module="ptc" path="/qualifiedForPtc" />
          </Not>
          <Not>
            <Dependency module="ctcOdc" path="/ctcQualified" />
          </Not>
          <Not>
            <Dependency module="ctcOdc" path="/odcQualified" />
          </Not>
          <Not>
            <Dependency module="eitc" path="/eitcQualified" />
          </Not>
          <Not>
            <Dependency module="cdcc" path="/cdccQualified" />
          </Not>
          <Not>
            <Dependency module="elderlyAndDisabled" path="/qualifiedForCreditForElderlyAndDisabled" />
          </Not>
          <Not>
            <Dependency module="saversCredits" path="/qualifiedForSaverCredit" />
          </Not>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/hasOdcOrMaybeEligibleForEitc">
      <Name>TP has ODC or may be eligible for EITC</Name>
      <Description>Whether the TP has other child credit or may be eligible for earned income tax credits</Description>

      <Derived>
        <Any>
          <Dependency module="ctcOdc" path="/odcQualified" />
          <Dependency module="eitc" path="/maybeEligibleForEitc" />
        </Any>
      </Derived>
    </Fact>

    <Fact path="/ctcHasImproperClaimsAndMaybeHasAdditionalCredits">
      <Name>In CTC flow and has improper claims and maybe has additional credits</Name>
      <Description>Whether the TP is shown the CTC not qualified screen</Description>

      <Derived>
        <All>
          <Dependency module="ctcOdc" path="/ctcOdcDisqualifiedForImproperClaims" />
          <Dependency path="/hasOdcOrMaybeEligibleForEitc" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/odcHasImproperClaimsAndMaybeHasAdditionalCredits">
      <Name>In ODC flow and has improper claims and maybe has additional credits</Name>
      <Description>Whether the TP is shown the ODC not qualified screen</Description>

      <Derived>
        <All>
          <Dependency module="ctcOdc" path="/ctcOdcDisqualifiedForImproperClaims" />
          <Dependency module="eitc" path="/maybeEligibleForEitc" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/isReceivingRefundableCredits">
      <Name>Is Receiving Refundable credits</Name>
      <Description>Whether the TP is receiving refundable credits -- PTC, ACTC, or EITC</Description>

      <Derived>
        <Any>
          <Dependency module="ptc" path="/isReceivingPtc" />
          <Dependency module="eitc" path="/isReceivingEitc" />
          <Dependency module="ctcOdc" path="/isReceivingActc" />
        </Any>
      </Derived>
    </Fact>

    <Fact path="/isReceivingNonrefundableCredits">
      <Name>Is Receiving Refundable credits</Name>
      <Description>Whether the TP is receiving nonrefundable credits -- CDCC, CTC, ODC, Saver's</Description>

      <Derived>
        <Any>
          <Dependency module="cdcc" path="/isReceivingCdccCredit" />
          <Dependency module="ctcOdc" path="/isReceivingOdc" />
          <Dependency module="ctcOdc" path="/isReceivingCtc" />
          <Dependency module="saversCredits" path="/isReceivingSaversCredit" />
          <Dependency module="elderlyAndDisabled" path="/isReceivingEdc" />
        </Any>
      </Derived>
    </Fact>


    <Fact path="/flowTrue">
      <Name>The Source of Truth</Name>
      <Description>A true value for set fact actions</Description>
      <Derived>
        <True />
      </Derived>
    </Fact>

    <Fact path="/flowFalse">
      <Name>The Source of Falsity</Name>
      <Description>A false value for set fact actions</Description>
      <Derived>
        <False />
      </Derived>
    </Fact>

    <Fact path="/flowHasSeenDeductions">
      <Name>Has seen deductions</Name>
      <Description>A hack to track whether the user's seen the last page of deductions</Description>
      <Export downstreamFacts="true" />
      <Writable>
        <Boolean />
      </Writable>
      <Placeholder>
        <False />
      </Placeholder>
    </Fact>

    <Fact path="/flowHasSeenPaymentMethodAutocorrect">
      <Name>Flow has seen the Payment Method Autocorrect screen</Name>
      <Export downstreamFacts="true" />
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/flowHasSeenPaymentPaperPathAssertion">
      <Name>Flow has seen the Payment Paper Path Assertion screen</Name>
      <Export downstreamFacts="true" />
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/hasNeededDeceasedInfo">
      <Name>Has all deceased info</Name>
      <Description>Determines whether the TP has the needed deceased info for EITC, for form 8862</Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <Dependency module="eitc" path="/form8862RequiredAndHasQualifyingChildren" />
                <GreaterThan>
                  <Left>
                    <CollectionSize>
                      <Dependency module="familyAndHousehold" path="/deceasedEitcEligibleQcCollection" />
                    </CollectionSize>
                  </Left>
                  <Right>
                    <Int>0</Int>
                  </Right>
                </GreaterThan>
              </All>
            </When>
            <Then>
              <Equal>
                <Left>
                  <CollectionSize>
                    <Dependency module="familyAndHousehold" path="/deceasedEitcEligibleQcCollection" />
                  </CollectionSize>
                </Left>
                <Right>
                  <Count>
                    <IsComplete>
                      <Dependency module="familyAndHousehold" path="/familyAndHousehold/*/dateOfDeath" />
                    </IsComplete>
                  </Count>
                </Right>
              </Equal>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <True />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/saversCreditComplete">
      <Name>Has answered all questions regarding savers credit</Name>
      <Description>Determines whether the TP has answered the required savers credit questions</Description>
      <Derived>
        <Any>
          <!-- either they're not eligible -->
          <Not>
            <Dependency module="saversCredits" path="/qualifiedForSaverCredit" />
          </Not>
          <!-- Or they've completed the self reporting questions -->
          <IsComplete>
            <Dependency module="saversCredits" path="/hasSelfReportedDistributionsOrContributions" />
          </IsComplete>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/creditsSectionComplete">
      <Name>Credits section complete</Name>
      <Description>The credits section has been completed</Description>
      <Derived>
        <Any>
          <!-- When the user has no potential credits, we track if they've seen the "no credits" screen-->
          <All>
            <Not>
              <Dependency path="/hasPotentialCredits" />
            </Not>
            <Dependency path="/flowHasSeenCreditsIntroNoCredits" />
          </All>
          <!-- When the user has potential credits, we make sure that each credit reaches a completion state -->
          <All>
            <Dependency path="/hasPotentialCredits" />
            <IsComplete>
              <Dependency module="ctcOdc" path="/odcQualified" />
            </IsComplete>
            <IsComplete>
              <Dependency module="ctcOdc" path="/ctcQualified" />
            </IsComplete>
            <IsComplete>
              <Dependency module="eitc" path="/eitcQualified" />
            </IsComplete>
            <IsComplete>
              <Dependency module="cdcc" path="/cdccQualified" />
            </IsComplete>
            <Dependency module="ptc" path="/ptcSectionIsComplete" />
            <!-- When the user has potential Saver's Credits, each screening question reaches a completion state -->
            <Dependency path="/saversCreditComplete" />
            <!-- If there are /deceasedEitcEligibleQcCollection ensure that they all have /dependents/*/dateOfDeath
                set -->
            <Dependency path="/hasNeededDeceasedInfo" />
            <Dependency module="elderlyAndDisabled" path="/isEdcSectionComplete" />
            <Dependency module="cdcc" path="/cdccSectionIsComplete" />
          </All>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/deductionsSectionComplete">
      <Description>The user has completed the deductions section</Description>

      <Derived>
        <All>
          <Dependency path="/flowHasSeenDeductions" />
          <Any>
            <All>
              <!-- If they are not MFJ dependents and have access to deductions,
              the user's two deductions must be complete -->
              <Not>
                <Dependency module="filers" path="/isMFJDependent" />
              </Not>
              <IsComplete>
                <Dependency module="educatorAdjustment" path="/educatorExpensesAdjustment" />
              </IsComplete>
              <IsComplete>
                <Dependency module="studentLoanAdjustment" path="/studentLoanInterestAdjustmentAmount" />
              </IsComplete>
            </All>
            <!-- MFS dependents are automatically disqualifed from our current adjustments scope and
                will have no data to enter. But we want them to enter the section, so we track if
                they've seen the last page. -->
            <Dependency module="filers" path="/isMFJDependent" />
          </Any>
        </All>

      </Derived>
    </Fact>

    <Fact path="/flowHasSeenCreditsIntroNoCredits">
      <Name>Has seen credits intro for no credits</Name>
      <Description>A hack to track whether the user's seen the last page of credits</Description>
      <Writable>
        <Boolean />
      </Writable>
      <Placeholder>
        <False />
      </Placeholder>
    </Fact>

    <Fact path="/flowHasSeenAmount">
      <Name>Has seen credits</Name>
      <Description>A hack to track whether the user's seen the last page of credits</Description>
      <Writable>
        <Boolean />
      </Writable>
      <Placeholder>
        <False />
      </Placeholder>
    </Fact>

    <Fact path="/flowHasAmountChanged">
      <Name>Has amount changed</Name>
      <Description>A hack to track whether the amount has changed since the user saw credits</Description>
      <Writable>
        <Boolean />
      </Writable>
      <Placeholder>
        <False />
      </Placeholder>
    </Fact>

    <Fact path="/signSectionCompleteSingleFiler">
      <Derived>
        <!-- For the sign page to be complete, primary filer must ave a pin and the reuired values for their sign
        identity-->
        <All>
          <!-- Primary filers require a self selected pin-->
          <IsComplete>
            <Dependency module="signing" path="/selfSelectPin" />
          </IsComplete>
          <!-- Last year's agi completeness check for primary filer -->
          <Any>
            <!-- If the primary filer did not file taxes last year, they will not have sign identity and can skip the
            completeness check -->
            <Not>
              <Dependency module="signing" path='/filedLastYear' />
            </Not>
            <!-- If the primary filer has an IP pin, they will not have sign identity and can skip the completeness
            check -->
            <Dependency module='filers' path="/primaryFilerHasIpPin" />
            <!-- If primary filer last year's agi is used, it must be complete -->
            <All>
              <Dependency module="signing" path='/willEnterLastYearAgi' />
              <IsComplete>
                <Dependency module="signing" path='/lastYearAgi' />
              </IsComplete>
            </All>
            <!-- If primary filer last year's pin is used, it must be complete -->
            <All>
              <Dependency module="signing" path='/willEnterLastYearPin' />
              <IsComplete>
                <Dependency module="signing" path="/selfSelectPinLastYear" />
              </IsComplete>
            </All>
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/signSectionCompleteMarriedFilingJointlyFilers">
      <!-- For the sign page to be complete, primary filer and their spouse must have pins and reuired values for their
      sign identity-->
      <Derived>
        <All>
          <!-- Check to see if primary filer completed has complete all required information-->
          <Dependency path="/signSectionCompleteSingleFiler" />
          <!-- Spouse's required information -->
          <Any>
            <!-- Widowed MJF filers do not require their spouse information to sign. And can skip this section-->
            <Dependency module="filers" path="/isWidowedInTaxYear" />
            <!-- Check to see if the spouse's required information is complete  -->
            <All>
              <!-- Spouse requires a self selected pin-->
              <IsComplete>
                <Dependency module="signing" path="/spouseSelfSelectPin" />
              </IsComplete>
              <!-- Sign identity completeness check for spouse -->
              <Any>
                <!-- If the spouse did not file taxes last year, they will not have sign identity and can skip the
                completeness check -->
                <Not>
                  <Dependency module="signing" path='/spouseFiledLastYear' />
                </Not>
                <!-- If the spouse has an IP pin, they will not have sign identity and can skip the completeness check -->
                <Dependency module='filers' path="/spouseHasIpPin" />
                <!-- If spouse's last year's agi is used, it must be complete -->
                <All>
                  <Dependency module="signing" path='/spouseWillEnterLastYearAgi' />
                  <IsComplete>
                    <Dependency module="signing" path="/spouseLastYearAgi" />
                  </IsComplete>
                </All>
                <!-- If spouse's last year's pin is used, it must be complete -->
                <All>
                  <Dependency module="signing" path='/spouseWillEnterLastYearPin' />
                  <IsComplete>
                    <Dependency module="signing" path="/spouseSelfSelectPinLastYear" />
                  </IsComplete>
                </All>
              </Any>
            </All>
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/signSectionComplete">
      <Name>Sign section complete</Name>
      <Description>The sign section has been completed</Description>
      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency module="signing" path="/isPaperPath" />
            </When>
            <Then>
              <Dependency path="/flowHasSeenPrintAndMail" />
            </Then>
          </Case>
          <Case>
            <When>
              <Dependency module="filingStatus" path="/isFilingStatusMFJ" />
            </When>
            <Then>
              <Dependency path="/signSectionCompleteMarriedFilingJointlyFilers" />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dependency path="/signSectionCompleteSingleFiler" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/flowHasSeenPrintAndMail">
      <Name>Has seen the print and mail explainer</Name>
      <Description>A hack to track whether the user's seen the print and mail explainer if they are on the paper path</Description>
      <Writable>
        <Boolean />
      </Writable>
      <Placeholder>
        <False />
      </Placeholder>
    </Fact>

    <Fact path="/flowHasSeenSignPaperFile">
      <Name>Has seen the paper file screen</Name>
      <Description>A hack to track whether the user's seen paper file screen</Description>
      <Writable>
        <Boolean />
      </Writable>
      <Placeholder>
        <False />
      </Placeholder>
    </Fact>

    <Fact path="/flowIncomplete">
      <Name>Flow is Incomplete</Name>
      <Description>
        Whether any required sections are incomplete.

        This should be updated whenever a `completeIf` is
        updated
        in the flow
      </Description>
      <BlockSubmissionOnTrue />
      <Derived>
        <Not>
          <All>
            <Dependency module="refundPrefs" path="/completedOtherPrefsSection" />
            <Dependency path="/creditsSectionComplete" />
            <Dependency module="familyAndHousehold" path="/familyAndHouseholdIsDone" />
            <Dependency path="/flowHasSeenAmount" />
            <Dependency path="/deductionsSectionComplete" />
            <Dependency module="unemployment" path="/form1099GsIsDone" />
            <Dependency module="formW2s" path="/formW2sIsDone" />
            <Dependency module="interest" path="/interestReportsIsDone" />
            <Dependency module="paymentMethod" path="/paymentSectionComplete" />
            <Dependency module="form1099Rs" path="/form1099RsIsComplete" />
            <Dependency module="form1099Misc" path="/isApfSectionComplete" />
            <Dependency module="socialSecurity" path="/socialSecurityReportsIsDone" />
            <Dependency module="spouseSection" path="/spouseSectionCompleted" />
            <Dependency module="estimatedPayments" path="/estimatedTaxesIsComplete" />
            <Dependency module="cdcc" path="/cdccSectionIsComplete" />
            <IsComplete>
              <Dependency module="filingStatus" path="/isFilingStatusComplete" />
            </IsComplete>
            <Dependency module="income" path="/incomeSourcesIsComplete" />
            <IsComplete>
              <Dependency module="estimatedPayments" path="/paidEstimatedTaxesOrFromLastYear" />
            </IsComplete>
            <Dependency module="filers" path="/aboutYouIsComplete" />
            <Dependency module="cdcc" path="/dependentCareBenefitsIsComplete" />
            <Dependency module="hsa" path="/isHsaSectionComplete" />
            <Dependency module="income" path="/flowHasSeenTotalIncomeSummary" />
          </All>
        </Not>
      </Derived>
    </Fact>

    <Fact path="/hasSeenIncomeNotSupportedIntro">
      <Description>A fact used to log some data to the backend
        about whether filers have seen the income soft-knockout
      </Description>
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/isResubmitting">
      <Name>Is Resubmitting</Name>
      <Description>Whether the Tax Payer has already submitted their return once, and is now resubmitting.</Description>
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/isAfterTaxDay">
      <Description>
        Is "today" after the filer's tax deadline
        This fact needs to be re-evaluated.
        https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/8045
      </Description>
      <Derived>
        <GreaterThan>
          <Left>
            <Dependency path="/today" module="signing" />
          </Left>
          <Right>
            <Dependency path="/taxDay" module="filers" />
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/isAfterTaxDayAndNotResubmitting">
      <Description>
        Is "today" after the filer's tax deadline and is this not a resubmission (for which the filer would
        have more time)
        This fact needs to be
        re-evaluated.
        https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/8045
      </Description>
      <Derived>
        <False />
      </Derived>
    </Fact>

    <Fact path="/isAfterResubmissionDeadline">
      <Description>
        Is "today" after the resubmission deadline, meaning DF is fully closed
        This fact needs to be
        re-evaluated. https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/8045
      </Description>
      <Derived>
        <False />
      </Derived>
    </Fact>

    <Fact path="/isBeforeFederalTaxDeadline">
      <Description>
        Is "today" before or up to the federal tax deadline
        This fact needs to be re-evaluated.
        https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/8045
      </Description>
      <Derived>
        <True />
      </Derived>
    </Fact>

    <Fact path="/isTooLateToFileOrResubmit">
      <Description>
        Is it too late to submit for the first time or resubmit at all?
        This fact needs to be re-evaluated.
        https://git.irslabs.org/irslabs-prototypes/direct-file/-/issues/8045
      </Description>
      <Derived>
        <Any>
          <Dependency path="/isAfterTaxDayAndNotResubmitting" />
          <Dependency path="/isAfterResubmissionDeadline" />
        </Any>
      </Derived>
    </Fact>
  </Facts>
</FactDictionaryModule>
