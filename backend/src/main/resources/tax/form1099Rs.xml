<?xml-model href="./FactDictionaryModule.rng"?>
<FactDictionaryModule>
  <Facts>
    <Fact path="/form1099Rs">
      <Name>Form 1099-R</Name>
      <Description>Form 1099-R: Distributions From Pensions, Annuities, Retirement or Profit-Sharing Plans, IRAs,
        Insurance Contracts, etc.</Description>
      <Export downstreamFacts="true" />
      <Writable>
        <Collection />
      </Writable>
    </Fact>

    <Fact path="/has1099R">
      <Name>Has 1099-R</Name>
      <Description>Whether the TP has any 1099-R listed</Description>
      <Export downstreamFacts="true" />

      <Derived>
        <GreaterThan>
          <Left>
            <CollectionSize>
              <Dependency path="/form1099Rs" />
            </CollectionSize>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/hasSome1099rFormsBeforeSectionEnabled">
      <Description>Whether the TP claimed to have 1099-R forms in the TY. Note that this is used when the 1099R feature
        flag is turned off</Description>
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/has1099rFormsAndFeatureIsNotEnabled">
      <Description>Whether the TP claimed to have 1099Rs and the 1099R feature is disabled</Description>
      <Export downstreamFacts="true" />
      <Derived>
        <False />
      </Derived>
    </Fact>

    <Fact path="/is1099RFeatureFlagEnabled">
      <Name>1099-R Feature Flag</Name>
      <Description>Fact for enabling the 1099-R feature flag. Controlled by build configuration.</Description>
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/filer">
      <Name>Recipient</Name>
      <Description>The recipient of the 1099-R.</Description>

      <Writable>
        <CollectionItem collection="/filers" />
      </Writable>
      <Placeholder>
        <Dependency module="filers" path="/primaryFiler" />
      </Placeholder>
    </Fact>

    <Fact path="/form1099Rs/*/belongsToPrimaryFiler">
      <Description>Whether the 1099-R belongs to the primary filer</Description>
      <Derived>
        <Equal>
          <Left>
            <Dependency path="../filer" />
          </Left>
          <Right>
            <Dependency module="filers" path="/primaryFiler" />
          </Right>
        </Equal>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/belongsToSecondaryFiler">
      <Description>Whether the 1099-R belongs to the secondary filer</Description>
      <Derived>
        <Equal>
          <Left>
            <Dependency path="../filer" />
          </Left>
          <Right>
            <Dependency module="filers" path="/secondaryFiler" />
          </Right>
        </Equal>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/secondaryFilerUsedWithoutMFJ">
      <Description>Whether the secondary filer is used without MFJ</Description>
      <Derived>
        <All>
          <Dependency path="../belongsToSecondaryFiler" />
          <Not>
            <Dependency module="filingStatus" path="/isFilingStatusMFJ" />
          </Not>
        </All>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/secondaryFilerUsedWithoutMFJ">
      <Description>Whether there are any form 1099Rs that use the secondary filer when the status is not MFJ</Description>
      <BlockSubmissionOnTrue />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/secondaryFilerUsedWithoutMFJ" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/recipientAddressChoiceOptions">
      <Name>Recipient 1099-R address choice options</Name>
      <Description>If the recipient's address matches the return, if it's different, or there is none.</Description>
      <Derived>
        <EnumOptions>
          <String>matchesReturn</String>
          <String>different</String>
          <String>none</String>
        </EnumOptions>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/recipientAddressChoice">
      <Name>1099-R recipient address</Name>
      <Description>Same as return, is different, or none</Description>
      <Writable>
        <Enum optionsPath="/recipientAddressChoiceOptions" />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/addressMatchesReturn">
      <Name>Address on form is same as tax return</Name>
      <Description>Whether the form contains the same recipient address as the tax return.</Description>

      <Derived>
        <Equal>
          <Left>
            <Dependency path="../recipientAddressChoice" />
          </Left>
          <Right>
            <Enum optionsPath="/recipientAddressChoiceOptions">matchesReturn</Enum>
          </Right>
        </Equal>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/hasDifferentRecipientAddress">
      <Description>Whether the form has a recipient address different than the tax return</Description>
      <Derived>
        <Equal>
          <Left>
            <Dependency path="../recipientAddressChoice" />
          </Left>
          <Right>
            <Enum optionsPath="/recipientAddressChoiceOptions">different</Enum>
          </Right>
        </Equal>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/addressOverride">
      <Description>Recipient's address, if it doesn't match the one on the return</Description>
      <Writable>
        <Address />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/hasRecipientAddress">
      <Description>Whether the recipient has an address on the 1099R</Description>
      <Export mef="true" />

      <Derived>
        <IsComplete>
          <Dependency path="../address" />
        </IsComplete>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/address">
      <Name>Recipient's address</Name>
      <Description>The recipient's address and ZIP code override field.</Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="../addressMatchesReturn" />
            </When>
            <Then>
              <Dependency module="filers" path="/address" />
            </Then>
          </Case>
          <Case>
            <When>
              <Equal>
                <Left>
                  <Dependency path="../recipientAddressChoice" />
                </Left>
                <Right>
                  <Enum optionsPath="/recipientAddressChoiceOptions">different</Enum>
                </Right>
              </Equal>
            </When>
            <Then>
              <Dependency path="../addressOverride" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/mefRecipientZipcode">
      <Description>The recipient's zipcode with any non-digit characters (like -) stripped out.</Description>
      <Export mef="true" />
      <Derived>
        <Trim>
          <StripChars>
            <Input>
              <Dependency path="../address/postalCode" />
            </Input>
            <Allow>
              <Dependency module="mefTypes" path="/mefZipCodeType" />
            </Allow>
          </StripChars>
        </Trim>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/payer">
      <Description>The payer of the 1099-R.</Description>
      <Export mef="true" />

      <Writable>
        <String />
        <Limit type="Match">
          <String><![CDATA[(([A-Za-z0-9#\-\(\)]|&|')\s?)*([A-Za-z0-9#\-\(\)]|&|')]]></String>
        </Limit>
        <Limit type="MaxLength">
          <Int>75</Int>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/writablePayerNameLine2">
      <Description>Line 2 of the payer's name on the 1099-R</Description>
      <Export mef="true" />

      <Writable>
        <String />
        <Limit type="MaxLength">
          <Int>75</Int>
        </Limit>
        <Limit type="Match">
          <String><![CDATA[(([A-Za-z0-9#/%\-\(\)]|&|')\s?)*([A-Za-z0-9#/%\-\(\)]|&|')]]></String>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/hasUnsupportedDistributionCode">
      <Description>Whether the 1099R has a distribution that Direct file does not support yet. Note: if you change this
        fact, review that the newly supported codes are correctly included in facts like
        ../hasDistributionCodeIncludedInSaversCredit and ../isFullyOrPartlyTaxablePension</Description>
      <Derived>
        <Any>
          <GreaterThan>
            <Left>
              <Length>
                <Dependency path="../writableDistributionCode" />
              </Length>
            </Left>
            <Right>
              <Int>2</Int>
            </Right>
          </GreaterThan>
          <Equal>
            <Left>
              <Length>
                <Dependency path="../writableDistributionCode" />
              </Length>
            </Left>
            <Right>
              <Int>0</Int>
            </Right>
          </Equal>
          <Not>
            <Any>
              <Equal>
                <Left>
                  <Dependency path="../distributionCode" />
                </Left>
                <Right>
                  <String>2</String>
                </Right>
              </Equal>
              <Equal>
                <Left>
                  <Dependency path="../distributionCode" />
                </Left>
                <Right>
                  <String>7</String>
                </Right>
              </Equal>
              <Equal>
                <Left>
                  <Dependency path="../distributionCode" />
                </Left>
                <Right>
                  <String>G</String>
                </Right>
              </Equal>
              <Equal>
                <Left>
                  <Dependency path="../distributionCode" />
                </Left>
                <Right>
                  <String>H</String>
                </Right>
              </Equal>
              <Equal>
                <Left>
                  <Dependency path="../distributionCode" />
                </Left>
                <Right>
                  <String>2B</String>
                </Right>
              </Equal>
              <Equal>
                <Left>
                  <Dependency path="../distributionCode" />
                </Left>
                <Right>
                  <String>B2</String>
                </Right>
              </Equal>
              <Equal>
                <Left>
                  <Dependency path="../distributionCode" />
                </Left>
                <Right>
                  <String>7B</String>
                </Right>
              </Equal>
              <Equal>
                <Left>
                  <Dependency path="../distributionCode" />
                </Left>
                <Right>
                  <String>B7</String>
                </Right>
              </Equal>
              <Equal>
                <Left>
                  <Dependency path="../distributionCode" />
                </Left>
                <Right>
                  <String>BG</String>
                </Right>
              </Equal>
              <Equal>
                <Left>
                  <Dependency path="../distributionCode" />
                </Left>
                <Right>
                  <String>GB</String>
                </Right>
              </Equal>
              <Equal>
                <Left>
                  <Dependency path="../distributionCode" />
                </Left>
                <Right>
                  <String>4G</String>
                </Right>
              </Equal>
              <Equal>
                <Left>
                  <Dependency path="../distributionCode" />
                </Left>
                <Right>
                  <String>G4</String>
                </Right>
              </Equal>
              <Equal>
                <Left>
                  <Dependency path="../distributionCode" />
                </Left>
                <Right>
                  <String>4H</String>
                </Right>
              </Equal>
              <Equal>
                <Left>
                  <Dependency path="../distributionCode" />
                </Left>
                <Right>
                  <String>H4</String>
                </Right>
              </Equal>
            </Any>
          </Not>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/hasPensionRollover">
      <Description>Whether this 1099R has a rollover distribution code.</Description>
      <Derived>
        <GreaterThan>
          <Left>
            <Length>
              <StripChars>
                <Input>
                  <Dependency path="../distributionCode" />
                </Input>
                <Allow>
                  <String>GH</String>
                </Allow>
              </StripChars>
            </Length>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099RsWithPensionRollover">
      <Description>Forms 1099-R with pension rollover</Description>
      <Derived>
        <Filter path="/form1099Rs">
          <Dependency path="hasPensionRollover" />
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/isDirectRollover">
      <Description>Whether this 1099R has a rollover distribution code.</Description>
      <Derived>
        <GreaterThan>
          <Left>
            <Length>
              <StripChars>
                <Input>
                  <Dependency path="../distributionCode" />
                </Input>
                <Allow>
                  <String>GH</String>
                </Allow>
              </StripChars>
            </Length>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099RsWithDirectRollover">
      <Description>Forms 1099-R with direct rollover</Description>
      <Derived>
        <Filter path="/form1099Rs">
          <Dependency path="isDirectRollover" />
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/has1099RWithDirectRollover">
      <Description>Whether any 1099R has a rollover distribution code.</Description>
      <Export downstreamFacts="true" />
      <Derived>
        <All>
          <IsComplete>
            <Dependency path="/form1099RsWithDirectRollover" />
          </IsComplete>
          <GreaterThan>
            <Left>
              <CollectionSize>
                <Dependency path="/form1099RsWithDirectRollover" />
              </CollectionSize>
            </Left>
            <Right>
              <Int>0</Int>
            </Right>
          </GreaterThan>
        </All>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/flowAskAboutIndirectRollover">
      <Description>Used in the flow to determine whether to show 1099-r-box-7-indirect-rollover</Description>
      <Derived>
        <GreaterThan>
          <Left>
            <Length>
              <StripChars>
                <Input>
                  <Dependency path="../distributionCode" />
                </Input>
                <Allow>
                  <String>1237</String>
                </Allow>
              </StripChars>
            </Length>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/causesRolloverKO">
      <Name>1099-R Total Rollover Distribution Knockout</Name>
      <Description>The filer is knocked out of scope if they rolled their distribution into another retirement account</Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <IsComplete>
                  <Dependency path="../indicatedHasIndirectRollover" />
                </IsComplete>
                <Dependency path="../indicatedHasIndirectRollover" />
              </All>
            </When>
            <Then>
              <Dependency path="../writableIsIndirectRollover" />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <False />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/flowKnockoutForRollover">
      <Description>Whether the user is knocked out for their 1099R distribution rolled into another retirement account</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/causesRolloverKO" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099RsWithUnsupportedDistributionCode">
      <Description>Forms 1099-R with unsupported distribution codes</Description>
      <Derived>
        <Filter path="/form1099Rs">
          <Dependency path="hasUnsupportedDistributionCode" />
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/knockoutForForm1099RDistributionCode">
      <Description>Whether the user is knocked out for their 1099R distribution code (box 7)</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />

      <Derived>
        <All>
          <IsComplete>
            <Dependency path="/form1099RsWithUnsupportedDistributionCode" />
          </IsComplete>
          <GreaterThan>
            <Left>
              <CollectionSize>
                <Dependency path="/form1099RsWithUnsupportedDistributionCode" />
              </CollectionSize>
            </Left>
            <Right>
              <Int>0</Int>
            </Right>
          </GreaterThan>
        </All>
      </Derived>
    </Fact>


    <Fact path="/form1099Rs/*/causesPreTaxToPostTaxRolloverKO">
      <Description>At least one 1099-R has a direct rollover pre-to-pre-tax (ie non-ROTH) account or direct rollover
        after-to-after tax (ie ROTH) account. Any changes to this KO should check that
        ../primaryFiler1099RsReportedOnSaversCredit and ../secondaryFiler1099RsReportedOnSaversCredit are still
        calculated correctly.</Description>

      <Derived>
        <All>
          <IsComplete>
            <Dependency path="/form1099RsWithPensionRollover" />
          </IsComplete>
          <Dependency path="../hasPensionRollover" />
          <GreaterThan>
            <Left>
              <Dependency path="../taxableAmount" />
            </Left>
            <Right>
              <Dollar>0</Dollar>
            </Right>
          </GreaterThan>
        </All>
      </Derived>
    </Fact>

    <Fact path="/flowKnockoutForPreTaxToPostTaxRollover">
      <Description>Flow knockout for when the user is knocked out for having direct rollover pre-to-pre-tax (ie
        non-ROTH) account or direct rollover after-to-after tax (ie ROTH) account</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/causesPreTaxToPostTaxRolloverKO" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>


    <Fact path="/form1099Rs/*/payer/tin">
      <Description>The payer's Tin from the 1099-R.</Description>
      <Export mef="true" />

      <Writable>
        <EIN />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/writableGrossDistribution">
      <Description>Box 1 of form 1099-R: Gross Distribution</Description>

      <Writable>
        <Dollar />
        <Limit type="Min">
          <Dollar>0</Dollar>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/payer/hasAddress">
      <Description>Whether the payer has an address</Description>
      <Export mef="true" />
      <Derived>
        <Switch>
          <Case>
            <When>
              <IsComplete>
                <Dependency path="../address" />
              </IsComplete>
            </When>
            <Then>
              <True />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <False />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/payer/address">
      <Description>The payer's address from the 1099-R.</Description>
      <Export mef="true" />

      <Writable>
        <Address />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/mefPayerZipcode">
      <Description>The payer's zipcode with any non-digit characters (like -) stripped out.</Description>
      <Export mef="true" />
      <Derived>
        <Trim>
          <StripChars>
            <Input>
              <Dependency path="../payer/address/postalCode" />
            </Input>
            <Allow>
              <Dependency module="mefTypes" path="/mefZipCodeType" />
            </Allow>
          </StripChars>
        </Trim>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/payer/writablePhone">
      <Description>The payer's phone from the 1099-R.</Description>
      <Export mef="true" />

      <Writable>
        <PhoneNumber />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/grossDistribution">
      <Description>Box 1 of form 1099-R: Gross Distribution (rounded)</Description>
      <Export mef="true" downstreamFacts="true" />

      <Derived>
        <Round>
          <Switch>
            <Case>
              <When>
                <IsComplete>
                  <Dependency path="../writableGrossDistribution" />
                </IsComplete>
              </When>
              <Then>
                <Dependency path="../writableGrossDistribution" />
              </Then>
            </Case>
            <Case>
              <When>
                <True />
              </When>
              <Then>
                <Dollar>0</Dollar>
              </Then>
            </Case>
          </Switch>
        </Round>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableTaxableAmount">
      <Description>Box 2a of form 1099-R: Taxable Amount</Description>
      <!-- TODO lots more to do in this area. From 1040 instructions:

      If your Form 1099-R doesn't show the taxable amount, you must use the General Rule explained in Pub. 939
      to figure the taxable part to enter on line 5b. But if your annuity starting date (defined later) was
      after July 1, 1986, see Simplified Method, later, to find out if you must use that method to figure the taxable part.

      You can ask the IRS to figure the taxable part for you for a $1,000 fee. For details, see Pub. 939.

      If your Form 1099-R shows a taxable amount, you can report that amount on line 5b. But you may be able
      to report a lower taxable amount by using the General Rule or the Simplified Method or if the exclusion
      for retired public safety officers, discussed next, applies.
      -->
      <Writable>
        <Dollar />
        <Limit type="Min">
          <Dollar>0</Dollar>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/taxableAmount">
      <Description>Box 2a of form 1099-R: Taxable Amount (rounded)</Description>
      <Export mef="true" />
      <Derived>
        <Round>
          <Switch>
            <Case>
              <When>
                <IsComplete>
                  <Dependency path="../writableTaxableAmount" />
                </IsComplete>
              </When>
              <Then>
                <Dependency path="../writableTaxableAmount" />
              </Then>
            </Case>
            <Case>
              <When>
                <True />
              </When>
              <Then>
                <Dollar>0</Dollar>
              </Then>
            </Case>
          </Switch>
        </Round>
      </Derived>
    </Fact>

    <Fact path="/primaryFiler1099Rs">
      <Name>Primary Filer 1099Rs</Name>
      <Description>The 1099Rs that belong to the primary filer</Description>
      <Derived>
        <Filter path="/form1099Rs">
          <Dependency path="belongsToPrimaryFiler" />
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/secondaryFiler1099Rs">
      <Name>Secondary Filer 1099Rs</Name>
      <Description>The 1099Rs that belong to the secondary filer</Description>
      <Derived>
        <Filter path="/form1099Rs">
          <Dependency path="belongsToSecondaryFiler" />
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/primaryFiler1099RTaxableAmounts">
      <Name>Primary filer 1099R</Name>
      <Description>Amount of 1099R taxable amount for primary filer</Description>
      <Derived>
        <CollectionSum>
          <Dependency path="/primaryFiler1099Rs/*/taxableAmount" />
        </CollectionSum>
      </Derived>
    </Fact>

    <Fact path="/primaryFiler1099RsReportedOnSaversCredit">
      <Description>The primary filer's 1099Rs that meet the criteria to be reported on the form 8880 line 4a. Note if
        1099R scope changes this filtered fact should be audited against the 8880 instructions so that it still includes
        all of the supported distribution types specified in the instructions.</Description>
      <Export downstreamFacts="true" />
      <Derived>
        <Filter path="/primaryFiler1099Rs">
          <All>
            <Dependency path="hasDistributionCodeIncludedInSaversCredit" />
            <Not>
              <Dependency path="writableIsDistributionFromMilitaryRetirementPlan" />
            </Not>
          </All>
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/primaryFilerHas1099RTaxableAmountsGreaterThan0">
      <Name> Primary filer has 1099R taxable amounts greater than 0</Name>
      <Description>Whether primary filer has taxable amounts greater than 0</Description>
      <Derived>
        <GreaterThan>
          <Left>
            <Dependency path="/primaryFiler1099RTaxableAmounts" />
          </Left>
          <Right>
            <Dollar>0</Dollar>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/secondaryFilerHas1099RTaxableAmountsGreaterThan0">
      <Name> Secondary filer has 1099R taxable amounts greater than 0</Name>
      <Description>Whether secondary filer has taxable amounts greater than 0</Description>
      <Derived>
        <GreaterThan>
          <Left>
            <Dependency path="/secondaryFiler1099RTaxableAmounts" />
          </Left>
          <Right>
            <Dollar>0</Dollar>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/secondaryFiler1099RTaxableAmounts">
      <Name>Secondary filer 1099R</Name>
      <Description>Amount of 1099R taxable amount for primary filer</Description>
      <Derived>
        <CollectionSum>
          <Dependency path="/secondaryFiler1099Rs/*/taxableAmount" />
        </CollectionSum>
      </Derived>
    </Fact>

    <Fact path="/secondaryFiler1099RsReportedOnSaversCredit">
      <Description>The secondary filer's 1099Rs that meet the criteria to be reported on the form 8880 line 4b. Note if
        1099R scope changes this filtered fact should be audited against the 8880 instructions so that it still includes
        all of the supported distribution types specified in the instructions.</Description>
      <Export downstreamFacts="true" />
      <Derived>
        <Filter path="/secondaryFiler1099Rs">
          <All>
            <Dependency path="hasDistributionCodeIncludedInSaversCredit" />
            <Not>
              <Dependency path="writableIsDistributionFromMilitaryRetirementPlan" />
            </Not>
          </All>
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableTaxableAmountNotDetermined">
      <Description>Whether the taxable amount is not determined and 2b is checked.</Description>
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/taxableAmountNotDetermined">
      <Description>Whether the taxable amount is not determined and 2b is checked.</Description>
      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="../writableTaxableAmountNotDetermined" />
            </When>
            <Then>
              <True></True>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <False />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/flowKnockoutRetirementTaxableAmountNotDetermined">
      <Name>Knockout Due to the taxable amount of the distribution being undetermined</Name>
      <Description>At least one 1099R has a set of facts that cause a knockout</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/taxableAmountNotDetermined" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/causesRetirementTaxableAmountNotDeterminedNotCheckedTaxableAmountBlankKO">
      <Name>1099-R Total Distribution Knockout</Name>
      <Description>The filer is knocked out of scope if they got taxable amount in box 2a blank and
        taxableAmountNotDetermined not checked</Description>
      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <Not>
                  <IsComplete>
                    <Dependency path="../writableTaxableAmount" />
                  </IsComplete>
                </Not>
                <IsComplete>
                  <Dependency path="../taxableAmountNotDetermined" />
                </IsComplete>
                <Not>
                  <Dependency path="../taxableAmountNotDetermined" />
                </Not>
              </All>
            </When>
            <Then>
              <True />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <False />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/flowKnockoutRetirementTaxableAmountNotDeterminedNotCheckedTaxableAmountBlank">
      <Name>Knockout Due to the taxable amount not determined unchecked and taxable amount in box 2a being blank</Name>
      <Description>At least one 1099R has a set of facts that cause a knockout</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency
                path="/form1099Rs/*/causesRetirementTaxableAmountNotDeterminedNotCheckedTaxableAmountBlankKO" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableCapitalGain">
      <Description>Box 3 of form 1099-R: Capital Gain</Description>

      <Writable>
        <Dollar />
        <Limit type="Min">
          <Dollar>0</Dollar>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/capitalGain">
      <Name>Retirement captial gain</Name>
      <Description>Box 3 of Form 1099-R, capital gain from box 2a.</Description>
      <Export mef="true" />
      <ExportZero />
      <!-- This is broken into a separate fact because we need to export $0 if the user enters it, but leave it blank otherwise. -->

      <Derived>
        <Switch>
          <Case>
            <When>
              <IsComplete>
                <Dependency path="../writableCapitalGain" />
              </IsComplete>
            </When>
            <Then>
              <Round>
                <Dependency path="../writableCapitalGain" />
              </Round>
            </Then>
          </Case>
            <!-- Keep incomplete if Box 3 is blank. -->
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/flowKnockoutRetirementCapitalGain">
      <Name>Knockout Due to Retirement Capital Gain</Name>
      <Description>At least one 1099R has a set of facts that cause a knockout</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/causesRetirementCapitalGainKO" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/causesRetirementCapitalGainKO">
      <Name>1099-R Capital Gain Scope Knockout</Name>
      <Description>Capital gain info in this 1099-R knocks the filer out of scope.</Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <IsComplete>
                  <Dependency path="../capitalGain" />
                </IsComplete>
                <GreaterThan>
                  <Left>
                    <Dependency path="../capitalGain" />
                  </Left>
                  <Right>
                    <Dollar>0</Dollar>
                  </Right>
                </GreaterThan>
              </All>
            </When>
            <Then>
              <True />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <False />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/iraSepSimple">
      <Description>Whether the IRA/SEP/SIMPLE box is checked.</Description>
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/writableTotalDistribution">
      <Description>If total distribution is checked, it's a total distribution that closed out the account.</Description>
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/totalDistribution">
      <Description>Whether the taxable amount is not determined and 2b is checked.</Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="../writableTotalDistribution" />
            </When>
            <Then>
              <True></True>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <False />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/dateOfBirthBefore1936">
      <Description>Whether the recipient was born before 1936.</Description>

      <Derived>
        <GreaterThan>
          <Left>
            <Dependency module="constants" path="/totalDistributionTaxableStartYear" />
          </Left>
          <Right>
            <Dependency module="filers" path="../filer/dateOfBirth" />
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/causesRetirementTotalDistributionKO">
      <Name>1099-R Total Distribution Knockout</Name>
      <Description>The filer is knocked out of scope if they got a total distrubution and were born before 1/2/1936</Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <Dependency path="../totalDistribution" />
                <Dependency path="../dateOfBirthBefore1936" />
              </All>
            </When>
            <Then>
              <True />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <False />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/flowKnockoutRetirementTotalDistribution">
      <Name>Knockout Due to a TP receiving a total distribution and born before 1/2/1936</Name>
      <Description>At least one 1099R has a set of facts that cause a knockout</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/causesRetirementTotalDistributionKO" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <!-- regex does not allow repetition of the same characters, and only allows codes listed in form 1099-r instructions.
    Characters 0, O, I, V, X, Y, Z are not allowed-->
    <Fact path="/form1099Rs/*/writableDistributionCode">
      <Description>Box 7 of form 1099-R: Distribution Code(s)</Description>
      <Writable>
        <String />
        <Limit type="MaxLength">
          <Int>2</Int>
        </Limit>
        <Limit type="Match">
          <String><![CDATA[([A-HJ-NP-UWa-hj-np-uw1-9])(?!\1)[A-HJ-NP-UWa-hj-np-uw1-9]?]]></String>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/distributionCode">
      <Description>Box 7 of form 1099-R: Distribution Code(s)</Description>
      <Export mef="true" />
      <Derived>
        <Switch>
          <Case>
            <When>
              <IsComplete>
                <Dependency path="../writableDistributionCode" />
              </IsComplete>
            </When>
            <Then>
              <StripChars>
                <Input>
                  <ToUpper>
                    <Trim>
                      <Dependency path="../writableDistributionCode" />
                    </Trim>
                  </ToUpper>
                </Input>
                <Allow>
                  <Dependency module="constants" path="/form1099RsDistributionCodeValidChars" />
                </Allow>
              </StripChars>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/hasDisabilityCodeOnly">
      <Description>Whether this form is not for an IRA and Box 7 contains only the Distribution Code for Disability</Description>
      <Derived>
        <All>
          <Dependency path="../notIraSepSimple" />
          <Equal>
            <Left>
              <Dependency path="../distributionCode" />
            </Left>
            <Right>
              <String>3</String>
            </Right>
          </Equal>
        </All>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/hasDisabilityAndAnotherCode">
      <Description>Whether this form is not for an IRA and Box 7 contains the Distribution Code for Disability along
        with another code</Description>
      <Derived>
        <All>
          <Dependency path="../notIraSepSimple" />
          <Equal>
            <Left>
              <Length>
                <Dependency path="../distributionCode" />
              </Length>
            </Left>
            <Right>
              <Int>2</Int>
            </Right>
          </Equal>
          <Equal>
            <Left>
              <Length>
                <StripChars>
                  <Input>
                    <Dependency path="../distributionCode" />
                  </Input>
                  <Allow>
                    <String>3</String>
                  </Allow>
                </StripChars>
              </Length>
            </Left>
            <Right>
              <Int>1</Int>
            </Right>
          </Equal>
        </All>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/isTaxFreePensionRollover">
      <Description>Whether this form is not for an IRA and is for a tax free pension rollover</Description>
      <Export downstreamFacts="true" />
      <Derived>
        <All>
          <Dependency path="../notIraSepSimple" />
          <Dependency path="../isDirectRollover" />
          <Any>
            <Not>
              <IsComplete>
                <Dependency path="../taxableAmount" />
              </IsComplete>
            </Not>
            <Equal>
              <Left>
                <Dependency path="../taxableAmount" />
              </Left>
              <Right>
                <Dollar>0</Dollar>
              </Right>
            </Equal>
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/isTaxablePensionRollover">
      <Description>Whether this form is not for an IRA but is for a taxable pension rollover</Description>
      <Derived>
        <All>
          <Dependency path="../notIraSepSimple" />
          <Dependency path="../isDirectRollover" />
          <GreaterThan>
            <Left>
              <Dependency path="../taxableAmount" />
            </Left>
            <Right>
              <Dollar>0</Dollar>
            </Right>
          </GreaterThan>
        </All>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/isIndirectRollover">
      <Description>Whether this form should be treated as an indirect rollover</Description>
      <Derived>
        <All>
          <Dependency path="../notIraSepSimple" />
          <Not>
            <Dependency path="../isDirectRollover" />
          </Not>
          <Dependency path="../indicatedHasIndirectRollover" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/isTaxableAmountNotDetermined">
      <Description>Whether this form should be treated as taxable amount not determined</Description>
      <Derived>
        <All>
          <Dependency path="../notIraSepSimple" />
          <Not>
            <Dependency path="../isDirectRollover" />
          </Not>
          <Dependency path="../taxableAmountNotDetermined" />
        </All>
      </Derived>
    </Fact>
    <Fact path="/form1099Rs/*/notIraSepSimple">
      <Description>Whether this form should be treated as not IRA/SEP/SIMPLE</Description>
      <Derived>
        <Switch>
          <Case>
            <When>
              <IsComplete>
                <Dependency path="../iraSepSimple" />
              </IsComplete>
            </When>
            <Then>
              <Not>
                <Dependency path="../iraSepSimple" />
              </Not>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <True />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableIsIndirectRollover">
      <Description>User response: is this form for an indirect rollover</Description>
      <!-- TODO note that this will need to change when we decide to support IRA rollovers. -->
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/writableIsDistributionFromMilitaryRetirementPlan">
      <Description>User response: is this distribution from a military retirement plan</Description>
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/indicatedHasIndirectRollover">
      <Description>User response: is this form for an indirect rollover after accounting for edit conditions</Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="../flowAskAboutIndirectRollover" />
            </When>
            <Then>
              <Dependency path="../writableIsIndirectRollover" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/knockoutIraSepSimple">
      <Description>At least one 1099R causes a knockout due to IRA/SEP/SIMPLE. Any changes to this KO should check that
        ../primaryFiler1099RsReportedOnSaversCredit and ../secondaryFiler1099RsReportedOnSaversCredit are still
        calculated correctly</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />
      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/iraSepSimple" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/knockoutDisabilityAndAnotherCode">
      <Description>At least one 1099R causes a knockout due to disability plus another distribution code</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />
      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/hasDisabilityAndAnotherCode" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/knockoutTaxablePensionRollover">
      <Description>At least one 1099R causes a knockout due to taxable pension rollover</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />
      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/isTaxablePensionRollover" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/knockoutIndirectRollover">
      <Description>At least one 1099R causes a knockout due to indirect rollover</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />
      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/isIndirectRollover" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/knockoutTaxableAmountNotDetermined">
      <Description>At least one 1099R causes a knockout due to taxable amount not determined</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />
      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/isTaxableAmountNotDetermined" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/isRollover">
      <Description>Whether this form is a rollover</Description>
      <Derived>
        <Any>
          <Dependency path="../isDirectRollover" />
          <Dependency path="../isIndirectRollover" />
        </Any>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/isFullyOrPartlyTaxablePension">
      <Description>Whether this form is for a fully or partly taxable pension. This currently corresponds directly to
        the codes included in Savers credit calculations, but if more box 7 codes are added this should be reviewed.</Description>
      <Derived>
        <All>
          <Not>
            <Dependency path="../iraSepSimple" />
          </Not>
          <Not>
            <Dependency path="../isTaxableAmountNotDetermined" />
          </Not>
          <Not>
            <Dependency path="../isIndirectRollover" />
          </Not>
          <Dependency path="../hasDistributionCodeIncludedInSaversCredit" />
        </All>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/hasDistributionCodeIncludedInSaversCredit">
      <Description>The 1099R has a distribution code that is included in the sum for the Savers Credit (Form 8880) line
        4</Description>
      <Derived>
        <Any>
          <Equal>
            <Left>
              <Dependency path="../distributionCode" />
            </Left>
            <Right>
              <String>2</String>
            </Right>
          </Equal>
          <Equal>
            <Left>
              <Dependency path="../distributionCode" />
            </Left>
            <Right>
              <String>7</String>
            </Right>
          </Equal>
          <Equal>
            <Left>
              <Dependency path="../distributionCode" />
            </Left>
            <Right>
              <String>2B</String>
            </Right>
          </Equal>
          <Equal>
            <Left>
              <Dependency path="../distributionCode" />
            </Left>
            <Right>
              <String>B2</String>
            </Right>
          </Equal>
          <Equal>
            <Left>
              <Dependency path="../distributionCode" />
            </Left>
            <Right>
              <String>7B</String>
            </Right>
          </Equal>
          <Equal>
            <Left>
              <Dependency path="../distributionCode" />
            </Left>
            <Right>
              <String>B7</String>
            </Right>
          </Equal>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/isPartlyTaxablePension">
      <Description>Whether this form is for a partly taxable pension</Description>
      <Derived>
        <All>
          <Dependency path="../isFullyOrPartlyTaxablePension" />
          <Not>
            <Equal>
              <Left>
                <Dependency path="../grossDistribution" />
              </Left>
              <Right>
                <Dependency path="../taxableAmount" />
              </Right>
            </Equal>
          </Not>
        </All>
      </Derived>
    </Fact>

    <Fact path="/primaryFilerForm1099RsWithDisabilityCodeOnly">
      <Description>Primary Filer's Forms 1099-R with only the distribution code for disability</Description>
      <Derived>
        <Filter path="/primaryFiler1099Rs">
          <Dependency path="hasDisabilityCodeOnly" />
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/secondaryFilerForm1099RsWithDisabilityCodeOnly">
      <Description>Secondary Filer's Forms 1099-R with only the distribution code for disability</Description>
      <Derived>
        <Filter path="/secondaryFiler1099Rs">
          <Dependency path="hasDisabilityCodeOnly" />
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/form1099RsWithTaxFreePensionRollover">
      <Description>Forms 1099-R with tax free pension rollover</Description>

      <Derived>
        <Filter path="/form1099Rs">
          <Dependency path="isTaxFreePensionRollover" />
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/form1099RsWithPartlyTaxablePension">
      <Description>Forms 1099-R with partly taxable pension</Description>
      <Derived>
        <Filter path="/form1099Rs">
          <Dependency path="isPartlyTaxablePension" />
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/form1099RsWithFullyTaxablePension">
      <Description>Forms 1099-R with fully taxable pension</Description>
      <Derived>
        <Filter path="/form1099Rs">
          <Dependency path="isFullyTaxable" />
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/primaryFilerDisabilityPensionsBeforeMinRetirementAge">
      <Description>The sum of gross distributions for this collection of forms</Description>
      <!-- TODO this will need to change if we remove the KO for hasDisabilityAndAnotherCode -->
      <Derived>
        <CollectionSum>
          <Dependency path="/primaryFilerForm1099RsWithDisabilityCodeOnly/*/grossDistribution" />
        </CollectionSum>
      </Derived>
    </Fact>

    <Fact path="/secondaryFilerDisabilityPensionsBeforeMinRetirementAge">
      <Description>The sum of gross distributions for this collection of forms</Description>
      <!-- TODO this will need to change if we remove the KO for hasDisabilityAndAnotherCode -->
      <Derived>
        <CollectionSum>
          <Dependency path="/secondaryFilerForm1099RsWithDisabilityCodeOnly/*/grossDistribution" />
        </CollectionSum>
      </Derived>
    </Fact>

    <Fact path="/taxFreePensionRollovers">
      <Description>The sum of gross distributions for this collection of forms</Description>
      <Export downstreamFacts="true" />
      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <IsComplete>
                  <Dependency path="/form1099RsWithTaxFreePensionRollover" />
                </IsComplete>
                <GreaterThan>
                  <Left>
                    <CollectionSize>
                      <Dependency path="/form1099RsWithTaxFreePensionRollover" />
                    </CollectionSize>
                  </Left>
                  <Right>
                    <Int>0</Int>
                  </Right>
                </GreaterThan>
              </All>
            </When>
            <Then>
              <CollectionSum>
                <Dependency path="/form1099RsWithTaxFreePensionRollover/*/grossDistribution" />
              </CollectionSum>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/partlyTaxablePensions">
      <Description>The sum of gross distributions for this collection of forms</Description>
      <Export downstreamFacts="true" />
      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <IsComplete>
                  <Dependency path="/form1099RsWithPartlyTaxablePension" />
                </IsComplete>
                <GreaterThan>
                  <Left>
                    <CollectionSize>
                      <Dependency path="/form1099RsWithPartlyTaxablePension" />
                    </CollectionSize>
                  </Left>
                  <Right>
                    <Int>0</Int>
                  </Right>
                </GreaterThan>
              </All>
            </When>
            <Then>
              <CollectionSum>
                <Dependency path="/form1099RsWithPartlyTaxablePension/*/grossDistribution" />
              </CollectionSum>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/fullyTaxablePensions">
      <Description>The sum of gross distributions for this collection of forms</Description>
      <Export downstreamFacts="true" />
      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <IsComplete>
                  <Dependency path="/form1099RsWithFullyTaxablePension" />
                </IsComplete>
                <GreaterThan>
                  <Left>
                    <CollectionSize>
                      <Dependency path="/form1099RsWithFullyTaxablePension" />
                    </CollectionSize>
                  </Left>
                  <Right>
                    <Int>0</Int>
                  </Right>
                </GreaterThan>
              </All>
            </When>
            <Then>
              <CollectionSum>
                <Dependency path="/form1099RsWithFullyTaxablePension/*/grossDistribution" />
              </CollectionSum>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/taxableAmountsOfPartiallyTaxablePensions">
      <Description>The sum of taxable amounts for this collection of forms</Description>
      <Export downstreamFacts="true" />
      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <IsComplete>
                  <Dependency path="/form1099RsWithPartlyTaxablePension" />
                </IsComplete>
                <GreaterThan>
                  <Left>
                    <CollectionSize>
                      <Dependency path="/form1099RsWithPartlyTaxablePension" />
                    </CollectionSize>
                  </Left>
                  <Right>
                    <Int>0</Int>
                  </Right>
                </GreaterThan>
              </All>
            </When>
            <Then>
              <CollectionSum>
                <Dependency path="/form1099RsWithPartlyTaxablePension/*/taxableAmount" />
              </CollectionSum>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableOtherDollar">
      <Description>Box 8 of form 1099-R: Other</Description>
      <Writable>
        <Dollar />
        <Limit type="Min">
          <Dollar>0</Dollar>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/roundedOtherDollar">
      <Description>Box 8 of Form 1099-R, other amount.</Description>
      <Export mef="true" />
      <ExportZero />
      <!-- This is broken into a separate fact because we need to export $0 if the user enters it, but leave it blank otherwise. -->

      <Derived>
        <Switch>
          <Case>
            <When>
              <IsComplete>
                <Dependency path="../writableOtherDollar" />
              </IsComplete>
            </When>
            <Then>
              <Round>
                <Dependency path="../writableOtherDollar" />
              </Round>
            </Then>
          </Case>
          <!-- Keep incomplete if Box 8 is blank. -->
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/causesRetirementBox8ValueKO">
      <Name>1099-R Box 8 value entry Scope Knockout</Name>
      <Description>Box 8 value entry info in this 1099-R knocks the filer out of scope.</Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <IsComplete>
                  <Dependency path="../roundedOtherDollar" />
                </IsComplete>
                <GreaterThan>
                  <Left>
                    <Dependency path="../roundedOtherDollar" />
                  </Left>
                  <Right>
                    <Dollar>0</Dollar>
                  </Right>
                </GreaterThan>
              </All>
            </When>
            <Then>
              <True />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <False />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/knockoutForForm1099RBox8Value">
      <Name>Knockout Due to Box 8 value entry</Name>
      <Description>At least one 1099R has a set of facts that cause a knockout</Description>
      <Export downstreamFacts="true" />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/causesRetirementBox8ValueKO" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableOtherPercentage">
      <Name>Percentage for 1099-R box 8</Name>
      <Description>Percentage</Description>
      <Export mef="true" />
      <Writable>
        <String />
        <Limit type="Match">
          <!-- MeF RatioType allows values 0 to 1 with up to 5 decimal places.
          That is, 12.345% would be 0.12345.
          This allows for the same range, with decimal point shifted two places left.
          That is, user enters 12.345 to mean 12.345%.
          So, up to 3 decimal places. -->
          <String><![CDATA[^100(\.0{1,3})?|[0-9]{1,2}(\.\d{1,3})?$]]></String>
        </Limit>
        <Limit type="MaxLength">
          <Int>7</Int>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/causesRetirementBox8PercentageKO">
      <Name>1099-R Box 8 percentage entry Scope Knockout</Name>
      <Description>Box 8 percentage entry info in this 1099-R knocks the filer out of scope</Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <IsComplete>
                  <Dependency path="../writableOtherPercentage" />
                </IsComplete>
                <NotEqual>
                  <!-- This is string-based logic for "equal to zero" -->
                  <Left>
                    <Length>
                      <Dependency path="../writableOtherPercentage" />
                    </Length>
                  </Left>
                  <Right>
                    <Length>
                      <StripChars>
                        <Input>
                          <Dependency path="../writableOtherPercentage" />
                        </Input>
                        <Allow>
                          <String>0.</String>
                        </Allow>
                      </StripChars>
                    </Length>
                  </Right>
                </NotEqual>
              </All>
            </When>
            <Then>
              <True />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <False />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/knockoutForForm1099RBox8Percentage">
      <Name>Knockout Due to Box 8 percentage entry</Name>
      <Description>At least one 1099R has a set of facts that cause a knockout</Description>
      <Export downstreamFacts="true" />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/causesRetirementBox8PercentageKO" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writablePercentageTotalDistribution">
      <Name>Percentage total distribution for 1099-R box 9a</Name>
      <Description>Percentage total distribution</Description>
      <Export mef="true" />
      <Writable>
        <String />
        <Limit type="Match">
          <!-- MeF RatioType allows values 0 to 1 with up to 5 decimal places.
          That is, 12.345% would be 0.12345.
          This allows for the same range, with decimal point shifted two places left.
          That is, user enters 12.345 to mean 12.345%.
          So, up to 3 decimal places. -->
          <String><![CDATA[^100(\.0{1,3})?|[0-9]{1,2}(\.\d{1,3})?$]]></String>
        </Limit>
        <Limit type="MaxLength">
          <Int>7</Int>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/causesRetirementBox9aPercentageKO">
      <Description>Box 9a percentage entry info in this 1099-R knocks the filer out of scope</Description>
      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <IsComplete>
                  <Dependency path="../writablePercentageTotalDistribution" />
                </IsComplete>
                <NotEqual>
                  <!-- This is string-based logic for "equal to zero" -->
                  <Left>
                    <Length>
                      <Dependency path="../writablePercentageTotalDistribution" />
                    </Length>
                  </Left>
                  <Right>
                    <Length>
                      <StripChars>
                        <Input>
                          <Dependency path="../writablePercentageTotalDistribution" />
                        </Input>
                        <Allow>
                          <String>0.</String>
                        </Allow>
                      </StripChars>
                    </Length>
                  </Right>
                </NotEqual>
              </All>
            </When>
            <Then>
              <True />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <False />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/knockoutForForm1099RBox9aPercentage">
      <Name>Knockout Due to Box 9a percentage entry</Name>
      <Description>At least one 1099R has a set of facts that cause a knockout</Description>
      <Export downstreamFacts="true" />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/causesRetirementBox9aPercentageKO" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableTotalEmployeeContributions">
      <Name>Total employee contributions</Name>
      <Description>Box 9b of form 1099-R: Total employee contributions</Description>
      <Writable>
        <Dollar />
        <Limit type="Min">
          <Dollar>0</Dollar>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/roundedTotalEmployeeContributions">
      <Description>Box 9b of form 1099-R: Total employee contributions</Description>
      <Export mef="true" />
      <ExportZero />
      <Derived>
        <Round>
          <Dependency path="../writableTotalEmployeeContributions" />
        </Round>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableAmountAllocableToIRR">
      <Name>Amount allocable to IRR within 5 years</Name>
      <Description>Box 10 of form 1099-R: Amount allocable to IRR within 5 years</Description>
      <Writable>
        <Dollar />
        <Limit type="Min">
          <Dollar>0</Dollar>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/roundedAmountAllocableToIRR">
      <Description>Box 10 of form 1099-R: Amount allocable to IRR within 5 years</Description>
      <Export mef="true" />
      <ExportZero />
      <!-- This is broken into a separate fact because we need to export $0 if the user enters it, but leave it blank otherwise. -->

      <Derived>
        <Switch>
          <Case>
            <When>
              <IsComplete>
                <Dependency path="../writableAmountAllocableToIRR" />
              </IsComplete>
            </When>
            <Then>
              <Round>
                <Dependency path="../writableAmountAllocableToIRR" />
              </Round>
            </Then>
          </Case>
          <!-- Keep incomplete if Box 3 is blank. -->
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/causesRetirementAmountAllocableToIRRKO">
      <Name>1099-R Amount allocable to IRR within 5 years Knockout</Name>
      <Description>The filer is knocked out of scope if amount allocable to IRR within 5 years is greater than zero.
      </Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <IsComplete>
                  <Dependency path="../roundedAmountAllocableToIRR" />
                </IsComplete>
                <GreaterThan>
                  <Left>
                    <Dependency path="../roundedAmountAllocableToIRR" />
                  </Left>
                  <Right>
                    <Dollar>0</Dollar>
                  </Right>
                </GreaterThan>
              </All>
            </When>
            <Then>
              <True />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <False />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/flowKnockoutRetirementAmountAllocableToIRR">
      <Name>Knockout due to the amount allocable to IRR within 5 years</Name>
      <Description>The filer is knocked out of scope if amount allocable to IRR within 5 years is greater than zero</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/causesRetirementAmountAllocableToIRRKO" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableFirstYearDesignatedRothContributions">
      <Name>1st year of designated Roth contributions</Name>
      <Description>Box 11 of form 1099-R: 1st year of designated Roth contributions</Description>
      <Export mef="true" />

      <Writable>
        <String />
        <Limit type="Match">
          <String><![CDATA[[1-2][0-9][0-9][0-9]]]></String>
        </Limit>
        <Limit type="MinLength">
          <Int>4</Int>
        </Limit>
        <Limit type="MaxLength">
          <Int>4</Int>
        </Limit>
      </Writable>
    </Fact>

    <!-- It may make sense to create scala types to reflect these objects since we see them repeating in a couple spots already (W2s, here)  -->
    <Fact path="/form1099Rs/*/hasLocalOrStateTaxInfo">
      <Description>Whether the 1099R has any local or state tax info</Description>
      <Export mef="true" />
      <Derived>
        <Any>
          <IsComplete>
            <Dependency path="../xmlStateCd" />
          </IsComplete>
          <IsComplete>
            <Dependency path="../stateTaxWithheld" />
          </IsComplete>
          <IsComplete>
            <Dependency path="../writablePayerStateNumber" />
          </IsComplete>
          <IsComplete>
            <Dependency path="../stateDistribution" />
          </IsComplete>
          <Dependency path="../hasLocalTaxInfo" />
        </Any>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/hasLocalTaxInfo">
      <Description>Whether the 1099R has any local tax info</Description>
      <Export mef="true" />
      <Derived>
        <Any>
          <IsComplete>
            <Dependency path="../localTaxWithheld" />
          </IsComplete>
          <IsComplete>
            <Dependency path="../writableLocality" />
          </IsComplete>
          <IsComplete>
            <Dependency path="../localDistribution" />
          </IsComplete>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableStateTaxWithheld">
      <Description>Box 14 of form 1099-R: State tax withheld</Description>
      <Writable>
        <Dollar />
        <Limit type="Min">
          <Dollar>0</Dollar>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/stateTaxWithheld">
      <Name>Federal income tax withheld</Name>
      <Description>Box 14 of Form 1099-R: Federal income tax withheld (rounded).</Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <Round>
          <Dependency path="../writableStateTaxWithheld" />
        </Round>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/missingStateTaxWithheld">
      <Description>Whether the TP is in an income state and didn't report any state tax on their 1099R</Description>
      <Derived>
        <All>
          <Not>
            <Dependency path="/hasNoStateIncomeTax" module="constants" />
          </Not>
          <Any>
            <Not>
              <IsComplete>
                <Dependency path="../stateTaxWithheld" />
              </IsComplete>
            </Not>
            <Equal>
              <Left>
                <Dependency path="../stateTaxWithheld" />
              </Left>
              <Right>
                <Dollar>0</Dollar>
              </Right>
            </Equal>
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/hasMoreTaxThanDistributionsOn1099Rs">
      <Description>Whether any 1099Rs had less gross distributions reported than the amount of tax withheld. Used for
        alerts and to block submission</Description>
      <BlockSubmissionOnTrue />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/hasMoreTaxWithheldThanDistributions" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/hasMoreTaxWithheldThanDistributions">
      <Description>The gross distributions reported were less than the local and state tax withheld. This isn't a real
        situation and indicates an input error</Description>

      <Derived>
        <LessThan>
          <Left>
            <Dependency path="../grossDistribution" />
          </Left>
          <Right>
            <Add>
              <!-- Create a distinct fact for this if we start repeating this logic -->
              <Switch>
                <Case>
                  <When>
                    <IsComplete>
                      <Dependency path="../stateTaxWithheld" />
                    </IsComplete>
                  </When>
                  <Then>
                    <Dependency path="../stateTaxWithheld" />
                  </Then>
                </Case>
                <Case>
                  <When>
                    <True />
                  </When>
                  <Then>
                    <Dollar>0</Dollar>
                  </Then>
                </Case>
              </Switch>
              <Switch>
                <Case>
                  <When>
                    <IsComplete>
                      <Dependency path="../localTaxWithheld" />
                    </IsComplete>
                  </When>
                  <Then>
                    <Dependency path="../localTaxWithheld" />
                  </Then>
                </Case>
                <Case>
                  <When>
                    <True />
                  </When>
                  <Then>
                    <Dollar>0</Dollar>
                  </Then>
                </Case>
              </Switch>
            </Add>
          </Right>
        </LessThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writablePayerState">
      <Name>State abbreviation code</Name>
      <Description>Box 15 of form 1099-R: payer's state </Description>

      <Writable>
        <Enum optionsPath="/incomeFormStateOptions" />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/xmlStateCd">
      <Name>State Code (xml)</Name>
      <Description>The state code used to populate the element corresponding to form 1099-R box 15. This fact is used to
        handle mapping the values used by the DF client into what the MeF system and DF submit application expect.</Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <IsComplete>
                  <Dependency path="../writablePayerState" />
                </IsComplete>
                <NotEqual>
                  <Left>
                    <Dependency module="filers" path="/filerResidenceAndIncomeState" />
                  </Left>
                  <Right>
                    <Enum optionsPath="/scopedStateOptions">moreThanOne</Enum>
                  </Right>
                </NotEqual>
                <NotEqual>
                  <Left>
                    <Dependency module="filers" path="/filerResidenceAndIncomeState" />
                  </Left>
                  <Right>
                    <Enum optionsPath="/scopedStateOptions">noneOfThese</Enum>
                  </Right>
                </NotEqual>
              </All>
            </When>
            <Then>
              <ToUpper>
                <AsString>
                  <Dependency module="filers" path="/filerResidenceAndIncomeState" />
                </AsString>
              </ToUpper>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writablePayerStateNumber">
      <Name>Payers state I.D. number</Name>
      <Description>Box 15 of form 1099-R: payer's state code</Description>
      <Export mef="true" />
      <Writable>
        <String />
        <Limit type="Match">
          <String><![CDATA[([!-~£§ÁÉÍÑÓ×ÚÜáéíñóúü]\s?)*[!-~£§ÁÉÍÑÓ×ÚÜáéíñóúü]]]></String>
        </Limit>
        <Limit type="MaxLength">
          <Int>16</Int>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/causesBox15Knockout">
      <Name>Causes Box 15 Knockout</Name>
      <Description>If a taxpayer's state on their 1099-R doesn't match the state in their About You section, we may not
        be able to give the right information for State tax filing. Knocks taxpayer out if all of the following are
        true: 1. User selects "Another state" from the dropdown; 2. Box 14 is has a value greater than $0 (or blank);
        box 7 does not include distribution code G or H.
      </Description>
      <Derived>
        <All>
          <IsComplete>
            <Dependency path="../writablePayerState" />
          </IsComplete>
          <Equal>
            <Left>
              <Dependency path="../writablePayerState" />
            </Left>
            <Right>
              <Enum optionsPath="/incomeFormStateOptions">differentState</Enum>
            </Right>
          </Equal>
          <Any>
            <GreaterThan>
              <Left>
                <Dependency path="../stateTaxWithheld" />
              </Left>
              <Right>
                <Dollar>0</Dollar>
              </Right>
            </GreaterThan>
            <Not>
              <Dependency path="../hasPensionRollover" />
            </Not>
          </Any>
        </All>
      </Derived>
    </Fact>

    <Fact path="/flowKnockoutBox15">
      <Name>Knockout when state on 1099-R doesn't match filer's state of residency</Name>
      <Description>At least one 1099R has a set of facts that cause a knockout</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/causesBox15Knockout" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableStateDistribution">
      <Description>Box 16 of form 1099-R: State distribution</Description>
      <Writable>
        <Dollar />
        <Limit type="Min">
          <Dollar>0</Dollar>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/stateDistribution">
      <Name>State distribution</Name>
      <Description>Box 16 of Form 1099-R: State distribution (rounded).</Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <Round>
          <Dependency path="../writableStateDistribution" />
        </Round>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableLocalTaxWithheld">
      <Description>Box 17 of form 1099-R: Local tax withheld</Description>
      <Writable>
        <Dollar />
        <Limit type="Min">
          <Dollar>0</Dollar>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/localTaxWithheld">
      <Name>Federal income tax withheld</Name>
      <Description>Box 17 of form 1099-R: Local tax withheld (rounded).</Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <Round>
          <Dependency path="../writableLocalTaxWithheld" />
        </Round>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableLocality">
      <Name>Locality name</Name>
      <Description>Form 1099-R box 18: Locality name.
        This is the writable optional fact. Can be left incomplete. Please
        use the derived fact in downstream calculations.</Description>
      <Export mef="true" />
      <Writable>
        <String />
        <Limit type="Match">
          <String><![CDATA[([!-~£§ÁÉÍÑÓ×ÚÜáéíñóúü]\s?)*[!-~£§ÁÉÍÑÓ×ÚÜáéíñóúü]]]></String>
        </Limit>
        <Limit type="MaxLength">
          <Int>20</Int>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/writableLocalDistribution">
      <Description>Box 19 of form 1099-R: Local distribution</Description>
      <Writable>
        <Dollar />
        <Limit type="Min">
          <Dollar>0</Dollar>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/localDistribution">
      <Name>Local distribution</Name>
      <Description>Box 19 of form 1099-R: Local distribution (rounded).</Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <Round>
          <Dependency path="../writableLocalDistribution" />
        </Round>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/factaFilingRequirement">
      <Description>Box 12: Whether the FACTA filing requirement box is checked.</Description>
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/flowKnockoutRetirementFactaFilingRequirement">
      <Name>Knockout when FACTA filing requirement box is checked</Name>
      <Description>At least one 1099R has a set of facts that cause a knockout</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/factaFilingRequirement" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writeablePublicSafetyOfficer">
      <Description>Box 7: Whether the filer/spouse is a public safety officer.</Description>
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/isPublicSafetyOfficer">
      <Description>Box 7: Whether the filer/spouse is a public safety officer accounting for edit conditions.</Description>
      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <IsComplete>
                  <Dependency path="../flowAskAboutPublicSafetyOfficer" />
                </IsComplete>
                <Dependency path="../flowAskAboutPublicSafetyOfficer" />
              </All>
            </When>
            <Then>
              <Dependency path="../writeablePublicSafetyOfficer" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/flowAskAboutPSOPremiums">
      <Description>Used in the flow to determine whether to show PSO premiums screen</Description>
      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <IsComplete>
                  <Dependency path="../isPublicSafetyOfficer" />
                </IsComplete>
                <Dependency path="../isPublicSafetyOfficer" />
              </All>
            </When>
            <Then>
              <True />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <False />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writeablePublicSafetyOfficerPremiums">
      <Description>Box 7: Whether the filer/spouse is a public safety officer using dist to pay premiums.</Description>
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/hasPublicSafetyOfficerPremiums">
      <Description>Box 7: Whether the filer/spouse is a public safety officer using dist to pay premiums accounting for
        edit conditions</Description>
      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <IsComplete>
                  <Dependency path="../flowAskAboutPSOPremiums" />
                </IsComplete>
                <Dependency path="../flowAskAboutPSOPremiums" />
              </All>
            </When>
            <Then>
              <Dependency path="../writeablePublicSafetyOfficerPremiums" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/causesPSOPremiumsKnockout">
      <Description>Used in the flow to determine whether to show 1099-r-pso-knockout</Description>
      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <IsComplete>
                  <Dependency path="../hasPublicSafetyOfficerPremiums" />
                </IsComplete>
                <Dependency path="../hasPublicSafetyOfficerPremiums" />
              </All>
            </When>
            <Then>
              <True />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <False />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/flowKnockoutRetirementPublicSafetyOfficer">
      <Name>Knockout when the filer/spouse is a public safety officer</Name>
      <Description>At least one 1099R has a set of facts that cause a knockout</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/causesPSOPremiumsKnockout" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099RsNonstandardCorrectedOptions">
      <Name>Form 1099-R Nonstandard and/or Corrected Options</Name>
      <Description>Options for the filer to say whether a 1099-R is nonstandard, corrected, both, or
        neither</Description>
      <Derived>
        <EnumOptions>
          <String>neither</String>
          <String>nonstandard</String>
          <String>corrected</String>
          <String>both</String>
        </EnumOptions>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/nonstandardOrCorrectedChoice">
      <Name>Nonstandard or corrected choice</Name>
      <Description>Whether the form 1099-R is nonstandard, corrected, both, or neither</Description>
      <Writable>
        <Enum optionsPath="/form1099RsNonstandardCorrectedOptions" />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/isCorrected">
      <Description>Whether the form 1099-R is marked as corrected.</Description>
      <Export mef="true" />
      <Derived>
        <Any>
          <Equal>
            <Left>
              <Dependency path="../nonstandardOrCorrectedChoice" />
            </Left>
            <Right>
              <Enum optionsPath="/form1099RsNonstandardCorrectedOptions">corrected</Enum>
            </Right>
          </Equal>
          <Equal>
            <Left>
              <Dependency path="../nonstandardOrCorrectedChoice" />
            </Left>
            <Right>
              <Enum optionsPath="/form1099RsNonstandardCorrectedOptions">both</Enum>
            </Right>
          </Equal>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/isNonStandard">
      <Description>Whether the form 1099-R is non-standard.</Description>

      <Derived>
        <Any>
          <Equal>
            <Left>
              <Dependency path="../nonstandardOrCorrectedChoice" />
            </Left>
            <Right>
              <Enum optionsPath="/form1099RsNonstandardCorrectedOptions">nonstandard</Enum>
            </Right>
          </Equal>
          <Equal>
            <Left>
              <Dependency path="../nonstandardOrCorrectedChoice" />
            </Left>
            <Right>
              <Enum optionsPath="/form1099RsNonstandardCorrectedOptions">both</Enum>
            </Right>
          </Equal>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/standardOrNonStandardCd">
      <Description>MeF Code used to determine whether the form 1099-R is standard or non-standard</Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="../isNonStandard" />
            </When>
            <Then>
              <String>N</String>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <String>S</String>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableFederalWithholding">
      <Name>Federal income tax withheld</Name>
      <Description>Box 4 of form 1099-R: Federal income tax withheld.</Description>

      <Writable>
        <Dollar />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/federalWithholdingExport">
      <Name>Federal income tax withheld</Name>
      <Description>Box 4 of form 1099-R: Federal income tax withheld.</Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <Round>
          <Dependency path="../writableFederalWithholding" />
        </Round>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/federalWithholding">
      <Name>Federal income tax withheld</Name>
      <Description>Box 4 of Form 1099-R: Federal income tax withheld (rounded).</Description>

      <Derived>
        <Round>
          <Switch>
            <Case>
              <When>
                <IsComplete>
                  <Dependency path="../writableFederalWithholding" />
                </IsComplete>
              </When>
              <Then>
                <Dependency path="../writableFederalWithholding" />
              </Then>
            </Case>
            <Case>
              <When>
                <True />
              </When>
              <Then>
                <Dollar>0</Dollar>
              </Then>
            </Case>
          </Switch>
        </Round>
      </Derived>
    </Fact>

    <Fact path="/form1099RsFederalIncomeTaxWithheld">
      <Name>Form 1099-R federal tax withholdings</Name>
      <Description>Total federal income tax withheld from all complete Form 1099-Rs.</Description>
      <Export downstreamFacts="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <IsComplete>
                <Dependency path="/form1099Rs" />
              </IsComplete>
            </When>
            <Then>
              <CollectionSum>
                <Dependency path="/form1099Rs/*/federalWithholding" />
              </CollectionSum>
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <Dollar>0</Dollar>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableEmployeeOrRothOrInsuranceContributions">
      <Name>1099-R Contributions and premiums</Name>
      <Description>Box 5 of form 1099-R: Employee contributions/Designated Roth contributions or insurance premiums.</Description>

      <Writable>
        <Dollar />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/employeeOrRothOrInsuranceContributions">
      <Name>1099-R Contributions and premiums</Name>
      <Description>Box 5 of Form 1099-R: Employee contributions/Designated Roth contributions or insurance premiums.</Description>
      <Export mef="true" />
      <ExportZero />

      <Derived>
        <Round>
          <Dependency path="../writableEmployeeOrRothOrInsuranceContributions" />
        </Round>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableNetAppreciation">
      <Description>Box 6 of form 1099-R: net unrealized appreciation in employer’s securities</Description>
      <Writable>
        <Dollar />
        <Limit type="Min">
          <Dollar>0</Dollar>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/netAppreciation">
      <Description>Box 6 of form 1099-R: net unrealized appreciation in employer’s securities</Description>
      <Export mef="true" />
      <ExportZero />
      <!-- This is broken into a separate fact because we need to export $0 if the user enters it, but leave it blank otherwise. -->

      <Derived>
        <Switch>
          <Case>
            <When>
              <IsComplete>
                <Dependency path="../writableNetAppreciation" />
              </IsComplete>
            </When>
            <Then>
              <Round>
                <Dependency path="../writableNetAppreciation" />
              </Round>
            </Then>
          </Case>
            <!-- Keep incomplete if Box 3 is blank. -->
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/flowKnockoutRetirementNetUnrealizedAppreciation">
      <Name>Knockout Due to net unrealized appreciation in employer’s securities</Name>
      <Description>At least one 1099R has a set of facts that cause a knockout</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/causesRetirementNetUnrealizedAppreciation" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/causesRetirementNetUnrealizedAppreciation">
      <Name>1099-R Net appreciation Knockout</Name>
      <Description>Net appreciation info in this 1099-R knocks the filer out of scope</Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <IsComplete>
                  <Dependency path="../netAppreciation" />
                </IsComplete>
                <GreaterThan>
                  <Left>
                    <Dependency path="../netAppreciation" />
                  </Left>
                  <Right>
                    <Dollar>0</Dollar>
                  </Right>
                </GreaterThan>
              </All>
            </When>
            <Then>
              <True />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <False />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/isFullyTaxable">
      <Description>Whether the form 1099-R's Box 1 amount is fully taxable.</Description>
      <Derived>
        <All>
          <Dependency path="../isFullyOrPartlyTaxablePension" />
          <Equal>
            <Left>
              <Dependency path="../grossDistribution" />
            </Left>
            <Right>
              <Dependency path="../taxableAmount" />
            </Right>
          </Equal>
        </All>
      </Derived>
    </Fact>

    <Fact path="/fullyTaxable1099Rs">
      <Name>Fully taxable 1099Rs</Name>
      <Description>Forms 1099-R with fully taxable gross distributions</Description>

      <Derived>
        <Filter path="/form1099Rs">
          <Dependency path="isFullyTaxable" />
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/notFullyTaxable1099Rs">
      <Name>Not fully taxable 1099Rs</Name>
      <Description>Forms 1099-R with taxable gross distributions that are not fully taxable</Description>

      <Derived>
        <Filter path="/form1099Rs">
          <Not>
            <Dependency path="isFullyTaxable" />
          </Not>
        </Filter>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/flowAskAboutPublicSafetyOfficer">
      <Description>Used in the flow to determine whether to show 1099-r-pso</Description>
      <Derived>
        <All>
          <GreaterThan>
            <Left>
              <Length>
                <StripChars>
                  <Input>
                    <Dependency path="../distributionCode" />
                  </Input>
                  <Allow>
                    <String>27</String>
                  </Allow>
                </StripChars>
              </Length>
            </Left>
            <Right>
              <Int>0</Int>
            </Right>
          </GreaterThan>
          <Equal>
            <Left>
              <Length>
                <StripChars>
                  <Input>
                    <Dependency path="../distributionCode" />
                  </Input>
                  <Allow>
                    <String>B</String>
                  </Allow>
                </StripChars>
              </Length>
            </Left>
            <Right>
              <Int>0</Int>
            </Right>
          </Equal>
        </All>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableQualifiedDisasterDistribution">
      <Description>Box 7: Qualified disaster is checked.</Description>
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/qualifiedDisasterDistribution">
      <Description>Box 7: Whether qualified disaster is checked after accounting for edit conditions</Description>
      <Derived>
        <Switch>
          <Case>
            <When>
              <Dependency path="../flowAskAboutIndirectRollover" />
            </When>
            <Then>
              <Dependency path="../writableQualifiedDisasterDistribution" />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/flowKnockoutRetirementQualifiedDisasterDistribution">
      <Name>Knockout when the Qualified Disaster box is checked</Name>
      <Description>At least one 1099R has a set of facts that cause a knockout</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <All>
                <IsComplete>
                  <Dependency path="/form1099Rs/*/qualifiedDisasterDistribution" />
                </IsComplete>
                <Dependency path="/form1099Rs/*/qualifiedDisasterDistribution" />
              </All>
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableQualifiedEarlyDistribution">
      <Description>Box 7: Includes an early distribution</Description>
      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/flowQualifiedEarlyDistribution">
      <Description>Adds a gate for code 1 early distribution</Description>
      <Derived>
        <Equal>
          <Left>
            <Dependency path="../distributionCode" />
          </Left>
          <Right>
            <String>1</String>
          </Right>
        </Equal>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/causesQualifiedEarlyDistributionKO">
      <Name>1099-R Early Distribution Knockout</Name>
      <Description>The filer is knocked out of scope if they have an early distribution penalty</Description>

      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <Dependency path="../flowQualifiedEarlyDistribution" />
                <IsComplete>
                  <Dependency path="../writableQualifiedEarlyDistribution" />
                </IsComplete>
              </All>
            </When>
            <Then>
              <Dependency path="../writableQualifiedEarlyDistribution" />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <False />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/flowKnockoutRetirementQualifiedEarlyDistribution">
      <Name>Knockout when a 1099R has an early distribution</Name>
      <Description>At least one 1099R has a set of facts that cause a knockout</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <All>
                <Dependency path="/form1099Rs/*/flowQualifiedEarlyDistribution"></Dependency>
                <Dependency path="/form1099Rs/*/causesQualifiedEarlyDistributionKO" />
              </All>
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableDateOfPayment">
      <Name>Date of payment</Name>
      <Description>The date of payment on the 1099-R for reportable death benefits under section 6050Y.</Description>
      <Writable>
        <Day />
        <Limit type="Max">
          <Day>2025-01-01</Day>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/causesDeathBenefitPaymentKO">
      <Name>1099-R Scope Knockout</Name>
      <Description>1099-R has a reportable death benefit payment</Description>

      <Derived>
        <IsComplete>
          <Dependency path="/form1099Rs/*/writableDateOfPayment" />
        </IsComplete>
      </Derived>

    </Fact>

    <Fact path="/flowKnockoutForDeathBenefitPaymentDate">
      <Description>The user is knocked out for having a reportable death benefit payment</Description>
      <Export downstreamFacts="true" />
      <BlockSubmissionOnTrue />

      <Derived>
        <GreaterThan>
          <Left>
            <Count>
              <Dependency path="/form1099Rs/*/causesDeathBenefitPaymentKO" />
            </Count>
          </Left>
          <Right>
            <Int>0</Int>
          </Right>
        </GreaterThan>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/writableAccountNumber">
      <Description>1099-R: account number</Description>
      <Writable>
        <String />
        <Limit type="MaxLength">
          <Int>30</Int>
        </Limit>
        <Limit type="Match">
          <String><![CDATA[(([A-Za-z0-9#\-\(\)]|&|')\s?)*([A-Za-z0-9#\-\(\)]|&|')]]></String>
        </Limit>
      </Writable>
    </Fact>

    <Fact path="/form1099Rs/*/accountNumber">
      <Name>Account number</Name>
      <Description>1099-R account number</Description>
      <Export mef="true" />

      <Derived>
        <Switch>
          <Case>
            <When>
              <IsComplete>
                <Dependency path="../writableAccountNumber" />
              </IsComplete>
            </When>
            <Then>
              <Dependency path="../writableAccountNumber" />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <String></String>
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/hasSeenLastAvailableScreen">
      <Name>Has Seen last available screen</Name>
      <Description>Whether the user has seen the last available screen for this 1099-R.</Description>

      <Writable>
        <Boolean />
      </Writable>
    </Fact>

    <Fact path="/hasCompleted1099RSection">
      <Description>The user has clicked "Done" for the APF section.</Description>

      <Writable>
        <Boolean />
      </Writable>
      <Placeholder>
        <False />
      </Placeholder>
    </Fact>

    <Fact path="/form1099RsIsComplete">
      <Description>Whether the 1099-r section be considered complete.</Description>
      <Export downstreamFacts="true" />

      <Derived>
        <Any>
          <!-- TP answered that they did not have any 1099Rs in the 1099R section at launch -->
          <Not>
            <Dependency path="/hasSome1099rFormsBeforeSectionEnabled" />
          </Not>

          <!-- Feature flag is turned on and they have completed the post release 1099R section -->
          <All>
            <Dependency path="/is1099RFeatureFlagEnabled" />
            <Dependency path="/hasCompleted1099RSection" />
          </All>
        </Any>
      </Derived>
    </Fact>

    <Fact path="/form1099Rs/*/isComplete">
      <Name>Is Complete</Name>
      <Description>Whether the 1099-R is complete</Description>
      <Derived>
        <Switch>
          <Case>
            <When>
              <All>
                <Any>
                  <Not>
                    <Dependency path="../hasDifferentRecipientAddress" />
                  </Not>
                  <IsComplete>
                    <Dependency path="../addressOverride" />
                  </IsComplete>
                </Any>
                <Any>
                  <Not>
                    <Dependency path="../flowQualifiedEarlyDistribution" />
                  </Not>
                  <IsComplete>
                    <Dependency path="../writableQualifiedEarlyDistribution" />
                  </IsComplete>
                </Any>
                <Any>
                  <Not>
                    <Dependency path="../flowAskAboutIndirectRollover" />
                  </Not>
                  <All>
                    <IsComplete>
                      <Dependency path="../writableIsIndirectRollover" />
                    </IsComplete>
                    <IsComplete>
                      <Dependency path="../writableQualifiedDisasterDistribution" />
                    </IsComplete>
                    <IsComplete>
                      <Dependency path="../writableIsDistributionFromMilitaryRetirementPlan" />
                    </IsComplete>
                  </All>
                </Any>
                <Any>
                  <Not>
                    <Dependency path="../flowAskAboutPublicSafetyOfficer" />
                  </Not>
                  <All>
                    <IsComplete>
                      <Dependency path="../writeablePublicSafetyOfficer" />
                    </IsComplete>
                    <Any>
                      <Not>
                        <Dependency path="../flowAskAboutPSOPremiums" />
                      </Not>
                      <IsComplete>
                        <Dependency path="../writeablePublicSafetyOfficerPremiums" />
                      </IsComplete>
                    </Any>
                  </All>
                </Any>
                <Dependency path="../hasSeenLastAvailableScreen" />
              </All>
            </When>
            <Then>
              <True />
            </Then>
          </Case>
          <Case>
            <When>
              <True />
            </When>
            <Then>
              <False />
            </Then>
          </Case>
        </Switch>
      </Derived>
    </Fact>
  </Facts>
</FactDictionaryModule>
