package gov.irs.directfile.error;

import lombok.Getter;
import org.springframework.http.HttpStatus;

@Getter
public enum StateApiErrorCode {
    E_BEARER_TOKEN_MISSING(HttpStatus.UNAUTHORIZED),
    E_BAD_JWT_BEARER_TOKEN(HttpStatus.UNAUTHORIZED),
    E_AUTHORIZATION_CODE_NOT_EXIST(HttpStatus.UNAUTHORIZED),
    E_AUTHORIZATION_CODE_EXPIRED(HttpStatus.UNAUTHORIZED),
    E_MISMATCHED_STATE_CODE(HttpStatus.BAD_REQUEST),
    E_AUTHORIZATION_CODE_INVALID_FORMAT(HttpStatus.BAD_REQUEST),
    E_ACCOUNT_ID_MISSING_IN_JWT_TOKEN(HttpStatus.BAD_REQUEST),
    E_ACCOUNT_ID_NOT_EXIST(HttpStatus.BAD_REQUEST),
    E_ACCOUNT_ARCHIVED(HttpStatus.FORBIDDEN),
    E_STATE_NOT_EXIST(HttpStatus.NOT_FOUND),
    E_JWT_VERIFICATION_FAILED(HttpStatus.UNAUTHORIZED),
    E_CERTIFICATE_NOT_FOUND(HttpStatus.INTERNAL_SERVER_ERROR),
    E_CERTIFICATE_EXPIRED(HttpStatus.FORBIDDEN),
    E_TAX_RETURN_NOT_ACCEPTED(HttpStatus.CONFLICT),
    E_TAX_RETURN_NOT_ACCEPTED_OR_PENDING(HttpStatus.CONFLICT),
    E_TAX_RETURN_NOT_FOUND(HttpStatus.NOT_FOUND),
    E_INTERNAL_SERVER_ERROR(HttpStatus.INTERNAL_SERVER_ERROR),
    E_STATE_API_DISABLED(HttpStatus.SERVICE_UNAVAILABLE),
    E_TAX_RETURN_NOT_SUBMITTED(HttpStatus.CONFLICT), // returned from direct-file status app
    E_TIN_NOT_FOUND_IN_XML(HttpStatus.INTERNAL_SERVER_ERROR), // for audit
    E_EXPORTED_FACTS_DISABLED(HttpStatus.SERVICE_UNAVAILABLE);

    final HttpStatus httpStatus;

    StateApiErrorCode(HttpStatus httpStatus) {
        this.httpStatus = httpStatus;
    }
}
