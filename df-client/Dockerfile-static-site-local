#syntax=docker/dockerfile:1.7-labs
FROM node:18-bookworm AS df-static-site-builder

ARG ENABLE_SCREENER_EGAIN_CHAT="0"
ARG ENABLE_SCREENER_EGAIN_CHAT_NON_PROD="0"

WORKDIR /build

COPY package.json package-lock.json ./
COPY js-factgraph-scala/package.json ./js-factgraph-scala/
COPY df-static-site/package.json ./df-static-site/
COPY eslint-plugin-df-rules/package.json ./eslint-plugin-df-rules/
COPY --parents packages/*/package.json .

RUN npm ci

COPY tsconfig.base.json ./
COPY js-factgraph-scala/src/ ./js-factgraph-scala/src/
COPY df-client-app/tsconfig.json ./df-client-app/
COPY df-static-site/index.html \
    df-static-site/.env.development \
    df-static-site/tsconfig.json \
    df-static-site/vite.config.ts \
    ./df-static-site/
COPY eslint-plugin-df-rules/tsconfig.json ./eslint-plugin-df-rules/tsconfig.json
COPY eslint-plugin-df-rules/src/ ./eslint-plugin-df-rules/src/
COPY packages/ ./packages/

COPY df-static-site/src/ ./df-static-site/src/
COPY df-static-site/public/ ./df-static-site/public/

WORKDIR df-static-site/

RUN npm run test:ci
RUN npm run build

# 2. serve static build with nginx.  config here to avoid file clutter
FROM nginx:latest
COPY --from=df-static-site-builder /build/df-static-site/dist/ /static
RUN echo "events {}\n\
http {\n\
    include mime.types;\n\
    sendfile on;\n\
    server {\n\
    	listen 3500;\n\
    	autoindex off;\n\
    	server_name _;\n\
    	server_tokens off;\n\
    	root /static;\n\
    	gzip_static on;\n\
    	location / {\n\
    		try_files \$uri /index.html;\n\
    	}\n\
    }\n\
}\n" > /etc/nginx/nginx.conf
